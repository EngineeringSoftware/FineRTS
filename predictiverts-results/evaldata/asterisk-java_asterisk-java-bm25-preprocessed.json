[
    {
        "changed_files": [
            "src/main/java/org/asteriskjava/pbx/internal/activity/ActivityHelper.java",
            "src/main/java/org/asteriskjava/pbx/internal/asterisk/MeetmeRoomControl.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerConnection.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerEventQueue.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialLocalToAgiActivity.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialToAgiWithAbortCallback.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/FilteredManagerListenerWrapper.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/ListenerManager.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/PeerMonitor.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/Dial.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/DialToAgi.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/EventListenerBaseClass.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/OriginateBaseClass.java",
            "src/test/java/org/asteriskjava/pbx/internal/core/ListenerManagerTest.java"
        ],
        "changed_files_num": 14,
        "changed_java_files": [
            "src/main/java/org/asteriskjava/pbx/internal/activity/ActivityHelper.java",
            "src/main/java/org/asteriskjava/pbx/internal/asterisk/MeetmeRoomControl.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerConnection.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerEventQueue.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialLocalToAgiActivity.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialToAgiWithAbortCallback.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/FilteredManagerListenerWrapper.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/ListenerManager.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/PeerMonitor.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/Dial.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/DialToAgi.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/EventListenerBaseClass.java",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/OriginateBaseClass.java",
            "src/test/java/org/asteriskjava/pbx/internal/core/ListenerManagerTest.java"
        ],
        "changed_java_files_num": 14,
        "commit": "2225b892",
        "data_objects": {
            "AbstractAgiCommandTest": "escapeAndQuote \"MY \" return Override this s s s s s String String String serialVersionUID long final AbstractAgiCommand extends \"MY \\\"first \\\\\\\\\\\\\\\" second \\\\\\\\\\\\\\\" third\\\"\" \"first \\\\\\\" second \\\\\\\" third\" testEscapedQuotesAJ192 \"MY \\\"Caller is:John Doe\\\"\" \"Caller is:\\nJohn Doe\" testEscapeAndQuoteWithStringContainingNewline \"MY \\\"\\\\\\\"John Doe\\\\\\\" is calling\\\"\" \"\\\"John Doe\\\" is calling\" testEscapeAndQuoteWithStringContainingQuotes \"\" testEscapeAndQuoteWithEmptyString \"MY \\\"\\\"\" \"MY \\\"\\\"\" null testEscapeAndQuoteWithNullString buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand \"MY \\\"just a string\\\"\" \"just a string\" new new new new new new testEscapeAndQuote void void void void void void @ @ @ @ @ @ @ myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand private private private AbstractAgiCommandTest class class public public public public public public public public public public Test Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static static import import command fastagi asteriskjava org org org package ",
            "AbstractManagerEventListenerTest": "shouldHandleJoinEvent void @ AbstractManagerEventListenerTest class public public Test Test LeaveEvent JoinEvent event event assertTrue Assert junit junit static import import import import manager manager manager asteriskjava asteriskjava asteriskjava org org org org org package ",
            "ActionBuilderImplTest": "\"This method must not be considered a getter relevant for building the action\" i int getIndexedProperty \"This method must not be considered a getter\" get privateProperty privateProperty getNonPublicProperty protected protected getSecondProperty getFirstProperty \"My\" return return return return return return getAction Override nonPublicProperty nonPublicProperty nonPublicProperty secondProperty secondProperty secondProperty secondProperty secondProperty Integer Integer Integer firstProperty firstProperty firstProperty firstProperty firstProperty serialVersionUID long final extends \"property-3: value3\\r\\n\" \"Incorrect mapping of property with annotated field\" testBuildActionWithAnnotatedField determineFieldName determineFieldName determineFieldName \"property1\" \"property1\" \"property1\" testDetermineFieldName \"property-2: value2\\r\\n\" \"Incorrect mapping of property with annotated setter\" testBuildActionWithAnnotatedSetter \"isProperty1\" \"isProperty1\" \"getProperty1\" \"getProperty1\" determineSetterName determineSetterName \"setProperty1\" \"setProperty1\" \"setProperty1\" testDetermineSetterName \"property-1: value1\\r\\n\" \"Incorrect mapping of property with annotated getter\" \"value3\" \"value3\" \"value3\" AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction testBuildActionWithAnnotatedGetter \"Incorrect mapping of variable property\" ASTERISK_1_6 \"var2\" \"peer\" testBuildActionForSipNotifyAction \"variable: var1=value1\\r\\nvariable: VAR2=value2\\r\\n\" setVariables \"value2\" \"value2\" \"value2\" \"value2\" \"value2\" \"VAR2\" \"value1\" \"value1\" \"value1\" \"value1\" \"value1\" \"var1\" \"var1\" map map map map map testBuildActionWithVariableMapForAsterisk12 \"variable: var1=value1\\r\\nvariable: var2=\\r\\nvariable: var3=value3\\r\\n\" testBuildActionWithVariablesForAsterisk12WithNullValues \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" ASTERISK_1_2 ASTERISK_1_2 ASTERISK_1_2 setTargetVersion setTargetVersion setTargetVersion setTargetVersion testBuildActionWithVariablesForAsterisk12 \"variable: var1=value1|var2=|var3=value3\\r\\n\" \"var1=value1|var2=|var3=value3\" \"var1=value1|var2=|var3=value3\" testBuildActionWithVariablesForAsterisk10WithNullValues \"variable: var1=value1|var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"var1=value1|var2=value2\" \"var1=value1|var2=value2\" setVariable setVariable setVariable setVariable setVariable setVariable originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction testBuildActionWithVariablesForAsterisk10 \"deprecation\" \"deprecation\" \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings SuppressWarnings SuppressWarnings \"mapmember: Key1=Value1|Key2=Value2|Key3=Value3\\r\\n\" \"Map member missing\" \"stringmember: stringMemberValue\\r\\n\" \"Regular member missing\" \"UserEvent: myuser\\r\\n\" \"Event name missing\" \"action: UserEvent\\r\\n\" setMapMember \"stringMemberValue\" setStringMember \"Value3\" \"Key3\" \"Value2\" \"Key2\" \"Value1\" \"Key1\" put put put put put mapMemberTest mapMemberTest mapMemberTest mapMemberTest mapMemberTest setUserEvent event event event event event MyUserEvent MyUserEvent testBuildUserEventAction \"Cat-000000: testcategory\" \"Action missing category testcategory - \" \"action: Action\" \"UpdateConfig actions must not have more than one 'action' header\" \"Action-0:\" \"Action must have zero-padded 6 digit numbering\" \"reload: Yes\" \"Correct reload setting missing\" \"dstfilename: destfile.conf\" \"Destination filename missing\" \"srcfilename: sourcefile.conf\" \"Source filename missing\" \"action: UpdateConfig\" null null null \"testcategory\" ACTION_NEWCAT addCommand true setReload \"destfile.conf\" setDstFilename \"sourcefile.conf\" setSrcFilename testBuildUpdateConfigAction \"actioncompleteeventclass:\" \"Action contains actionCompleteEventClass property\" \"action: Agents\\r\\n\" testBuildEventGeneratingAction testBuildActionWithNullValue length length \"Incorrect length\" \"Incorrect length\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" endsWith endsWith endsWith endsWith \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"secondproperty: 2\\r\\n\" \"Second property missing\" \"firstproperty: first value\\r\\n\" \"firstproperty: first value\\r\\n\" \"First property missing\" \"First property missing\" \"action: My\\r\\n\" \"action: My\\r\\n\" indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction \"private\" setNonPublicProperty setNonPublicProperty setSecondProperty setSecondProperty \"first value\" \"first value\" setFirstProperty setFirstProperty setFirstProperty actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String myAction myAction myAction myAction myAction myAction myAction myAction myAction myAction MyAction MyAction MyAction MyAction MyAction testBuildAction new new new new new new new new new new new new new new new new new new this this this this this setUp void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl private private private private private ActionBuilderImplTest class class public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before UserEventAction UserEventAction UserEventAction UpdateConfigAction UpdateConfigAction UpdateConfigAction UpdateConfigAction SipNotifyAction SipNotifyAction SipNotifyAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction AgentsAction AgentsAction AgentsAction AbstractManagerAction AbstractManagerAction action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion Map Map Map LinkedHashMap LinkedHashMap LinkedHashMap util util java java assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org package ",
            "AgiChannelImplTest": "getExtra name getAttribute getStatus return return return return getResult getResultCodeAsChar char getResultCode getLines UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException throw throw throw throw throw throw getFirstLine usage usage usage usage usage synopsis synopsis synopsis synopsis synopsis result result result result result String String String String String String String String String String String String String String status status status status status int int int int serialVersionUID long final implements getUsage getUsage \"Incorrect usage\" getSynopsis getSynopsis \"Incorrect sysnopsis\" \"Invalid command syntax: NOOP Synopsis\" \"must throw InvalidCommandSyntaxException\" \"NOOP Usage\" \"NOOP Usage\" setUsage setUsage \"NOOP Synopsis\" \"NOOP Synopsis\" setSynopsis setSynopsis SC_INVALID_COMMAND_SYNTAX testSendCommandWithInvalidCommandSyntaxResponse getMessage getMessage \"Invalid or unknown command: NOOP\" \"Incorrect message\" \"Incorrect message\" e e e e e e catch catch \"must throw InvalidOrUnknownCommandException\" try try SC_INVALID_OR_UNKNOWN_COMMAND testSendCommandWithInvalidOrUnknownCommandResponse andReturn andReturn andReturn readReply readReply readReply sendCommand sendCommand sendCommand sendCommand sendCommand sendCommand \"0\" \"0\" \"0\" setResult setResult setResult setResult SC_SUCCESS setStatus setStatus setStatus setStatus SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply Exception Exception Exception throws throws throws testSendCommand null AgiChannelImpl new new new new new new new new new new new new new this this this this this this this setUp void void void void void void void void @ @ @ @ agiChannel agiChannel agiChannel agiChannel agiChannel agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter private private private private private private private private AgiChannelImplTest class class class class public public public public public public public public public public public public public public public public public public public public Test Test Test Test Before Before AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand command command command command command command command command command command command command command InvalidOrUnknownCommandException InvalidOrUnknownCommandException InvalidCommandSyntaxException InvalidCommandSyntaxException AgiWriter AgiWriter AgiWriter AgiReader AgiReader AgiReader AgiChannel AgiChannel List List util java fail fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify verify replay replay replay replay replay replay replay expect expect expect expect createMock createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org package ",
            "AgiReaderImplTest": "e catch \"Must throw AgiHangupException\" try null testReadReplyWhenHungUp getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" testReadReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testReadReplyInvalidOrUnknownCommand getResultCode \"Incorrect result\" getStatus getStatus getStatus SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" readReply readReply readReply readReply \"200 result=49 endpos=2240\" testReadReply \"incorrect remote port\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect local port\" getAddress getAddress getAddress getAddress getAddress getAddress getAddress getAddress \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" getChannel \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" readRequest getRemotePort getRemotePort getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote getLocalPort getLocalPort getByAddress getByAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress byteValue byteValue byteValue byteValue byteValue byteValue byteValue byteValue valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf Integer Integer Integer Integer Integer Integer Integer Integer ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal byte byte byte byte \"\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine request request request request request request request request request request request request request request request Exception Exception Exception Exception Exception throws throws throws throws throws testReadRequest FastAgiReader new new new this this setUp void void void void void void @ @ @ @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket agiReader agiReader agiReader agiReader agiReader agiReader agiReader private private AgiReaderImplTest class class public public public public public public public Test Test Test Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply AgiRequest AgiRequest AgiReader AgiReader AgiHangupException AgiHangupException InetAddress InetAddress InetAddress net java fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org package ",
            "AgiReplyImplTest": "testBuildReplyInvalidCommandSyntaxWithOnlyUsage getUsage \"Deletes an entry in the Asterisk database for a given family and key. Returns 1 if succesful, 0 otherwise\" \"Incorrect usage\" getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" \"520-Invalid command syntax.  Proper usage follows:\" testBuildReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testBuildReplyInvalidOrUnknownCommand \"200 result=1 ((hello)(world)) endpos=2240\" testBuildReplyWithAdditionalAttributeAndParenthesis \"(hello)(world)\" \"(hello)(world)\" \"Incorrect parenthesis\" \"Incorrect parenthesis\" \"200 result=1 ((hello)(world))\" testBuildReplyWithParenthesis println out System testBla \"hi \\\"joe!\\\"\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"hi \\\\\\\"joe!\\\\\\\"\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute2 \"text0\" \"text0\" \"123456789\" \"Incorrect text0 attribute\" \"Incorrect text0 attribute\" getExtra getExtra getExtra getExtra \"speech\" \"speech\" \"Incorrect extra\" \"Incorrect extra\" \"0\" \"0\" \"1\" \"1\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"123456789\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute \"startpos\" \"1234\" \"Incorrect startpos attribute\" \"200 result=49 startpos=1234 endpos=2240\" testBuildReplyWithMultipleAdditionalAttribute \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"2240\" \"2240\" \"2240\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"200 result=49 endpos=2240\" testBuildReplyWithAdditionalAttribute \"result\" \"result\" \"result\" \"result\" \"result\" getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute \"49\" \"49\" \"49\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" getResultCodeAsChar getResultCodeAsChar getResultCodeAsChar '1' '1' '1' \"Incorrect result as character\" \"Incorrect result as character\" \"Incorrect result as character\" getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"200 result=49\" add add add add add add add add add add add add add add add add add add add add reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl testBuildReply new new new new new new new new new new new this setUp void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String private AgiReplyImplTest class public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Before Before List List ArrayList ArrayList util util java java assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import import import internal fastagi asteriskjava org org org org org package ",
            "AgiRequestImplTest": "getCallerIdNumber \"incorrect callerIdNumber\" \"agi_callerid: 1234\" testBuildRequestWithoutCallerIdName \"12345\" \"incorrect accountCode\" \"agi_accountcode: 12345\" testBuildRequestWithAccountCode getAccountCode getAccountCode \"incorrect accountCode must not be set\" getEnhanced FALSE Boolean \"incorrect enhanced\" getPriority Integer \"incorrect priority\" getExtension \"incorrect extension\" getContext \"local\" \"incorrect context\" getRdnis \"9876\" \"incorrect rdnis\" getDnid \"8870\" \"8870\" \"incorrect dnid\" getCallerIdName \"John Doe\" \"incorrect callerIdName\" getCallerId getCallerId \"1234\" \"1234\" \"1234\" \"incorrect callerId\" \"incorrect callerId\" getLanguage \"en\" \"incorrect language\" getUniqueId \"1110023416.6\" getType \"SIP\" \"incorrect type\" \"incorrect uniqueId\" \"incorrect uniqueId\" getChannel getChannel \"SIP/1234-d715\" \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" AgiRequestImpl AgiRequestImpl AgiRequestImpl \"agi_accountcode: \" \"agi_enhanced: 0.0\" \"agi_priority: 1\" \"agi_extension: 8870\" \"agi_context: local\" \"agi_rdnis: 9876\" \"agi_dnid: 8870\" \"agi_callerid: John Doe<1234>\" \"agi_uniqueid: 1110023416.6\" \"agi_type: SIP\" \"agi_language: en\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" \"agi_network: yes\" add add add add add add add add add add add add add add add add add add add new new new new new new new request request request request request request request request request request request request request request request request request request request request request request request request request lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String String String String String testBuildRequest void void void \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings @ @ @ @ @ AgiRequestImplTest class public public public public Test Test Test Test AgiRequest AgiRequest AgiRequest AgiRequest List List List List ArrayList ArrayList ArrayList ArrayList util util java java fail assertNull assertNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import internal fastagi fastagi asteriskjava asteriskjava org org org org org org org package ",
            "AgiWriterImplTest": "sendCommand flush \"STREAM FILE \\\"welcome\\\" \\\"\\\"\\n\" write \"welcome\" Exception throws testSendCommand FastAgiWriter new new this this setUp void void @ @ socket socket socket socket socket socket socket agiWriter agiWriter agiWriter private private AgiWriterImplTest class class public public public Test Test Before Before junit junit SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StreamFileCommand StreamFileCommand StreamFileCommand command command command command AgiWriter AgiWriter verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static import import import import import import import import internal fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org package ",
            "AstUtilTest": "\"-none-\" \"\\\"-none-\\\" must be considered null\" testIsNullForIpAddressInPeerEntryEvent \"<unknown>\" \"<unknown> must be null\" \"unknown\" \"unknown must be null\" isNull isNull isNull isNull \"null must be null\" testIsNull \"3496853210\" \"3496853210\" \"\\\"3496853210\\\" <3496853210>\" s s s String testAJ120 \"Hans Wurst <  > \" \"Hans Wurst <>\" \"\\\"Hans Wurst\\\"\" \"Hans Wurst <  1234 >   \" \"1234\" \"1234\" \"1234\" testParseCallerIdNumber \" \" \" \" \"\" \"\" \" 1234> \" \"1234>\" \" <1234 \" \"<1234\" \" <1234> \" \"<1234>\" \" Hans Wurst \" \"\\\"Hans <Wurst>\\\" <1234>\" \"Hans <Wurst>\" \" Hans Wurst  <1234>  \" \"Hans Wurst <1234>\" \"  \\\"  Hans Wurst  \\\"   <1234>  \" \"  \\\"Hans Wurst  \\\"   <1234>  \" \"\\\" Hans Wurst \\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\"<1234>\" \"\\\"Hans Wurst\\\"<1234>\" parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" testParseCallerIdName null null null null null null null null null null null null null null null null \"null must be false\" \"false\" \"false must be false\" \"true\" \"true must be true\" \"Enabled\" \"Enabled must be true\" \"ON\" \"ON must be true\" \"on\" isTrue isTrue isTrue isTrue isTrue isTrue AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil \"on must be true\" testIsTrue void void void void void void @ @ @ @ @ @ AstUtilTest class public public public public public public public Test Test Test Test Test Test Test assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit static static static import import import import util asteriskjava org org org org org package ",
            "AsteriskAgentImplTest": "\"wrong number of propagated changes\" updateState getSource \"wrong queue\" getNewValue AGENT_RINGING AGENT_RINGING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener getState testUpdateStatus AGENT_IDLE AGENT_IDLE AGENT_IDLE \"Agent/999\" \"Testagent\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int agent agent agent agent agent agent AsteriskAgentImpl AsteriskAgentImpl private private AsteriskAgentImplTest class public public public public Test Test Before Before AgentState AgentState AgentState AgentState AgentState AgentState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsteriskChannelImplTest": "\"wrong number of propagated changes\" getSource \"wrong source\" getNewValue DIALING DIALING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener testStateChange DOWN DOWN stateChanged stateChanged getDate getDate getDate \"0123456789.123\" \"SIP/1234\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int channel channel channel channel channel channel AsteriskChannelImpl AsteriskChannelImpl private private AsteriskChannelImplTest class public public public public Test Test Before Before DateUtil DateUtil DateUtil DateUtil util ChannelState ChannelState ChannelState ChannelState ChannelState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import internal live live asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "AsteriskQueueMemberImplTest": "server AsteriskServerImpl numberOfChanges int queueMember AsteriskQueueMemberImpl private private private AsteriskQueueMemberImplTest class public Test Before QueueMemberState PropertyChangeListener PropertyChangeEvent beans beans java java assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsyncAgiEventTest": "\"agi_request: async: bla\" \"agi_request%3a%20async%3a%20bla\\n\" testDecodeEnvWithMoreThanTwoDelimiters \"agi_threadid: -1231783024\" get get get \"agi_calleridname: Stefan Reuter\" decodeEnv decodeEnv \"agi_threadid%3a%20-1231783024\\n\" \"agi_accountcode%3a%20\\n\" \"agi_enhanced%3a%200.0\\n\" \"agi_priority%3a%201\\n\" \"agi_extension%3a%203115\\n\" \"agi_context%3a%20from-local\\n\" \"agi_rdnis%3a%20unknown\\n\" \"agi_dnid%3a%203115\\n\" \"agi_callingtns%3a%200\\n\" \"agi_callington%3a%200\\n\" \"agi_callingani2%3a%200\\n\" \"agi_callingpres%3a%200\\n\" \"agi_calleridname%3a%20Stefan%20Reuter\\n\" \"agi_callerid%3a%201312\\n\" \"agi_version%3a%20SVN-branch-1.6.0-r110832\\n\" \"agi_uniqueid%3a%201207271023.41\\n\" \"agi_type%3a%20SIP\\n\" \"agi_language%3a%20en\\n\" \"agi_channel%3a%20SIP%2f1312-b70020a8\\n\" \"agi_request%3a%20async\\n\" setEnv setEnv env env env env env env env String String this this new new AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent testDecodeEnv void void @ @ AsyncAgiEventTest class public public public Test Test Test List List List util java assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import import event event event event event event event manager asteriskjava org org org package ",
            "BridgeEnterEventComparatorTest": "withoutPrefix_shouldId2BeGreater void @ new bridgeEnterEventComparator BridgeEnterEventComparator BridgeEnterEventComparator private BridgeEnterEventComparatorTest class public public Test Test Assert junit junit BridgeEnterEvent event import import import bridge backwardsCompatibility internal manager manager asteriskjava asteriskjava org org org org package ",
            "CallerIdTest": "\"\\\"Hans Wurst\\\" <>\" testValueOfWithNullLiteralInNumber \"<1234>\" \"\\\"<Unknown>\\\" <1234>\" \"\\\"\\\" <1234>\" testValueOfWithNullLiteralInName toString toString \"Hans Wurst <1234>\" \"\\\"Hans Wurst\\\" <1234>\" valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId testValueOf null null null null null null null null null null \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" new new new new new new new new new new new callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId testEquals void void void void @ @ @ @ CallerIdTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "CdrEventTest": "toString \"Mon May 29 13:17:21 CEST 2006\" \"2006-05-29 13:17:21\" \"Europe/Monaco\" testBug \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone getTime getTime getStartTimeAsDate getStartTimeAsDate getStartTimeAsDate testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone getTimeZone setDefault setDefault setDefault getDefault \"2006-05-19 11:54:48\" setStartTime setStartTime this new setUp void void void void void @ @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent CdrEvent CdrEvent CdrEventTest class public public public public public public Test Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import event manager asteriskjava org org org org org package ",
            "ChannelReloadEventTest": "\"Channel module reload by CLI command\" testGetReloadReasonDescription REASON_CLI_RELOAD \"CLIRELOAD\" \"CLIRELOAD (Channel module reload by CLI command)\" \"CLIRELOAD (Channel module reload by CLI command)\" testGetReloadReasonCode getReloadReasonDescription getReloadReasonDescription getReloadReasonCode getReloadReasonCode getReloadReasonCode null setReloadReason setReloadReason setReloadReason testNullReloadReason new this this setUp void void void void @ @ @ @ ChannelReloadEvent ChannelReloadEvent ChannelReloadEvent private ChannelReloadEventTest class public public public public public Test Test Test Test Before Before assertNull assertNull assertNull assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import event event event event event event event event event event event manager asteriskjava org org org org org package ",
            "ClassNameMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" determineScript determineScript determineScript determineScript \"org.asteriskjava.fastagi.HelloAgiScript\" \"org.asteriskjava.fastagi.HelloAgiScript\" return return getScript getScript String String Override Override SimpleAgiRequest SimpleAgiRequest request request request request request request request request AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript new new new this setUp void void void @ @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ClassNameMappingStrategy ClassNameMappingStrategy private ClassNameMappingStrategyTest class class class public public public public public public Test Test Test Before Before assertTrue assertTrue assertTrue assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "CompositeMappingStrategyTest": "\"org.asteriskjava.fastagi.HelloAgiScript\" testAJ37ClassName HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" \"no script determined\" null null determineScript determineScript script script script script script script AgiScript AgiScript SimpleAgiRequest SimpleAgiRequest request request request request AgiRequest AgiRequest testAJ37ResourceBundle ClassNameMappingStrategy \"test-mapping\" ResourceBundleMappingStrategy new new new new new setUp void void void @ @ @ strategy strategy strategy strategy CompositeMappingStrategy CompositeMappingStrategy private CompositeMappingStrategyTest class class class public public public public Test Test Test Before Before assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "ConfigFileParserTest": "format println out System getCategories for \"/etc/asterisk/sip2.conf\" readFile XtestReadConfig \"No '=' (equal sign) in line 20 of extensions.conf\" MissingEqualSignException \"Expected exception when parsing a line without a '='\" \"\" \"foo=\" \"s-NOANSWER,1,Hangup\" \"Incorrect value\" \"Incorrect value\" \"exten\" \"Incorrect name\" \"Incorrect name\" \"exten => s-NOANSWER,1,Hangup\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" parseVariable parseVariable parseVariable variable variable variable variable variable variable variable variable variable testParseVariable \"Directive '#include' needs an argument (filename) at line 805 of /etc/asterisk/sip.conf\" MissingDirectiveParameterException \"Expected exception when parsing a line with a directive but no parameter\" \"#include   \" \"/etc/asterisk/sip.conf\" \"Unknown directive 'foo' at line 20 of abc.conf\" UnknownDirectiveException \"Expected exception when parsing a line with an unknown directive\" \"#foo\" getExecFile \"/usr/local/test.sh\" \"Incorrect exec file\" ExecDirective ExecDirective \"#exec   </usr/local/test.sh>   \" getIncludeFile \"/etc/asterisk/inc.conf\" \"Incorrect include file\" IncludeDirective IncludeDirective \"Incorrect type of configDirective\" \"Incorrect type of configDirective\" \"#include \\\"/etc/asterisk/inc.conf\\\"\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" parseDirective parseDirective parseDirective parseDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective ConfigDirective testParseDirective \"parse error: no closing ')', line 1 of test.conf\" \"Expected exception when closing ')' is missing\" \"[foo](bar\" \"parse error: no closing ']', line 1 of test.conf\" \"Expected exception when closing ']' is missing\" \"[foo\" getMessage getMessage getMessage getMessage getMessage getMessage \"Inheritance requested, but category 'a' does not exist, line 1 of test.conf\" e e e e e e e e e e e e e e ConfigParseException ConfigParseException ConfigParseException ConfigParseException ConfigParseException catch catch catch catch catch catch \"Expected exception when requesting inheritance from a non-existing catagory\" \"[foo](a)\" try try try try try try \"[foo](+)\" isTemplate \"Category not flagged as template\" \"[foo](!)\" getFileName getFileName getFileName getFileName getFileName \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" getLineNumber getLineNumber getLineNumber getLineNumber getLineNumber \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"foo\" \"foo\" \"foo\" \"foo\" \"foo\" \"Incorrect category name\" \"Incorrect category name\" \"Incorrect category name\" \"[foo]\" parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader category category category category category category category category category category category category testParseCategoryHeader getComment \"a line comment\" \"Incorrect comment\" getValue getValue getValue \"b\" \"Incorrect variable value\" getName getName getName getName getName getName \"a\" \"Incorrect variable name\" configVariable configVariable configVariable getClass getClass getClass ConfigVariable ConfigVariable ConfigVariable ConfigVariable \"Incorrect type of configElement\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" processLine configElement configElement configElement configElement ConfigElement \"cat\" Category Category Category appendCategory flip put length allocate buffer buffer buffer buffer \" a ;-- comment --; = b ; a line comment\" s s s String Exception Exception throws throws throws throws testProcessLine new new setUp void void void void void void @ @ @ @ @ configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader ConfigFileReader ConfigFileReader ConfigFileParserTest class class class class public public public public public public public Test Test Test Test Test Before Before CharBuffer CharBuffer CharBuffer nio java fail fail fail fail fail fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static import import import import import import config asteriskjava org org org org org org package ",
            "CoreStatusResponseTest": "null testGetCoreStartupTimeAsDateIfDateIsNull toString getCoreStartupDateTimeAsDate \"Wed May 27 02:49:15 CEST 2009\" \"02:49:15\" setCoreStartupTime \"2009-05-27\" setCoreStartupDate setCoreStartupDate \"TimeZone not found\" \"TimeZone not found\" testGetCoreStartupTimeAsDate tearDown setDefault setDefault getDefault new this setUp void void void void @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone CoreStatusResponse CoreStatusResponse \"Europe/Berlin\" getTimeZone tz tz tz tz tz private private private CoreStatusResponseTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit static static static import import import import import import import response response response response response response response manager asteriskjava org org org org org org org package ",
            "DateUtilTest": "\"Fri May 19 09:54:48 GMT 2006\" \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone toString toString \"Fri May 19 11:54:48 GMT 2006\" getTime getTime parseDateTime parseDateTime DateUtil DateUtil result result result result result result testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone setDefault setDefault getDefault setUp void void void void @ @ @ @ \"2006-05-19 11:54:48\" dateString dateString dateString String final final final final defaultTimeZone defaultTimeZone defaultTimeZone DateUtilTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone Date Date Date java java assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import import util util util asteriskjava org org org org org package ",
            "DefaultAgiServerTest": "e catch startup try close flush \"VERBOSE \\\"No script configured for null\\\" 1\\n\" write getRemotePort getRemoteAddress getLocalPort getLocalAddress null null null null andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine XtestStartup testDummy shutdown Exception Exception throws throws tearDown MockedDefaultAgiServer new new setUp void void void void @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket serverSocket serverSocket MockedServerSocketFacade MockedServerSocketFacade server server server server DefaultAgiServer private private private DefaultAgiServerTest class class public public public public public Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade ServerSocketFacade util util IOException IOException io java assertEquals Assert junit junit junit junit verify replay replay expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static import import import import import import import import import import import fastagi asteriskjava asteriskjava asteriskjava org org org org org org org org org org org package ",
            "EventBuilderImplTest": "\"1\" testBuildEventWithOnePeerEntryEventList \"Invalid size of peers property\" \"Invalid size of peers property\" \"UNKNOWN literal returns NULL status\" getStatus getStatus getStatus getStatus \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" getObjectName getObjectName getObjectName getObjectName getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"ActionId is invalid\" \"ActionId is invalid\" \"3\" \"listitems\" \"listitems\" \"LAGGED\" \"LAGGED\" \"UNKNOWN\" \"OK\" \"OK\" \"OK\" \"OK\" \"status\" \"status\" \"a103\" \"a103\" \"a102\" \"a102\" \"a101\" \"a101\" \"a101\" \"a101\" \"objectname\" \"objectname\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"PeerlistComplete\" \"PeerlistComplete\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" testBuildEventWithPeerEntryEventList getT38SessionDuration \"Property 'T38 Session Duration' is not set correctly\" \"120\" \"120\" \"t38 session duration\" \"T38FaxStatus\" testBuildEventWithSpace testBuildEventWithMapPropertyAndOnlyOneEntry size size size size \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" get get get get get get get get get get get getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"var2=val2\" \"var1=val1\" \"var1=val1\" asList asList asList asList asList asList \"variable\" \"variable\" \"AgentCalled\" \"AgentCalled\" testBuildEventWithMapProperty getReceivedPackets \"Property receivedPacket is not set correctly\" testBuildEventForRtpReceiverStatEventAJ139 getSsrc long long \"Property SSRC is not set correctly\" \"0\" \"0\" \"receivedpackets\" \"receivedpackets\" \"3776236237\" \"ssrc\" \"RtpReceiverStat\" \"RtpReceiverStat\" testBuildEventForRtpReceiverStatEventAJ162 getSipCallId \"Property SIP-Callid is not set correctly\" \"12345\" \"12345\" \"sip-callid\" \"Transfer\" testBuildEventWithDashInPropertyName \"Property with value \\\"<none>\\\" is not null\" \"<none>\" testBuildEventWithNullLiteral getTransit \"Transit property not set correctly\" \"12.3456\" \"transit\" \"RTPReceiverStat\" testBuildEventWithDouble getDuration Long \"Duration property not set correctly\" \"569108\" \"duration\" \"MeetmeLeave\" testBuildEventWithLong getTimestamp \"Timestamp property not set correctly\" \"1159310429.569108\" \"timestamp\" \"NewChannel\" testBuildEventWithTimestamp getReasonTxt \"a reason\" \"ReasonTxt property not set correctly\" getReason \"Reason property not set correctly\" \"123 - a reason\" \"reason\" \"LogChannel\" testBuildEventWithReason \"CidCallingPres property not set correctly (must be null)\" \"abc\" testBuildEventWithInvalidCidCallingPres \"123\" \"123\" \"123\" testBuildEventWithCidCallingPresAndMissingTxt \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"123 ()\" testBuildEventWithCidCallingPresAndEmptyTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt \"nice description\" \"CidCallingPresTxt property not set correctly\" getCidCallingPres getCidCallingPres getCidCallingPres getCidCallingPres valueOf valueOf valueOf valueOf \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"123 (nice description)\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" testBuildEventWithCidCallingPres getCauseTxt \"CauseTxt property not set correctly\" \"some text\" \"some text\" \"cause-txt\" \"Hangup\" testBuildEventWithSpecialCharacterProperty getClassName \"ClassName property not set correctly\" \"default\" \"default\" \"class\" \"MusicOnHold\" testBuildEventWithClassProperty getSrc \"Src property not set correctly\" \"source value\" \"source value\" \"source\" \"Cdr\" \"Cdr\" testBuildEventWithSourceProperty getActionId getActionId getActionId \"origId\" \"ActionId not set correctly\" \"1234#origId\" \"actionid\" \"actionid\" \"actionid\" \"StatusComplete\" testBuildEventWithResponseEvent testBuildEventWithEmptyAttributes \"Nonexisting\" testBuildEventWithUnregisteredEvent FALSE \"NO\" testBuildEventWithBooleanPropertyOfValueNo \"yes\" testBuildEventWithBooleanPropertyOfValueYes getRestart getRestart getRestart TRUE TRUE Boolean Boolean Boolean \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"True\" \"restart\" \"restart\" \"restart\" \"shutdown\" \"shutdown\" \"shutdown\" testBuildEventWithBooleanProperty getPriority \"Integer property not set correctly\" getChannel getChannel toString \"priority\" \"channel\" \"channel\" \"newexten\" priority priority priority Integer Integer Integer Integer Integer \"SIP/1234\" channel channel channel testBuildEventWithIntegerProperty getSource \"Source not set correctly\" getCallerIdNum \"String property not set correctly\" \"String property not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"callerid\" \"Newchannel\" \"1234\" callerid callerid callerid testBuildEventWithMixedCaseSetter ex IllegalArgumentException catch \"registerEvent() must not accept abstract classes\" try testRegisterEventWithAbstractEvent \"UserEventD\" UserEventDEvent UserEventDEvent testRegisterUserEventWithUserEventDEvent \"C\" \"userevent\" \"UserEvent\" testRegisterUserEventWithUserEventCAndAsterisk14 \"UserEventC\" UserEventC UserEventC UserEventC UserEventC testRegisterUserEventWithUserEventC \"UserEventB\" BEvent BEvent testRegisterUserEventWithBEvent instanceof instanceof instanceof instanceof instanceof \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent \"UserEventA\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put A A testRegisterUserEventWithA registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass testRegisterEvent EventBuilderImpl new new new this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this setUp void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties Object Object String String String String eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder EventBuilder private private EventBuilderImplTest class class class class class class class class class class class class class class class class class class class class class class class class class class public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before TransferEvent TransferEvent TransferEvent TransferEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent StatusCompleteEvent StatusCompleteEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent ResponseEvent ResponseEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent NewExtenEvent NewExtenEvent NewExtenEvent NewExtenEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent MusicOnHoldEvent MusicOnHoldEvent MeetMeLeaveEvent MeetMeLeaveEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent LogChannelEvent LogChannelEvent LogChannelEvent HangupEvent HangupEvent CdrEvent CdrEvent CdrEvent CdrEvent CdrEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AbstractChannelEvent AbstractChannelEvent event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event Map Map HashMap HashMap Arrays Arrays Arrays Arrays Arrays Arrays Arrays util util util java java java fail fail assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert Assert junit junit junit junit junit junit junit static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ExecCommandTest": "\"30\" testWithMultipleOptionsMultipleParameters \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"SIP/1234,30\" testWithMultipleOptionsSingleParameterCommaSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234|30\\\"\" \"SIP/1234|30\" testWithMultipleOptionsSingleParameterPipeSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234\\\"\" \"SIP/1234\" \"SIP/1234\" testWithSingleOption buildCommand buildCommand buildCommand buildCommand buildCommand \"EXEC \\\"DIAL\\\" \\\"\\\"\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" new new new new new testDefault void void void void void @ @ @ @ @ execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand private ExecCommandTest class public public public public public public Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "GetDataCommandTest": "\"GET DATA \\\"VAR1\\\" 10000 20\" testSetTimeoutAndMaxDigits \"GET DATA \\\"VAR1\\\" 0 10\" setMaxDigits setMaxDigits testSetMaxDigits \"GET DATA \\\"VAR1\\\" 10000\" getMaxDigits getMaxDigits getMaxDigits getTimeout getTimeout getTimeout setTimeout setTimeout testSetTimeout buildCommand buildCommand buildCommand buildCommand \"GET DATA \\\"VAR1\\\"\" \"VAR1\" \"VAR1\" \"VAR1\" \"VAR1\" new new new new testDefault void void void void @ @ @ @ getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand private GetDataCommandTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "HangupCauseTest": "getByCode AST_CAUSE_NO_USER_RESPONSE HangupCause HangupCause \"Valid enum for cause code 18\" testGetByCode void @ HangupCauseTest class public public Test Test assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "ListenerManagerTest": "\"test\" getName String NORMAL getPriority true event onManagerEvent requiredEvents extends extends Class Class Override Override Override Override return return return return private size removeListener shuffle addListener add add getListener getListener listener listener listener listener listener i i i int for for queue queue queue queue ListenerManager ListenerManager new new new new listeners listeners listeners listeners FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener InterruptedException throws listenerTest void void @ @ @ @ @ false managereventRecevied managereventRecevied boolean volatile ListenerManagerTest class class public public public public public public Test Test VarSetEvent VarSetEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent events events events events events wrap wrap asterisk asterisk ListenerPriority ListenerPriority ListenerPriority Set Set Set List List LinkedList LinkedList HashSet HashSet Collections Collections util util util util util java java java java java assertTrue assertTrue assertTrue Assert junit junit static import import import import import import import import import import core internal pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "ManagerConnectionImplTest": "\"username\" setExpectedUsername new setUp void @ mc MockedManagerConnectionImpl mockReader ManagerReaderMock mockWriter mockWriter mockWriter ManagerWriterMock ManagerWriterMock mockSocket protected protected protected protected ManagerConnectionImplTest class public public Test Before Before SocketConnectionFacade SocketConnectionFacade ManagerResponse response NewChannelEvent ManagerEvent DisconnectEvent ConnectEvent event event event event StatusAction PingAction CommandAction action action action TimeoutException ManagerEventListener ManagerConnectionState AuthenticationFailedException AsteriskVersion List ArrayList util util util IOException io java java java fail assertTrue assertFalse assertEquals Assert Assert Assert Assert junit junit junit junit junit junit verify replay expect createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerReaderImplTest": "getHighestSequence Long \"Invalid highest sequence on RtcpReceivedEvent\" getFromPort Integer \"Invalid from port on RtcpReceivedEvent\" getHostAddress getFromAddress \"192.168.0.1\" \"Invalid from address on RtcpReceivedEvent\" rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent \"first event must be a RtcpReceivedEvent\" \"HighestSequence: 999\" \"From 192.168.0.1:1234\" \"Event: RTCPReceived\" testWorkaroundForAsteriskBug13319 testRunReceivingEventWithMapPropertyAndOnlyOneEntry \"second event must be an DisconnectEvent\" \"second event must be an DisconnectEvent\" \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"first event must be a AgentCalledEvent\" \"first event must be a AgentCalledEvent\" \"Variable: var2=val2\" \"Variable: var1=val1\" \"Variable: var1=val1\" \"Event: AgentCalled\" \"Event: AgentCalled\" testRunReceivingEventWithMapProperty \"first event must be a StatusCompleteEvent\" \"\" \"\" \"\" \"\" \"Event: StatusComplete\" testRunReceivingEvent \"DisconnectEvent contains incorrect dateReceived\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" getDateReceived getDateReceived \"ProtocolIdentifierReceivedEvent contains incorrect dateReceived\" getProtocolIdentifier \"ProtocolIdentifierReceivedEvent contains incorrect protocol identifier\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass get get get get get get get get get get get get get get get get get get get \"first event must be a ProtocolIdentifierReceivedEvent\" size size size size size size size dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" setSocket setSocket setSocket setSocket setSocket \"Asterisk Call Manager/1.0\" \"Asterisk Call Manager/1.0\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine Exception Exception Exception Exception Exception throws throws throws throws throws testRunReceivingProtocolIdentifier instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" run run run run run run try testRunWithoutSocket \"cast\" SuppressWarnings null null null null null null tearDown this ManagerReaderImpl overrideCurrentDate overrideCurrentDate new new new new new setUp void void void void void void void void @ @ @ @ @ @ @ @ @ managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader ManagerReader socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher MockedDispatcher MockedDispatcher now now now now now private private private private ManagerReaderImplTest class class class class class class class class class class class class class class public public public public public public public public public Test Test Test Test Test Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade DateUtil DateUtil DateUtil ManagerResponse CommandResponse response response StatusCompleteEvent StatusCompleteEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ManagerEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent event event event event event event event event event event event event event event event List Date Date Date ArrayList util util util util util IOException io java java java java fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerWriterImplTest": "setSocket flush \"action: Status\\r\\n\\r\\n\" write socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade testSendAction instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" null null sendAction sendAction try Exception Exception throws throws testSendActionWithoutSocket \"cast\" SuppressWarnings ManagerWriterImpl new new new setUp void void void @ @ @ @ managerWriter managerWriter managerWriter managerWriter managerWriter ManagerWriter private ManagerWriterImplTest class class public public public public Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StatusAction StatusAction StatusAction action fail fail assertTrue assertTrue Assert Assert junit junit junit junit verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static static static import import import import import import import import import internal manager manager asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "NewStateEventTest": "\"Unknown (4)\" testWithUnknownState getChannelStateDesc getChannelState getChannelState Integer Integer \"Ring\" \"Ring\" setState setState testWithState this new new new setUp void void void @ @ @ newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent NewStateEvent NewStateEvent private NewStateEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "QueueMemberStateTest": "toString testToString \"DEVICE_INUSE\" \"DEVICE_INUSE\" valueOf valueOf DEVICE_INUSE DEVICE_INUSE DEVICE_INUSE QueueMemberState QueueMemberState QueueMemberState QueueMemberState QueueMemberState testValueOf void void @ @ QueueMemberStateTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "RateLimiterTest": "sleep Thread println out acquire i i i int for new limiter limiter currentTimeMillis currentTimeMillis System System System now long InterruptedException throws test void @ RateLimiterTest class public public Test Test RateLimiter RateLimiter RateLimiter assertTrue Assert junit junit static import import import agi agi pbx pbx asteriskjava asteriskjava org org org org package ",
            "ResourceBundleMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"net.sf.asterisk.fastagi.unavailable\" testDetermineScriptWithResourceBundleUnavailable \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" determineScript determineScript determineScript determineScript determineScript SimpleAgiRequest SimpleAgiRequest SimpleAgiRequest request request request request request request request request request request request AgiRequest AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript \"test-mapping\" setResourceBundleName setResourceBundleName new new new new this this setUp void void void void @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ResourceBundleMappingStrategy ResourceBundleMappingStrategy private ResourceBundleMappingStrategyTest class class class public public public public public Test Test Test Test Before Before assertTrue assertTrue assertTrue assertNull assertNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit junit static static static static import import import import import import fastagi asteriskjava org org org org org org org package ",
            "ResponseBuilderImplTest": "getStatus \"Status not set correctly\" getHint \"Hint not set correctly\" getContext \"Context not set correctly\" getExten \"Exten not set correctly\" extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse \"-1\" \"status\" \"\" \"\" \"hint\" \"default\" \"default\" \"context\" \"exten\" \"Extension Status\" testBuildExtensionStateResponse getOldMessages \"Old messages set correctly\" getNewMessages valueOf valueOf valueOf Integer Integer Integer \"New messages not set correctly\" mailboxCountResponse mailboxCountResponse mailboxCountResponse mailboxCountResponse \"5\" \"oldmessages\" \"2\" \"newmessages\" \"123@myctx\" \"123@myctx\" \"Mailbox Message Count\" testBuildMailboxCountResponse FALSE \"0\" \"123,user2\" \"123,user2\" testBuildMailboxStatusResponseWithNoWaiting getWaiting getWaiting TRUE Boolean Boolean \"Waiting not set correctly\" \"Waiting not set correctly\" getMailbox getMailbox getMailbox \"Mailbox not set correctly\" \"Mailbox not set correctly\" \"Mailbox not set correctly\" mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse \"1\" \"1\" \"1\" \"waiting\" \"waiting\" \"123\" \"123\" \"mailbox\" \"mailbox\" \"mailbox\" \"Mailbox Status\" \"Mailbox Status\" testBuildMailboxStatusResponse getChallenge \"Challenge not set correctly\" \"131494410\" \"131494410\" \"challenge\" testBuildChallengeResponse getActionId \"ActionId not set correctly\" \"1234\" \"1234\" \"actionid\" testBuildErrorWithActionId getMessage \"Message not set correctly\" \"Missing action in request\" \"Missing action in request\" \"Missing action in request\" \"message\" \"message\" \"message\" \"message\" \"message\" \"message\" \"Error\" \"Error\" testBuildError null testBuildResponseWithoutResponseClass getResponse getResponse \"Response not set correctly\" \"Response not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put testBuildResponse new new this this setUp void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes Object Object String String responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder ResponseBuilderImpl ResponseBuilderImpl private private ResponseBuilderImplTest class class class class class class class class class class class class class class class class class public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Before Before ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerError ManagerError MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ChallengeResponse ChallengeResponse ChallengeResponse ChallengeResponse response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response Map Map HashMap HashMap util util java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "RtcpReceivedEventTest": "\"1.2345 (sec)\" testDlSrWithSpace getDlSr \"1.2345(sec)\" setDlSr setDlSr testDlSr PT_SENDER_REPORT getPt getPt Long Long \"200(Sender Report)\" setPt testPt getFromPort Integer getHostAddress getFromAddress \"192.168.0.1\" \"192.168.0.1:1234\" setFrom testFrom this new new new new setUp void void void void void @ @ @ @ @ rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent private RtcpReceivedEventTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "ScriptEngineMappingStrategyTest": "testSearchFileOutsidePath getPath \"bla\" getCanonicalPath \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \".\" \".\" \"test\" \"test\" \"src\" \"src\" \"src\" String String String String null null searchFile searchFile searchFile searchFile searchFile throws testSearchFile new new new new new new this setUp void void void @ @ @ scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy private ScriptEngineMappingStrategyTest class public public public public Test Test Test Before Before IOException IOException File File io io java java assertNull assertNull assertNull assertNull assertNull assertEquals assertEquals Assert Assert junit junit junit junit getExtension ScriptEngineMappingStrategy ScriptEngineMappingStrategy ScriptEngineMappingStrategy static static static import import import import import import import fastagi fastagi asteriskjava asteriskjava org org org org org org package ",
            "SipShowPeerResponseTest": "getMohsuggest \"Incorrect mohsuggest\" \"default\" \"default\" setMohsuggest testSetMohsuggest \": 60000 ms\\nChanVariable:\\n PHBX_ID,191\" testSetQualifyFreqWithWorkaroundAndChanVariable \": 6000 ms\\n\" testSetQualifyFreqWithWorkaround getQualifyFreq getQualifyFreq getQualifyFreq int int int \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"6000 ms\" setQualifyFreq setQualifyFreq setQualifyFreq testSetQualifyFreq new setUp void void void void void @ @ @ @ @ SipShowPeerResponse SipShowPeerResponse private SipShowPeerResponseTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import response response response response response response response response response response response manager asteriskjava org org org org package ",
            "SkypeBuddyStatusEventTest": "getBuddySkypename \"the.buddy\" testGetBuddySkypename getUser \"user\" testGetUser \"Skype/user@the.buddy\" setBuddy this new setUp void void void @ @ @ SkypeBuddyStatusEvent SkypeBuddyStatusEvent private SkypeBuddyStatusEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals Assert junit junit junit static import import import event event event event event event manager asteriskjava org org org org package ",
            "SkypeChatMessageEventTest": "getDecodedMessage \"h\u00f6\u00f6\u00f6?\" \"Inocrrectly decoded message\" \"aMO2w7bDtj8=\" setMessage this new SkypeChatMessageEvent SkypeChatMessageEvent final testGetDecodedMessage void @ SkypeChatMessageEventTest class public public Test Test assertEquals assertEquals Assert junit junit static import import event event event event manager asteriskjava org org org package ",
            "T38FaxStatusEventTest": "getAverageRxDataRateInBps getAverageTxDataRateInBps getAverageLagInMilliSeconds getT38SessionDurationInSeconds getMaxLagInMilliSeconds intValue intValue intValue intValue getTotalLagInMilliSeconds \"0 bps\" setAverageRxDataRate \"363 bps\" setAverageTxDataRate \"-1.80 ms\" setAverageLag setT38SessionDuration \"4 ms\" setMaxLag \"-9 ms\" setTotalLag testParseProperties \"0.022 sec.\" \"0.022 sec.\" stripUnit \"0.022\" this this new new T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent testStripUnit void void @ @ T38FaxStatusEventTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import event event event event event event event event event event event event event event event event manager asteriskjava org org org package "
        },
        "deleted_diff_per_file": {
            "src/main/java/org/asteriskjava/pbx/internal/activity/ActivityHelper.java": "        EventListenerBaseClass listener = new EventListenerBaseClass(activityName)\n        listener.startListener(PBXFactory.getActivePBX());\n",
            "src/main/java/org/asteriskjava/pbx/internal/asterisk/MeetmeRoomControl.java": "                    \"Thee MeetmeRoomControl has not been initialised. Please call MeetmeRoomControl.init().\"); //$NON-NLS-1$\n        super(\"MeetmeRoomControl\"); //$NON-NLS-1$\n        this.startListener(pbx);\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerConnection.java": "        CoherentManagerEventQueue newRealtime = new CoherentManagerEventQueue(\"Realtime\"); //$NON-NLS-1$\n        CoherentManagerEventQueue newStandard = new CoherentManagerEventQueue(\"Standard\"); //$NON-NLS-1$\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerEventQueue.java": "import java.util.Comparator;\nimport java.util.Set;\nimport java.util.TreeSet;\n    private class Listener\n    {\n        FilteredManagerListener<ManagerEvent> _listener;\n        Set<Class< ? extends ManagerEvent>> requiredEvents;\n        public Listener(FilteredManagerListener<ManagerEvent> listener)\n        {\n            this._listener = listener;\n            this.requiredEvents = listener.requiredEvents();\n            if (requiredEvents.contains(BridgeEvent.class))\n            {\n                requiredEvents.add(LinkEvent.class);\n                requiredEvents.add(UnlinkEvent.class);\n            }\n            for (Class< ? extends ManagerEvent> event : requiredEvents)\n            {\n                if (!CoherentEventFactory.mapEvents.values().contains(event)\n                        && !CoherentEventFactory.mapResponses.values().contains(event))\n                {\n                    throw new RuntimeException(\n                            \"The requested event type of \" + event + \"+isn't known by \" + CoherentEventFactory.class);\n                }\n            }\n        }\n        @Override\n        public String toString()\n        {\n            return this._listener.getName();\n        }\n    }\n    private final TreeSet<Listener> listeners = new TreeSet<>(new ListenerPriorityComparator());\n    public CoherentManagerEventQueue(String name)\n        CoherentManagerConnection.managerConnection.addEventListener(this);\n        final TreeSet<Listener> listenerCopy = new TreeSet<>(new ListenerPriorityComparator());\n            listenerCopy.addAll(this.listeners);\n            for (final Listener filter : listenerCopy)\n    private void dispatchEventOnThread(final ManagerEvent event, final Listener filter, final CountDownLatch latch)\n            this.listeners.add(new Listener(listener));\n        synchronized (this.listeners)\n            if (melf != null)\n                for (Listener container : this.listeners)\n                    if (container._listener == melf)\n                        this.listeners.remove(container);\n                        synchronized (this.globalEvents)\n                        {\n                            this.globalEvents.clear();\n                            for (Listener readdContainer : this.listeners)\n                            {\n                                this.globalEvents.addAll(expandEvents(readdContainer._listener.requiredEvents()));\n                            }\n                        }\n                        break;\n            }\n        }\n    }\n    final class ListenerPriorityComparator implements Comparator<Listener>\n    {\n        @Override\n        public int compare(Listener lhs, Listener rhs)\n        {\n            int result = lhs._listener.getPriority().compare(rhs._listener.getPriority());\n            if (result == 0)\n                result = (lhs._listener.equals(rhs._listener) ? 0 : 1);\n            return result;\n                for (Listener listener : eventQueue.listeners)\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialLocalToAgiActivity.java": "        super(\"Dial \" + from + \" to AGI\");\n            this.startListener(PBXFactory.getActivePBX());\n        this.close();\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialToAgiWithAbortCallback.java": "    public DialToAgiActivityImpl start()\n        dialer.startActivity(false);\n        completion.waitForCompletion(3, TimeUnit.MINUTES);\n        final ActivityStatusEnum status;\n        if (dialer.isSuccess())\n        {\n            status = ActivityStatusEnum.SUCCESS;\n        }\n        else\n        {\n            status = ActivityStatusEnum.FAILURE;\n        }\n        iCallback.progress(dialer, status, status.getDefaultMessage());\n        return dialer;\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/PeerMonitor.java": "        super(\"PeerMonitor\"); //$NON-NLS-1$\n        this.startListener(PBXFactory.getActivePBX());\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/Dial.java": "        super(descriptiveName);\n            this.startListener(PBXFactory.getActivePBX());\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/DialToAgi.java": "        super(descriptiveName);\n            this.startListener(PBXFactory.getActivePBX());\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/EventListenerBaseClass.java": "import org.asteriskjava.pbx.PBXFactory;\n    protected EventListenerBaseClass(final String descriptiveName)\n    public void startListener(PBX iPBX)\n        ((AsteriskPBX) iPBX).addListener(this);\n        AsteriskPBX pbx = (AsteriskPBX) PBXFactory.getActivePBX();\n        pbx.removeListener(this);\n                listener.startListener(PBXFactory.getActivePBX());\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/OriginateBaseClass.java": "        super(\"NewOrginateClass\"); //$NON-NLS-1$\n        AsteriskPBX pbx = (AsteriskPBX) PBXFactory.getActivePBX();\n            this.startListener(pbx);\n        this.close();\n            logger.error(\"Check \" + ctr);\n                            break;\n"
        },
        "deleted_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/pbx/internal/activity/ActivityHelper.java": [
                65,
                87
            ],
            "src/main/java/org/asteriskjava/pbx/internal/asterisk/MeetmeRoomControl.java": [
                72,
                81,
                88
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerConnection.java": [
                399,
                407
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerEventQueue.java": [
                4,
                6,
                7,
                40,
                41,
                42,
                43,
                45,
                46,
                47,
                48,
                50,
                51,
                54,
                55,
                56,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                69,
                70,
                71,
                72,
                73,
                75,
                77,
                91,
                93,
                235,
                238,
                247,
                274,
                320,
                356,
                358,
                360,
                362,
                364,
                369,
                370,
                371,
                372,
                373,
                374,
                375,
                376,
                377,
                380,
                381,
                382,
                384,
                385,
                386,
                387,
                388,
                390,
                392,
                393,
                395,
                410
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/DialLocalToAgiActivity.java": [
                53,
                96,
                117
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/DialToAgiWithAbortCallback.java": [
                25,
                27,
                29,
                31,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                42,
                44
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/PeerMonitor.java": [
                77,
                79
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/Dial.java": [
                36,
                65
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/DialToAgi.java": [
                34,
                62
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/EventListenerBaseClass.java": [
                4,
                18,
                35,
                38,
                47,
                48,
                78
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/OriginateBaseClass.java": [
                76,
                171,
                176,
                239,
                453,
                498
            ]
        },
        "diff_code": "+        EventListenerBaseClass listener = new EventListenerBaseClass(activityName, PBXFactory.getActivePBX())\r\n+        listener.startListener();\r\n+                    \"The MeetmeRoomControl has not been initialised. Please call MeetmeRoomControl.init().\"); //$NON-NLS-1$\r\n+        super(\"MeetmeRoomControl\", pbx); //$NON-NLS-1$\r\n+        this.startListener();\r\n+        CoherentManagerEventQueue newRealtime = new CoherentManagerEventQueue(\"Realtime\", //$NON-NLS-1$\r\n+                CoherentManagerConnection.managerConnection);\r\n+        CoherentManagerEventQueue newStandard = new CoherentManagerEventQueue(\"Standard\", //$NON-NLS-1$\r\n+                CoherentManagerConnection.managerConnection);\r\n+    private final ListenerManager listeners = new ListenerManager();\n+    public CoherentManagerEventQueue(String name, ManagerConnection connection)\n+        connection.addEventListener(this);\n+        final List<FilteredManagerListenerWrapper> listenerCopy;\n+            listenerCopy = this.listeners.getCopyAsList();\n+            for (final FilteredManagerListenerWrapper filter : listenerCopy)\n+    private void dispatchEventOnThread(final ManagerEvent event, final FilteredManagerListenerWrapper filter,\n+            final CountDownLatch latch)\n+            this.listeners.addListener(listener);\n+        if (melf != null)\n+            synchronized (this.listeners)\n+                this.listeners.removeListener(melf);\n+                synchronized (this.globalEvents)\n+                    this.globalEvents.clear();\n+                    Iterator<FilteredManagerListenerWrapper> itr = this.listeners.iterator();\n+                    while (itr.hasNext())\n+                        FilteredManagerListenerWrapper readdContainer = itr.next();\n+                        this.globalEvents.addAll(expandEvents(readdContainer._listener.requiredEvents()));\n+            }\n+                Iterator<FilteredManagerListenerWrapper> itr = eventQueue.listeners.iterator();\n+                while (itr.hasNext())\n+                    FilteredManagerListenerWrapper listener = itr.next();\n+        super(\"Dial \" + from + \" to AGI\", PBXFactory.getActivePBX());\n+            this.startListener();\n+    public void asyncStartDial()\n+        Runnable runner = new Runnable()\n+        {\n+            @Override\n+            public void run()\n+            {\n+                dialer.startActivity(false);\n+                completion.waitForCompletion(3, TimeUnit.MINUTES);\n+                final ActivityStatusEnum status;\n+                if (dialer.isSuccess())\n+                {\n+                    status = ActivityStatusEnum.SUCCESS;\n+                }\n+                else\n+                {\n+                    status = ActivityStatusEnum.FAILURE;\n+                }\n+                iCallback.progress(dialer, status, status.getDefaultMessage());\n+            }\n+        };\n+        new Thread(runner).start();\n+    FilteredManagerListener<ManagerEvent> _listener;\n+    Set<Class< ? extends ManagerEvent>> requiredEvents;\n+    private final static AtomicInteger seed = new AtomicInteger();\n+    Integer equalityBuster = seed.incrementAndGet();\n+    public FilteredManagerListenerWrapper(FilteredManagerListener<ManagerEvent> listener)\n+    {\n+        this._listener = listener;\n+        this.requiredEvents = listener.requiredEvents();\n+        if (requiredEvents.contains(BridgeEvent.class))\n+        {\n+            requiredEvents.add(LinkEvent.class);\n+            requiredEvents.add(UnlinkEvent.class);\n+        }\n+        for (Class< ? extends ManagerEvent> event : requiredEvents)\n+        {\n+            if (!CoherentEventFactory.mapEvents.values().contains(event)\n+                    && !CoherentEventFactory.mapResponses.values().contains(event))\n+            {\n+                throw new RuntimeException(\n+                        \"The requested event type of \" + event + \"+isn't known by \" + CoherentEventFactory.class);\n+            }\n+        }\n+    }\n+    @Override\n+    public String toString()\n+    {\n+        return this._listener.getName();\n+    }\n+    private final TreeSet<FilteredManagerListenerWrapper> listeners = new TreeSet<>(new ListenerPriorityComparator());\n+    Log logger = LogFactory.getLog(ListenerManager.class);\n+    final class ListenerPriorityComparator implements Comparator<FilteredManagerListenerWrapper>\n+    {\n+        @Override\n+        public int compare(FilteredManagerListenerWrapper lhs, FilteredManagerListenerWrapper rhs)\n+        {\n+            int result = lhs._listener.getPriority().compare(rhs._listener.getPriority());\n+            if (result == 0)\n+                result = lhs.equalityBuster.compareTo(rhs.equalityBuster);\n+            return result;\n+        }\n+    }\n+    public void clear()\n+    {\n+        listeners.clear();\n+    }\n+    public int size()\n+    {\n+        return listeners.size();\n+    }\n+    public Iterator<FilteredManagerListenerWrapper> iterator()\n+    {\n+        return listeners.iterator();\n+    }\n+    public void addListener(FilteredManagerListener<ManagerEvent> listener)\n+    {\n+        listeners.add(new FilteredManagerListenerWrapper(listener));\n+    }\n+    List<FilteredManagerListenerWrapper> getCopyAsList()\n+    {\n+        List<FilteredManagerListenerWrapper> list = new LinkedList<>();\n+        for (FilteredManagerListenerWrapper listener : listeners)\n+        {\n+            list.add(listener);\n+        }\n+        return list;\n+    }\n+    boolean removeListener(FilteredManagerListener<ManagerEvent> toRemove)\n+    {\n+        boolean removed = false;\n+        Iterator<FilteredManagerListenerWrapper> itr = listeners.iterator();\n+        while (itr.hasNext())\n+        {\n+            FilteredManagerListenerWrapper container = itr.next();\n+            if (container._listener == toRemove)\n+            {\n+                logger.error(\"Removing listener \" + toRemove);\n+                itr.remove();\n+                removed = true;\n+                break;\n+            }\n+        }\n+        return removed;\n+    }\n+        super(\"PeerMonitor\", PBXFactory.getActivePBX()); //$NON-NLS-1$\r\n+        this.startListener();\r\n+        super(descriptiveName, PBXFactory.getActivePBX());\r\n+            this.startListener();\r\n+        super(descriptiveName, PBXFactory.getActivePBX());\r\n+            this.startListener();\r\n+    private final PBX pbx;\r\n+    protected EventListenerBaseClass(final String descriptiveName, PBX iPBX)\r\n+        this.pbx = iPBX;\r\n+    public void startListener()\r\n+        ((AsteriskPBX) pbx).addListener(this);\r\n+        ((AsteriskPBX) pbx).removeListener(this);\r\n+                listener.startListener();\r\n+    Exception ex = new Exception(\"Created here\");\r\n+\r\n+    private final AsteriskPBX pbx;\r\n+\r\n+        super(\"NewOrginateClass\", PBXFactory.getActivePBX());\r\n+        pbx = (AsteriskPBX) PBXFactory.getActivePBX();\r\n+            this.startListener();\r\n+\r\n+            logger.debug(\"Check \" + ctr);\r\n+                    logger.info(\"Id is \" + __originateID);\r\n+                    break;\r\n+    volatile boolean managereventRecevied = false;\n+    @Test\n+    public void listenerTest() throws InterruptedException\n+    {\n+        List<FilteredManagerListener<ManagerEvent>> listeners = new LinkedList<>();\n+        ListenerManager queue = new ListenerManager();\n+        for (int i = 0; i < 1000; i++)\n+        {\n+            FilteredManagerListener<ManagerEvent> listener = getListener();\n+            listeners.add(listener);\n+            queue.addListener(listener);\n+        }\n+        Collections.shuffle(listeners);\n+        for (FilteredManagerListener<ManagerEvent> listener : listeners)\n+        {\n+            assertTrue(queue.removeListener(listener));\n+        }\n+        assertTrue(queue.size() == 0);\n+    }\n+    private FilteredManagerListener<ManagerEvent> getListener()\n+    {\n+        return new FilteredManagerListener<ManagerEvent>()\n+        {\n+            @Override\n+            public Set<Class< ? extends ManagerEvent>> requiredEvents()\n+            {\n+                Set<Class< ? extends ManagerEvent>> events = new HashSet<>();\n+                events.add(VarSetEvent.class);\n+                return events;\n+            }\n+            @Override\n+            public void onManagerEvent(ManagerEvent event)\n+            {\n+                managereventRecevied = true;\n+            }\n+            @Override\n+            public ListenerPriority getPriority()\n+            {\n+                return ListenerPriority.NORMAL;\n+            }\n+            @Override\n+            public String getName()\n+            {\n+                return \"test\";\n+            }\n+        };\n+    }\n",
        "diff_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/pbx/internal/activity/ActivityHelper.java": [
                65,
                87
            ],
            "src/main/java/org/asteriskjava/pbx/internal/asterisk/MeetmeRoomControl.java": [
                72,
                81,
                88
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerConnection.java": [
                399,
                400,
                408,
                409
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerEventQueue.java": [
                5,
                6,
                14,
                40,
                54,
                57,
                199,
                202,
                211,
                238,
                239,
                285,
                321,
                323,
                325,
                330,
                332,
                333,
                334,
                336,
                337,
                341,
                358,
                359,
                361
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/DialLocalToAgiActivity.java": [
                53,
                96
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/DialToAgiWithAbortCallback.java": [
                25,
                28,
                29,
                31,
                32,
                33,
                34,
                36,
                38,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                49,
                51,
                52,
                54
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/FilteredManagerListenerWrapper.java": [
                1,
                3,
                4,
                6,
                7,
                8,
                9,
                11,
                12,
                13,
                14,
                16,
                17,
                19,
                20,
                21,
                22,
                24,
                25,
                28,
                29,
                30,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                43,
                44,
                45,
                46,
                47,
                49
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/ListenerManager.java": [
                1,
                3,
                4,
                5,
                6,
                7,
                9,
                10,
                11,
                13,
                14,
                15,
                17,
                19,
                20,
                21,
                22,
                23,
                25,
                27,
                28,
                30,
                31,
                32,
                34,
                35,
                36,
                37,
                39,
                40,
                41,
                42,
                44,
                45,
                46,
                47,
                49,
                50,
                51,
                52,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                62,
                63,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                84
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/PeerMonitor.java": [
                77,
                79
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/Dial.java": [
                36,
                65
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/DialToAgi.java": [
                34,
                62
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/EventListenerBaseClass.java": [
                16,
                18,
                21,
                36,
                39,
                48,
                78
            ],
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/OriginateBaseClass.java": [
                56,
                76,
                80,
                81,
                179,
                456,
                503,
                504
            ],
            "src/test/java/org/asteriskjava/pbx/internal/core/ListenerManagerTest.java": [
                1,
                3,
                5,
                6,
                7,
                8,
                9,
                11,
                12,
                13,
                14,
                16,
                17,
                19,
                21,
                22,
                23,
                24,
                26,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                40,
                42,
                44,
                45,
                46,
                47,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                57,
                58,
                59,
                60,
                61,
                63,
                64,
                65,
                66,
                67,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                77
            ]
        },
        "diff_per_file": {
            "src/main/java/org/asteriskjava/pbx/internal/activity/ActivityHelper.java": "        EventListenerBaseClass listener = new EventListenerBaseClass(activityName, PBXFactory.getActivePBX())\n        listener.startListener();\n",
            "src/main/java/org/asteriskjava/pbx/internal/asterisk/MeetmeRoomControl.java": "                    \"The MeetmeRoomControl has not been initialised. Please call MeetmeRoomControl.init().\"); //$NON-NLS-1$\n        super(\"MeetmeRoomControl\", pbx); //$NON-NLS-1$\n        this.startListener();\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerConnection.java": "        CoherentManagerEventQueue newRealtime = new CoherentManagerEventQueue(\"Realtime\", //$NON-NLS-1$\n                CoherentManagerConnection.managerConnection);\n        CoherentManagerEventQueue newStandard = new CoherentManagerEventQueue(\"Standard\", //$NON-NLS-1$\n                CoherentManagerConnection.managerConnection);\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerEventQueue.java": "import java.util.Iterator;\nimport java.util.List;\nimport org.asteriskjava.manager.ManagerConnection;\n    private final ListenerManager listeners = new ListenerManager();\n    public CoherentManagerEventQueue(String name, ManagerConnection connection)\n        connection.addEventListener(this);\n        final List<FilteredManagerListenerWrapper> listenerCopy;\n            listenerCopy = this.listeners.getCopyAsList();\n            for (final FilteredManagerListenerWrapper filter : listenerCopy)\n    private void dispatchEventOnThread(final ManagerEvent event, final FilteredManagerListenerWrapper filter,\n            final CountDownLatch latch)\n            this.listeners.addListener(listener);\n        if (melf != null)\n            synchronized (this.listeners)\n                this.listeners.removeListener(melf);\n                synchronized (this.globalEvents)\n                    this.globalEvents.clear();\n                    Iterator<FilteredManagerListenerWrapper> itr = this.listeners.iterator();\n                    while (itr.hasNext())\n                        FilteredManagerListenerWrapper readdContainer = itr.next();\n                        this.globalEvents.addAll(expandEvents(readdContainer._listener.requiredEvents()));\n            }\n                Iterator<FilteredManagerListenerWrapper> itr = eventQueue.listeners.iterator();\n                while (itr.hasNext())\n                    FilteredManagerListenerWrapper listener = itr.next();\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialLocalToAgiActivity.java": "        super(\"Dial \" + from + \" to AGI\", PBXFactory.getActivePBX());\n            this.startListener();\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialToAgiWithAbortCallback.java": "    public void asyncStartDial()\n        Runnable runner = new Runnable()\n        {\n            @Override\n            public void run()\n            {\n                dialer.startActivity(false);\n                completion.waitForCompletion(3, TimeUnit.MINUTES);\n                final ActivityStatusEnum status;\n                if (dialer.isSuccess())\n                {\n                    status = ActivityStatusEnum.SUCCESS;\n                }\n                else\n                {\n                    status = ActivityStatusEnum.FAILURE;\n                }\n                iCallback.progress(dialer, status, status.getDefaultMessage());\n            }\n        };\n        new Thread(runner).start();\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/FilteredManagerListenerWrapper.java": "package org.asteriskjava.pbx.internal.core;\nimport java.util.Set;\nimport java.util.concurrent.atomic.AtomicInteger;\nimport org.asteriskjava.pbx.asterisk.wrap.events.BridgeEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.LinkEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ManagerEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.UnlinkEvent;\npublic class FilteredManagerListenerWrapper\n{\n    FilteredManagerListener<ManagerEvent> _listener;\n    Set<Class< ? extends ManagerEvent>> requiredEvents;\n    private final static AtomicInteger seed = new AtomicInteger();\n    Integer equalityBuster = seed.incrementAndGet();\n    public FilteredManagerListenerWrapper(FilteredManagerListener<ManagerEvent> listener)\n    {\n        this._listener = listener;\n        this.requiredEvents = listener.requiredEvents();\n        if (requiredEvents.contains(BridgeEvent.class))\n        {\n            requiredEvents.add(LinkEvent.class);\n            requiredEvents.add(UnlinkEvent.class);\n        }\n        for (Class< ? extends ManagerEvent> event : requiredEvents)\n        {\n            if (!CoherentEventFactory.mapEvents.values().contains(event)\n                    && !CoherentEventFactory.mapResponses.values().contains(event))\n            {\n                throw new RuntimeException(\n                        \"The requested event type of \" + event + \"+isn't known by \" + CoherentEventFactory.class);\n            }\n        }\n    }\n    @Override\n    public String toString()\n    {\n        return this._listener.getName();\n    }\n}\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/ListenerManager.java": "package org.asteriskjava.pbx.internal.core;\nimport java.util.Comparator;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.TreeSet;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ManagerEvent;\nimport org.asteriskjava.util.Log;\nimport org.asteriskjava.util.LogFactory;\npublic class ListenerManager\n{\n    private final TreeSet<FilteredManagerListenerWrapper> listeners = new TreeSet<>(new ListenerPriorityComparator());\n    Log logger = LogFactory.getLog(ListenerManager.class);\n    final class ListenerPriorityComparator implements Comparator<FilteredManagerListenerWrapper>\n    {\n        @Override\n        public int compare(FilteredManagerListenerWrapper lhs, FilteredManagerListenerWrapper rhs)\n        {\n            int result = lhs._listener.getPriority().compare(rhs._listener.getPriority());\n            if (result == 0)\n                result = lhs.equalityBuster.compareTo(rhs.equalityBuster);\n            return result;\n        }\n    }\n    public void clear()\n    {\n        listeners.clear();\n    }\n    public int size()\n    {\n        return listeners.size();\n    }\n    public Iterator<FilteredManagerListenerWrapper> iterator()\n    {\n        return listeners.iterator();\n    }\n    public void addListener(FilteredManagerListener<ManagerEvent> listener)\n    {\n        listeners.add(new FilteredManagerListenerWrapper(listener));\n    }\n    List<FilteredManagerListenerWrapper> getCopyAsList()\n    {\n        List<FilteredManagerListenerWrapper> list = new LinkedList<>();\n        for (FilteredManagerListenerWrapper listener : listeners)\n        {\n            list.add(listener);\n        }\n        return list;\n    }\n    boolean removeListener(FilteredManagerListener<ManagerEvent> toRemove)\n    {\n        boolean removed = false;\n        Iterator<FilteredManagerListenerWrapper> itr = listeners.iterator();\n        while (itr.hasNext())\n        {\n            FilteredManagerListenerWrapper container = itr.next();\n            if (container._listener == toRemove)\n            {\n                logger.error(\"Removing listener \" + toRemove);\n                itr.remove();\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    }\n}\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/PeerMonitor.java": "        super(\"PeerMonitor\", PBXFactory.getActivePBX()); //$NON-NLS-1$\n        this.startListener();\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/Dial.java": "        super(descriptiveName, PBXFactory.getActivePBX());\n            this.startListener();\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/DialToAgi.java": "        super(descriptiveName, PBXFactory.getActivePBX());\n            this.startListener();\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/EventListenerBaseClass.java": "    private final PBX pbx;\n    protected EventListenerBaseClass(final String descriptiveName, PBX iPBX)\n        this.pbx = iPBX;\n    public void startListener()\n        ((AsteriskPBX) pbx).addListener(this);\n        ((AsteriskPBX) pbx).removeListener(this);\n                listener.startListener();\n",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/OriginateBaseClass.java": "    Exception ex = new Exception(\"Created here\");\n    private final AsteriskPBX pbx;\n        super(\"NewOrginateClass\", PBXFactory.getActivePBX());\n        pbx = (AsteriskPBX) PBXFactory.getActivePBX();\n            this.startListener();\n            logger.debug(\"Check \" + ctr);\n                    logger.info(\"Id is \" + __originateID);\n                    break;\n",
            "src/test/java/org/asteriskjava/pbx/internal/core/ListenerManagerTest.java": "package org.asteriskjava.pbx.internal.core;\nimport static org.junit.Assert.assertTrue;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Set;\nimport org.asteriskjava.pbx.ListenerPriority;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ManagerEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.VarSetEvent;\nimport org.junit.Test;\npublic class ListenerManagerTest\n{\n    volatile boolean managereventRecevied = false;\n    @Test\n    public void listenerTest() throws InterruptedException\n    {\n        List<FilteredManagerListener<ManagerEvent>> listeners = new LinkedList<>();\n        ListenerManager queue = new ListenerManager();\n        for (int i = 0; i < 1000; i++)\n        {\n            FilteredManagerListener<ManagerEvent> listener = getListener();\n            listeners.add(listener);\n            queue.addListener(listener);\n        }\n        Collections.shuffle(listeners);\n        for (FilteredManagerListener<ManagerEvent> listener : listeners)\n        {\n            assertTrue(queue.removeListener(listener));\n        }\n        assertTrue(queue.size() == 0);\n    }\n    private FilteredManagerListener<ManagerEvent> getListener()\n    {\n        return new FilteredManagerListener<ManagerEvent>()\n        {\n            @Override\n            public Set<Class< ? extends ManagerEvent>> requiredEvents()\n            {\n                Set<Class< ? extends ManagerEvent>> events = new HashSet<>();\n                events.add(VarSetEvent.class);\n                return events;\n            }\n            @Override\n            public void onManagerEvent(ManagerEvent event)\n            {\n                managereventRecevied = true;\n            }\n            @Override\n            public ListenerPriority getPriority()\n            {\n                return ListenerPriority.NORMAL;\n            }\n            @Override\n            public String getName()\n            {\n                return \"test\";\n            }\n        };\n    }\n}\n"
        },
        "ekstazi_failed_test_list": [],
        "ekstazi_select_time": 0,
        "ekstazi_test_list": [],
        "ekstazi_total_time": 0,
        "failed_test_list": [],
        "passed_test_list": [
            "AbstractAgiCommandTest",
            "CallerIdTest",
            "ResponseBuilderImplTest",
            "AbstractManagerEventListenerTest",
            "AstUtilTest",
            "CompositeMappingStrategyTest",
            "NewStateEventTest",
            "CdrEventTest",
            "ChannelReloadEventTest",
            "ResourceBundleMappingStrategyTest",
            "GetDataCommandTest",
            "ScriptEngineMappingStrategyTest",
            "ActionBuilderImplTest",
            "EventBuilderImplTest",
            "AgiReaderImplTest",
            "AsyncAgiEventTest",
            "DefaultAgiServerTest",
            "QueueMemberStateTest",
            "AsteriskChannelImplTest",
            "T38FaxStatusEventTest",
            "BridgeEnterEventComparatorTest",
            "RateLimiterTest",
            "ClassNameMappingStrategyTest",
            "HangupCauseTest",
            "AgiReplyImplTest",
            "AsteriskQueueMemberImplTest",
            "ConfigFileParserTest",
            "SkypeChatMessageEventTest",
            "CoreStatusResponseTest",
            "AgiChannelImplTest",
            "AsteriskAgentImplTest",
            "DateUtilTest",
            "RtcpReceivedEventTest",
            "SkypeBuddyStatusEventTest",
            "AgiRequestImplTest",
            "AgiWriterImplTest",
            "SipShowPeerResponseTest",
            "ExecCommandTest",
            "ManagerReaderImplTest",
            "ListenerManagerTest",
            "ManagerConnectionImplTest",
            "ManagerWriterImplTest"
        ],
        "prev_commit": "a630a125",
        "queries": {
            "src/main/java/org/asteriskjava/pbx/internal/activity/ActivityHelper.java": "throws close void Override @ return if getManagerListener AutoCloseable AutoCloseable this this \"Invoked from here\" new new callSite Exception Exception Exception _sendEvents _sendEvents activityName activityName activityName activityName String String callback callback callback callback false _success boolean boolean volatile lastException getLog logger final final final final final static private private private private private private private Runnable implements extends T T T ActivityHelper ActivityHelper ActivityHelper class class abstract public public public LogFactory LogFactory Log Log EventListenerBaseClass managerAPI AsteriskPBX core ManagerResponse response ManagerEvent events SetVarAction actions wrap wrap wrap asterisk asterisk asterisk PBXFactory PBXException PBXException ListenerPriority Channel ActivityStatusEnum ActivityCallback ActivityCallback ActivityCallback Activity Activity Activity Set HashSet util util util util java java import import import import import import import import import import import import import import import import activity internal internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/asterisk/MeetmeRoomControl.java": "\"The MeetmeRoomControl has already been initialised.\" warn null get if NoMeetmeException throws init void synchronized new self self false meetmeInstalled boolean roomCount roomCount int int rooms MeetmeRoom meetmeBaseAddress Integer getLog logger logger final final final static static static private private private private private private implements extends MeetmeRoomControl MeetmeRoomControl MeetmeRoomControl MeetmeRoomControl class class public public LogFactory LogFactory Log Log EventListenerBaseClass EventListenerBaseClass managerAPI CoherentManagerEventListener CoherentManagerEventListener AsteriskPBX core core ManagerResponse CommandResponse response response ResponseEvents ResponseEvent MeetMeLeaveEvent MeetMeJoinEvent ManagerEvent ConfbridgeListEvent events events events events events events ConfbridgeListAction CommandAction actions actions wrap wrap wrap wrap wrap wrap wrap wrap wrap wrap PBXFactory PBXException PBX PBX ListenerPriority Channel AsteriskSettings ManagerCommunicationException live AsteriskVersion AtomicReference AtomicReference AtomicReference atomic concurrent Entry Map Map HashSet HashMap Date util util util util util util util util java java java java java java import import import import import import import import import import import import import import import import import import import import import import import import import import import import import asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk internal internal internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerConnection.java": "realtimeEventQueue eventQueue CoherentManagerEventQueue CoherentManagerEventQueue managerConnection null null connector new eventStatistics Integer String getLog logger private private private static static static static FilteredManagerListener implements CoherentManagerConnection CoherentManagerConnection class class LogFactory LogFactory Log Log Connector Connector managerAPI ManagerResponse response ResponseEvents ManagerEvent ManagerEvent DisconnectEvent ConnectEvent events events events events SetVarAction ManagerAction ListCommandsAction GetVarAction EventGeneratingAction actions actions actions actions actions wrap wrap wrap wrap wrap wrap wrap wrap wrap wrap asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk PBXFactory PBXException PBX ListenerPriority Channel AsteriskSettings TimeoutException ManagerConnectionState ManagerConnection ManagerConnection EventTimeoutException AuthenticationFailedException manager manager manager manager manager AsteriskVersion OperationNotSupportedException naming javax TimeUnit CountDownLatch concurrent concurrent Map Map HashSet HashMap HashMap util util util util util util util IOException io java java java java java java import import import import import import import import import import import import import import import import import import import import import import import import import import import import import import import import core internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentManagerEventQueue.java": "\"EventQueue: \" setName this this this this addEventListener connection connection name name String public globalEvents extends Class _queueCount _queueSum long long _queueMaxSize int _eventQueue event _th _th _th Thread Thread false _stop boolean new new new new listeners ListenerManager ListenerManager getLog logger final final final final static private private private private private private private private private Runnable implements CoherentManagerEventQueue CoherentManagerEventQueue CoherentManagerEventQueue class class LogFactory LogFactory Log Log LogTime EventLifeMonitor EventLifeMonitor eventQueue UnlinkEvent ManagerEvent ManagerEvent ManagerEvent LinkEvent BridgeEvent events events events events wrap wrap wrap wrap asterisk asterisk asterisk asterisk ManagerEventListener ManagerEventListener ManagerConnection ManagerConnection manager manager manager TimeUnit LinkedBlockingQueue LinkedBlockingQueue Executors ExecutorService CountDownLatch BlockingQueue BlockingQueue concurrent concurrent concurrent concurrent concurrent concurrent List Iterator HashSet HashSet HashSet Collection util util util util util util util util util util util util util java java java java java java java java java java import import import import import import import import import import import import import import import import import import import import core internal internal pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialLocalToAgiActivity.java": "start getActivePBX \" to AGI\" \" to AGI\" \"Dial \" \"Dial \" super channelVarsToSet channelVarsToSet channelVarsToSet channelVarsToSet callback callback callback callback channels new new new latch originateId String String String String String getClass this this this this this this getLog logger final thread thread thread Thread Thread fromCallerID fromCallerID fromCallerID fromCallerID from from from from from from private private private private private private private private Runnable implements extends DialLocalToAgiActivity DialLocalToAgiActivity DialLocalToAgiActivity DialLocalToAgiActivity class public public LogFactory LogFactory Log Log OriginateBaseClass EventListenerBaseClass EventListenerBaseClass managerAPI managerAPI ManagerResponse response OriginateResponseEvent NewChannelEvent ManagerEvent HangupEvent events events events events OriginateAction GetVarAction actions actions wrap wrap wrap wrap wrap wrap wrap asterisk asterisk asterisk asterisk asterisk asterisk asterisk PBXFactory PBXFactory PBXException PBX ListenerPriority EndPoint EndPoint EndPoint Channel Channel CallerID CallerID CallerID AsteriskSettings ActivityStatusEnum ActivityCallback ActivityCallback ActivityCallback Activity Activity TimeoutException manager TimeUnit CountDownLatch CountDownLatch CountDownLatch concurrent concurrent Map Map Map List List LinkedList LinkedList HashSet HashMap util util util util util util util util util IOException io java java java java java java java java import import import import import import import import import import import import import import import import import import import import import import import import import import import import import import import core internal internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/DialToAgiWithAbortCallback.java": "abort abort start Thread getDefaultMessage progress FAILURE else SUCCESS isSuccess if status status status status status final MINUTES waitForCompletion false startActivity run Override @ new new runner runner Runnable Runnable asyncStartDial void void void this this this iCallback iCallback iCallback iCallback iCallback completion completion completion completion completion dialer dialer dialer dialer dialer dialer dialer dialer private private private DialToAgiWithAbortCallback DialToAgiWithAbortCallback class public public public public public DialToAgiActivityImpl DialToAgiActivityImpl DialToAgiActivityImpl activity DialToAgiActivity DialToAgiActivity DialToAgiActivity DialToAgiActivity DialToAgiActivity activities CompletionAdaptor CompletionAdaptor CompletionAdaptor ActivityStatusEnum ActivityStatusEnum ActivityStatusEnum ActivityStatusEnum ActivityCallback ActivityCallback ActivityCallback TimeUnit TimeUnit concurrent util java import import import import import import core internal internal pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/FilteredManagerListenerWrapper.java": "contains if this this listener listener listener incrementAndGet equalityBuster Integer new seed seed static final private requiredEvents requiredEvents requiredEvents requiredEvents extends Class _listener _listener FilteredManagerListener FilteredManagerListener FilteredManagerListenerWrapper FilteredManagerListenerWrapper class class public public UnlinkEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent LinkEvent BridgeEvent BridgeEvent events events events events wrap wrap wrap wrap asterisk asterisk asterisk asterisk AtomicInteger AtomicInteger AtomicInteger atomic concurrent Set Set util util java java import import import import import import core internal pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/ListenerManager.java": "next container hasNext while itr itr itr false removed toRemove removeListener boolean boolean for list list list getCopyAsList add add listener listener listener listener FilteredManagerListener FilteredManagerListener addListener iterator iterator iterator size size clear clear void void return return return return compareTo equalityBuster equalityBuster if getPriority getPriority _listener _listener result result result result rhs rhs rhs lhs lhs lhs compare compare int int int Override @ implements getLog logger ListenerPriorityComparator ListenerPriorityComparator new new new new listeners listeners listeners listeners listeners listeners listeners FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper FilteredManagerListenerWrapper final final private ListenerManager ListenerManager class class class public public public public public public LogFactory LogFactory Log Log ManagerEvent ManagerEvent ManagerEvent events wrap asterisk TreeSet TreeSet TreeSet List List List LinkedList LinkedList Iterator Iterator Iterator Comparator Comparator util util util util util util util java java java java java import import import import import import import import core internal pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/PeerMonitor.java": "\"You must call PeerMonitor.init()\" IllegalStateException throw getInstance \"Call to PeerMonitor.init, but it's already initialized. Listener will not be set\" error else null null null if if if _listener _listener _listener init void synchronized synchronized listener listener self self self self markAndSweepThread Thread false initSip boolean new new new peerList Peer getLog logger logger final final final static static static static static private private private private Runnable implements extends PeerMonitor PeerMonitor PeerMonitor PeerMonitor PeerMonitor PeerMonitor PeerMonitor PeerMonitor PeerMonitor class class public public public LogFactory LogFactory Log Log EventListenerBaseClass EventListenerBaseClass managerAPI StatusEvent StatusCompleteEvent PeerlistCompleteEvent PeerStatusEvent PeerEntryEvent NewStateEvent NewChannelEvent MasqueradeEvent ManagerEvent DndStateEvent events events events events events events events events events events StatusAction SipPeersAction actions actions wrap wrap wrap wrap wrap wrap wrap wrap wrap wrap wrap wrap asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk PBXFactory NewExtensionListener NewExtensionListener NewExtensionListener ListenerPriority EndPoint Channel List LinkedList LinkedList LinkedList Iterator HashSet util util util util util util java java java java import import import import import import import import import import import import import import import import import import import import import import import import core internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/Dial.java": "startListener this originate OriginateToExtension OriginateToExtension try throws channelVarsToSet hideCallerId boolean callerID dialContext targetEndPoint localHandset listener listener dial getActivePBX getActivePBX super descriptiveName descriptiveName String String String String _latch new new result OriginateResult OriginateResult OriginateResult getLog logger final final final final final final final final final final final static private private private EventListenerBaseClass extends Dial Dial Dial class class public public public LogFactory LogFactory Log Log AsteriskPBX core UnlinkEvent ManagerEvent LinkEvent HangupEvent BridgeEvent events events events events events wrap wrap wrap wrap wrap asterisk asterisk asterisk asterisk asterisk AgiChannelActivityDial agi PBXFactory PBXFactory PBXFactory PBXException PBXException PBX PBX NewChannelListener NewChannelListener ListenerPriority EndPoint EndPoint EndPoint Channel CallerID CallerID TimeUnit CountDownLatch CountDownLatch concurrent concurrent Map Map HashSet util util util util util util java java java java import import import import import import import import import import import import import import import import import import import import import managerAPI internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/DialToAgi.java": "startListener this originate originate try InterruptedException throws channelVarsToSet hideCallerId callerID action localHandset listener listener dial getActivePBX getActivePBX super descriptiveName descriptiveName String String String originator originator OriginateToExtension OriginateToExtension OriginateToExtension false hangupDetected boolean boolean volatile new new result OriginateResult OriginateResult OriginateResult getLog logger final final final final final final final final final final static private private private private EventListenerBaseClass extends DialToAgi DialToAgi DialToAgi class class public public public LogFactory LogFactory Log Log AsteriskPBX core ManagerEvent HangupEvent events events wrap wrap asterisk asterisk PBXFactory PBXFactory PBXFactory PBXException PBXException PBX PBX NewChannelListener NewChannelListener ListenerPriority EndPoint EndPoint Channel CallerID CallerID AgiChannelActivityAction AgiChannelActivityAction TimeUnit concurrent Map Map HashSet util util util util util java java java import import import import import import import import import import import import import import import import import managerAPI internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/EventListenerBaseClass.java": "\"listener may not be null\" IllegalArgumentException new throw null if sendEvents boolean true listener listener listener listener listener lang java AutoClose AutoClose AutoClose removeListener close addListener startListener void void return getName Override Override @ @ this this this this this this iPBX iPBX descriptiveName descriptiveName protected name name name String String String final final final final final final private private AutoCloseable AutoCloseable implements implements EventListenerBaseClass EventListenerBaseClass EventListenerBaseClass EventListenerBaseClass EventListenerBaseClass class class abstract public public public public public public public FilteredManagerListener FilteredManagerListener AsteriskPBX AsteriskPBX AsteriskPBX core core ManagerEvent ManagerEvent events wrap asterisk PBX PBX PBX import import import import managerAPI internal internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/managerAPI/OriginateBaseClass.java": "EventListenerBaseClass extends OriginateBaseClass class abstract public LogFactory Log AsteriskPBX core ManagerResponse response UnlinkEvent OriginateResponseEvent NewChannelEvent ManagerEvent LinkEvent HangupEvent BridgeEvent events events events events events events events OriginateAction GetVarAction actions actions wrap wrap wrap wrap wrap wrap wrap wrap wrap wrap asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk asterisk PBXFactory PBXException PBX NewChannelListener EndPoint Channel CallerID AsteriskSettings ManagerCommunicationException live TimeUnit CountDownLatch concurrent concurrent HashSet HashMap util util util util util util java java java java import import import import import import import import import import import import import import import import import import import import import import import import import import managerAPI internal internal pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org package ",
            "src/test/java/org/asteriskjava/pbx/internal/core/ListenerManagerTest.java": "\"test\" getName String NORMAL getPriority true event onManagerEvent requiredEvents extends extends Class Class Override Override Override Override return return return return private size removeListener shuffle addListener add add getListener getListener listener listener listener listener listener i i i int for for queue queue queue queue ListenerManager ListenerManager new new new new listeners listeners listeners listeners FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener InterruptedException throws listenerTest void void @ @ @ @ @ false managereventRecevied managereventRecevied boolean volatile ListenerManagerTest class class public public public public public public Test Test VarSetEvent VarSetEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent events events events events events wrap wrap asterisk asterisk ListenerPriority ListenerPriority ListenerPriority Set Set Set List List LinkedList LinkedList HashSet HashSet Collections Collections util util util util util java java java java java assertTrue assertTrue assertTrue Assert junit junit static import import import import import import import import import import core internal pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org package "
        },
        "starts_failed_test_list": [],
        "starts_select_time": 0,
        "starts_test_list": [],
        "starts_total_time": 0,
        "tests_cases_num": {
            "AbstractAgiCommandTest": 6,
            "AbstractManagerEventListenerTest": 2,
            "ActionBuilderImplTest": 16,
            "AgiChannelImplTest": 3,
            "AgiReaderImplTest": 5,
            "AgiReplyImplTest": 12,
            "AgiRequestImplTest": 24,
            "AgiWriterImplTest": 1,
            "AstUtilTest": 6,
            "AsteriskAgentImplTest": 1,
            "AsteriskChannelImplTest": 1,
            "AsteriskQueueMemberImplTest": 1,
            "AsyncAgiEventTest": 2,
            "BridgeEnterEventComparatorTest": 17,
            "CallerIdTest": 7,
            "CdrEventTest": 3,
            "ChannelReloadEventTest": 3,
            "ClassNameMappingStrategyTest": 2,
            "CompositeMappingStrategyTest": 2,
            "ConfigFileParserTest": 4,
            "CoreStatusResponseTest": 2,
            "DateUtilTest": 2,
            "DefaultAgiServerTest": 4,
            "EventBuilderImplTest": 35,
            "ExecCommandTest": 5,
            "GetDataCommandTest": 4,
            "HangupCauseTest": 1,
            "ListenerManagerTest": 1,
            "ManagerConnectionImplTest": 22,
            "ManagerReaderImplTest": 9,
            "ManagerWriterImplTest": 2,
            "NewStateEventTest": 2,
            "QueueMemberStateTest": 2,
            "RateLimiterTest": 1,
            "ResourceBundleMappingStrategyTest": 3,
            "ResponseBuilderImplTest": 9,
            "RtcpReceivedEventTest": 5,
            "ScriptEngineMappingStrategyTest": 3,
            "SipShowPeerResponseTest": 4,
            "SkypeBuddyStatusEventTest": 2,
            "SkypeChatMessageEventTest": 1,
            "T38FaxStatusEventTest": 2
        }
    },
    {
        "changed_files": [
            "NlStreamReaderFast273316816601633219txt",
            "src/main/java/org/asteriskjava/util/internal/SocketConnectionFacadeImpl.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScanner.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerCrNl.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerFactory.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerNl.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerDeterministicTest.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerRandomTest.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTest.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTestOnSocket.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerTestSocketSource.java"
        ],
        "changed_files_num": 11,
        "changed_java_files": [
            "src/main/java/org/asteriskjava/util/internal/SocketConnectionFacadeImpl.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScanner.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerCrNl.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerFactory.java",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerNl.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerDeterministicTest.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerRandomTest.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTest.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTestOnSocket.java",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerTestSocketSource.java"
        ],
        "changed_java_files_num": 10,
        "commit": "7d5bc101",
        "data_objects": {
            "AbstractAgiCommandTest": "escapeAndQuote \"MY \" return Override this s s s s s String String String serialVersionUID long final AbstractAgiCommand extends \"MY \\\"first \\\\\\\\\\\\\\\" second \\\\\\\\\\\\\\\" third\\\"\" \"first \\\\\\\" second \\\\\\\" third\" testEscapedQuotesAJ192 \"MY \\\"Caller is:John Doe\\\"\" \"Caller is:\\nJohn Doe\" testEscapeAndQuoteWithStringContainingNewline \"MY \\\"\\\\\\\"John Doe\\\\\\\" is calling\\\"\" \"\\\"John Doe\\\" is calling\" testEscapeAndQuoteWithStringContainingQuotes \"\" testEscapeAndQuoteWithEmptyString \"MY \\\"\\\"\" \"MY \\\"\\\"\" null testEscapeAndQuoteWithNullString buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand \"MY \\\"just a string\\\"\" \"just a string\" new new new new new new testEscapeAndQuote void void void void void void @ @ @ @ @ @ @ myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand private private private AbstractAgiCommandTest class class public public public public public public public public public public Test Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static static import import command fastagi asteriskjava org org org package ",
            "AbstractManagerEventListenerTest": "shouldHandleJoinEvent void @ AbstractManagerEventListenerTest class public public Test Test LeaveEvent JoinEvent event event assertTrue Assert junit junit static import import import import manager manager manager asteriskjava asteriskjava asteriskjava org org org org org package ",
            "ActionBuilderImplTest": "\"This method must not be considered a getter relevant for building the action\" i int getIndexedProperty \"This method must not be considered a getter\" get privateProperty privateProperty getNonPublicProperty protected protected getSecondProperty getFirstProperty \"My\" return return return return return return getAction Override nonPublicProperty nonPublicProperty nonPublicProperty secondProperty secondProperty secondProperty secondProperty secondProperty Integer Integer Integer firstProperty firstProperty firstProperty firstProperty firstProperty serialVersionUID long final extends \"property-3: value3\\r\\n\" \"Incorrect mapping of property with annotated field\" testBuildActionWithAnnotatedField determineFieldName determineFieldName determineFieldName \"property1\" \"property1\" \"property1\" testDetermineFieldName \"property-2: value2\\r\\n\" \"Incorrect mapping of property with annotated setter\" testBuildActionWithAnnotatedSetter \"isProperty1\" \"isProperty1\" \"getProperty1\" \"getProperty1\" determineSetterName determineSetterName \"setProperty1\" \"setProperty1\" \"setProperty1\" testDetermineSetterName \"property-1: value1\\r\\n\" \"Incorrect mapping of property with annotated getter\" \"value3\" \"value3\" \"value3\" AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction testBuildActionWithAnnotatedGetter \"Incorrect mapping of variable property\" ASTERISK_1_6 \"var2\" \"peer\" testBuildActionForSipNotifyAction \"variable: var1=value1\\r\\nvariable: VAR2=value2\\r\\n\" setVariables \"value2\" \"value2\" \"value2\" \"value2\" \"value2\" \"VAR2\" \"value1\" \"value1\" \"value1\" \"value1\" \"value1\" \"var1\" \"var1\" map map map map map testBuildActionWithVariableMapForAsterisk12 \"variable: var1=value1\\r\\nvariable: var2=\\r\\nvariable: var3=value3\\r\\n\" testBuildActionWithVariablesForAsterisk12WithNullValues \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" ASTERISK_1_2 ASTERISK_1_2 ASTERISK_1_2 setTargetVersion setTargetVersion setTargetVersion setTargetVersion testBuildActionWithVariablesForAsterisk12 \"variable: var1=value1|var2=|var3=value3\\r\\n\" \"var1=value1|var2=|var3=value3\" \"var1=value1|var2=|var3=value3\" testBuildActionWithVariablesForAsterisk10WithNullValues \"variable: var1=value1|var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"var1=value1|var2=value2\" \"var1=value1|var2=value2\" setVariable setVariable setVariable setVariable setVariable setVariable originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction testBuildActionWithVariablesForAsterisk10 \"deprecation\" \"deprecation\" \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings SuppressWarnings SuppressWarnings \"mapmember: Key1=Value1|Key2=Value2|Key3=Value3\\r\\n\" \"Map member missing\" \"stringmember: stringMemberValue\\r\\n\" \"Regular member missing\" \"UserEvent: myuser\\r\\n\" \"Event name missing\" \"action: UserEvent\\r\\n\" setMapMember \"stringMemberValue\" setStringMember \"Value3\" \"Key3\" \"Value2\" \"Key2\" \"Value1\" \"Key1\" put put put put put mapMemberTest mapMemberTest mapMemberTest mapMemberTest mapMemberTest setUserEvent event event event event event MyUserEvent MyUserEvent testBuildUserEventAction \"Cat-000000: testcategory\" \"Action missing category testcategory - \" \"action: Action\" \"UpdateConfig actions must not have more than one 'action' header\" \"Action-0:\" \"Action must have zero-padded 6 digit numbering\" \"reload: Yes\" \"Correct reload setting missing\" \"dstfilename: destfile.conf\" \"Destination filename missing\" \"srcfilename: sourcefile.conf\" \"Source filename missing\" \"action: UpdateConfig\" null null null \"testcategory\" ACTION_NEWCAT addCommand true setReload \"destfile.conf\" setDstFilename \"sourcefile.conf\" setSrcFilename testBuildUpdateConfigAction \"actioncompleteeventclass:\" \"Action contains actionCompleteEventClass property\" \"action: Agents\\r\\n\" testBuildEventGeneratingAction testBuildActionWithNullValue length length \"Incorrect length\" \"Incorrect length\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" endsWith endsWith endsWith endsWith \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"secondproperty: 2\\r\\n\" \"Second property missing\" \"firstproperty: first value\\r\\n\" \"firstproperty: first value\\r\\n\" \"First property missing\" \"First property missing\" \"action: My\\r\\n\" \"action: My\\r\\n\" indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction \"private\" setNonPublicProperty setNonPublicProperty setSecondProperty setSecondProperty \"first value\" \"first value\" setFirstProperty setFirstProperty setFirstProperty actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String myAction myAction myAction myAction myAction myAction myAction myAction myAction myAction MyAction MyAction MyAction MyAction MyAction testBuildAction new new new new new new new new new new new new new new new new new new this this this this this setUp void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl private private private private private ActionBuilderImplTest class class public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before UserEventAction UserEventAction UserEventAction UpdateConfigAction UpdateConfigAction UpdateConfigAction UpdateConfigAction SipNotifyAction SipNotifyAction SipNotifyAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction AgentsAction AgentsAction AgentsAction AbstractManagerAction AbstractManagerAction action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion Map Map Map LinkedHashMap LinkedHashMap LinkedHashMap util util java java assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org package ",
            "AgiChannelImplTest": "getExtra name getAttribute getStatus return return return return getResult getResultCodeAsChar char getResultCode getLines UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException throw throw throw throw throw throw getFirstLine usage usage usage usage usage synopsis synopsis synopsis synopsis synopsis result result result result result String String String String String String String String String String String String String String status status status status status int int int int serialVersionUID long final implements getUsage getUsage \"Incorrect usage\" getSynopsis getSynopsis \"Incorrect sysnopsis\" \"Invalid command syntax: NOOP Synopsis\" \"must throw InvalidCommandSyntaxException\" \"NOOP Usage\" \"NOOP Usage\" setUsage setUsage \"NOOP Synopsis\" \"NOOP Synopsis\" setSynopsis setSynopsis SC_INVALID_COMMAND_SYNTAX testSendCommandWithInvalidCommandSyntaxResponse getMessage getMessage \"Invalid or unknown command: NOOP\" \"Incorrect message\" \"Incorrect message\" e e e e e e catch catch \"must throw InvalidOrUnknownCommandException\" try try SC_INVALID_OR_UNKNOWN_COMMAND testSendCommandWithInvalidOrUnknownCommandResponse andReturn andReturn andReturn readReply readReply readReply sendCommand sendCommand sendCommand sendCommand sendCommand sendCommand \"0\" \"0\" \"0\" setResult setResult setResult setResult SC_SUCCESS setStatus setStatus setStatus setStatus SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply Exception Exception Exception throws throws throws testSendCommand null AgiChannelImpl new new new new new new new new new new new new new this this this this this this this setUp void void void void void void void void @ @ @ @ agiChannel agiChannel agiChannel agiChannel agiChannel agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter private private private private private private private private AgiChannelImplTest class class class class public public public public public public public public public public public public public public public public public public public public Test Test Test Test Before Before AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand command command command command command command command command command command command command command InvalidOrUnknownCommandException InvalidOrUnknownCommandException InvalidCommandSyntaxException InvalidCommandSyntaxException AgiWriter AgiWriter AgiWriter AgiReader AgiReader AgiReader AgiChannel AgiChannel List List util java fail fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify verify replay replay replay replay replay replay replay expect expect expect expect createMock createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org package ",
            "AgiReaderImplTest": "e catch \"Must throw AgiHangupException\" try null testReadReplyWhenHungUp getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" testReadReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testReadReplyInvalidOrUnknownCommand getResultCode \"Incorrect result\" getStatus getStatus getStatus SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" readReply readReply readReply readReply \"200 result=49 endpos=2240\" testReadReply \"incorrect remote port\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect local port\" getAddress getAddress getAddress getAddress getAddress getAddress getAddress getAddress \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" getChannel \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" readRequest getRemotePort getRemotePort getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote getLocalPort getLocalPort getByAddress getByAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress byteValue byteValue byteValue byteValue byteValue byteValue byteValue byteValue valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf Integer Integer Integer Integer Integer Integer Integer Integer ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal byte byte byte byte \"\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine request request request request request request request request request request request request request request request Exception Exception Exception Exception Exception throws throws throws throws throws testReadRequest FastAgiReader new new new this this setUp void void void void void void @ @ @ @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket agiReader agiReader agiReader agiReader agiReader agiReader agiReader private private AgiReaderImplTest class class public public public public public public public Test Test Test Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply AgiRequest AgiRequest AgiReader AgiReader AgiHangupException AgiHangupException InetAddress InetAddress InetAddress net java fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org package ",
            "AgiReplyImplTest": "testBuildReplyInvalidCommandSyntaxWithOnlyUsage getUsage \"Deletes an entry in the Asterisk database for a given family and key. Returns 1 if succesful, 0 otherwise\" \"Incorrect usage\" getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" \"520-Invalid command syntax.  Proper usage follows:\" testBuildReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testBuildReplyInvalidOrUnknownCommand \"200 result=1 ((hello)(world)) endpos=2240\" testBuildReplyWithAdditionalAttributeAndParenthesis \"(hello)(world)\" \"(hello)(world)\" \"Incorrect parenthesis\" \"Incorrect parenthesis\" \"200 result=1 ((hello)(world))\" testBuildReplyWithParenthesis println out System testBla \"hi \\\"joe!\\\"\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"hi \\\\\\\"joe!\\\\\\\"\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute2 \"text0\" \"text0\" \"123456789\" \"Incorrect text0 attribute\" \"Incorrect text0 attribute\" getExtra getExtra getExtra getExtra \"speech\" \"speech\" \"Incorrect extra\" \"Incorrect extra\" \"0\" \"0\" \"1\" \"1\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"123456789\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute \"startpos\" \"1234\" \"Incorrect startpos attribute\" \"200 result=49 startpos=1234 endpos=2240\" testBuildReplyWithMultipleAdditionalAttribute \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"2240\" \"2240\" \"2240\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"200 result=49 endpos=2240\" testBuildReplyWithAdditionalAttribute \"result\" \"result\" \"result\" \"result\" \"result\" getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute \"49\" \"49\" \"49\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" getResultCodeAsChar getResultCodeAsChar getResultCodeAsChar '1' '1' '1' \"Incorrect result as character\" \"Incorrect result as character\" \"Incorrect result as character\" getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"200 result=49\" add add add add add add add add add add add add add add add add add add add add reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl testBuildReply new new new new new new new new new new new this setUp void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String private AgiReplyImplTest class public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Before Before List List ArrayList ArrayList util util java java assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import import import internal fastagi asteriskjava org org org org org package ",
            "AgiRequestImplTest": "getCallerIdNumber \"incorrect callerIdNumber\" \"agi_callerid: 1234\" testBuildRequestWithoutCallerIdName \"12345\" \"incorrect accountCode\" \"agi_accountcode: 12345\" testBuildRequestWithAccountCode getAccountCode getAccountCode \"incorrect accountCode must not be set\" getEnhanced FALSE Boolean \"incorrect enhanced\" getPriority Integer \"incorrect priority\" getExtension \"incorrect extension\" getContext \"local\" \"incorrect context\" getRdnis \"9876\" \"incorrect rdnis\" getDnid \"8870\" \"8870\" \"incorrect dnid\" getCallerIdName \"John Doe\" \"incorrect callerIdName\" getCallerId getCallerId \"1234\" \"1234\" \"1234\" \"incorrect callerId\" \"incorrect callerId\" getLanguage \"en\" \"incorrect language\" getUniqueId \"1110023416.6\" getType \"SIP\" \"incorrect type\" \"incorrect uniqueId\" \"incorrect uniqueId\" getChannel getChannel \"SIP/1234-d715\" \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" AgiRequestImpl AgiRequestImpl AgiRequestImpl \"agi_accountcode: \" \"agi_enhanced: 0.0\" \"agi_priority: 1\" \"agi_extension: 8870\" \"agi_context: local\" \"agi_rdnis: 9876\" \"agi_dnid: 8870\" \"agi_callerid: John Doe<1234>\" \"agi_uniqueid: 1110023416.6\" \"agi_type: SIP\" \"agi_language: en\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" \"agi_network: yes\" add add add add add add add add add add add add add add add add add add add new new new new new new new request request request request request request request request request request request request request request request request request request request request request request request request request lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String String String String String testBuildRequest void void void \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings @ @ @ @ @ AgiRequestImplTest class public public public public Test Test Test Test AgiRequest AgiRequest AgiRequest AgiRequest List List List List ArrayList ArrayList ArrayList ArrayList util util java java fail assertNull assertNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import internal fastagi fastagi asteriskjava asteriskjava org org org org org org org package ",
            "AgiWriterImplTest": "sendCommand flush \"STREAM FILE \\\"welcome\\\" \\\"\\\"\\n\" write \"welcome\" Exception throws testSendCommand FastAgiWriter new new this this setUp void void @ @ socket socket socket socket socket socket socket agiWriter agiWriter agiWriter private private AgiWriterImplTest class class public public public Test Test Before Before junit junit SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StreamFileCommand StreamFileCommand StreamFileCommand command command command command AgiWriter AgiWriter verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static import import import import import import import import internal fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org package ",
            "AstUtilTest": "\"-none-\" \"\\\"-none-\\\" must be considered null\" testIsNullForIpAddressInPeerEntryEvent \"<unknown>\" \"<unknown> must be null\" \"unknown\" \"unknown must be null\" isNull isNull isNull isNull \"null must be null\" testIsNull \"3496853210\" \"3496853210\" \"\\\"3496853210\\\" <3496853210>\" s s s String testAJ120 \"Hans Wurst <  > \" \"Hans Wurst <>\" \"\\\"Hans Wurst\\\"\" \"Hans Wurst <  1234 >   \" \"1234\" \"1234\" \"1234\" testParseCallerIdNumber \" \" \" \" \"\" \"\" \" 1234> \" \"1234>\" \" <1234 \" \"<1234\" \" <1234> \" \"<1234>\" \" Hans Wurst \" \"\\\"Hans <Wurst>\\\" <1234>\" \"Hans <Wurst>\" \" Hans Wurst  <1234>  \" \"Hans Wurst <1234>\" \"  \\\"  Hans Wurst  \\\"   <1234>  \" \"  \\\"Hans Wurst  \\\"   <1234>  \" \"\\\" Hans Wurst \\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\"<1234>\" \"\\\"Hans Wurst\\\"<1234>\" parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" testParseCallerIdName null null null null null null null null null null null null null null null null \"null must be false\" \"false\" \"false must be false\" \"true\" \"true must be true\" \"Enabled\" \"Enabled must be true\" \"ON\" \"ON must be true\" \"on\" isTrue isTrue isTrue isTrue isTrue isTrue AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil \"on must be true\" testIsTrue void void void void void void @ @ @ @ @ @ AstUtilTest class public public public public public public public Test Test Test Test Test Test Test assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit static static static import import import import util asteriskjava org org org org org package ",
            "AsteriskAgentImplTest": "\"wrong number of propagated changes\" updateState getSource \"wrong queue\" getNewValue AGENT_RINGING AGENT_RINGING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener getState testUpdateStatus AGENT_IDLE AGENT_IDLE AGENT_IDLE \"Agent/999\" \"Testagent\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int agent agent agent agent agent agent AsteriskAgentImpl AsteriskAgentImpl private private AsteriskAgentImplTest class public public public public Test Test Before Before AgentState AgentState AgentState AgentState AgentState AgentState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsteriskChannelImplTest": "\"wrong number of propagated changes\" getSource \"wrong source\" getNewValue DIALING DIALING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener testStateChange DOWN DOWN stateChanged stateChanged getDate getDate getDate \"0123456789.123\" \"SIP/1234\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int channel channel channel channel channel channel AsteriskChannelImpl AsteriskChannelImpl private private AsteriskChannelImplTest class public public public public Test Test Before Before DateUtil DateUtil DateUtil DateUtil util ChannelState ChannelState ChannelState ChannelState ChannelState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import internal live live asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "AsteriskQueueMemberImplTest": "server AsteriskServerImpl numberOfChanges int queueMember AsteriskQueueMemberImpl private private private AsteriskQueueMemberImplTest class public Test Before QueueMemberState PropertyChangeListener PropertyChangeEvent beans beans java java assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsyncAgiEventTest": "\"agi_request: async: bla\" \"agi_request%3a%20async%3a%20bla\\n\" testDecodeEnvWithMoreThanTwoDelimiters \"agi_threadid: -1231783024\" get get get \"agi_calleridname: Stefan Reuter\" decodeEnv decodeEnv \"agi_threadid%3a%20-1231783024\\n\" \"agi_accountcode%3a%20\\n\" \"agi_enhanced%3a%200.0\\n\" \"agi_priority%3a%201\\n\" \"agi_extension%3a%203115\\n\" \"agi_context%3a%20from-local\\n\" \"agi_rdnis%3a%20unknown\\n\" \"agi_dnid%3a%203115\\n\" \"agi_callingtns%3a%200\\n\" \"agi_callington%3a%200\\n\" \"agi_callingani2%3a%200\\n\" \"agi_callingpres%3a%200\\n\" \"agi_calleridname%3a%20Stefan%20Reuter\\n\" \"agi_callerid%3a%201312\\n\" \"agi_version%3a%20SVN-branch-1.6.0-r110832\\n\" \"agi_uniqueid%3a%201207271023.41\\n\" \"agi_type%3a%20SIP\\n\" \"agi_language%3a%20en\\n\" \"agi_channel%3a%20SIP%2f1312-b70020a8\\n\" \"agi_request%3a%20async\\n\" setEnv setEnv env env env env env env env String String this this new new AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent testDecodeEnv void void @ @ AsyncAgiEventTest class public public public Test Test Test List List List util java assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import import event event event event event event event manager asteriskjava org org org package ",
            "BridgeEnterEventComparatorTest": "withoutPrefix_shouldId2BeGreater void @ new bridgeEnterEventComparator BridgeEnterEventComparator BridgeEnterEventComparator private BridgeEnterEventComparatorTest class public public Test Test Assert junit junit BridgeEnterEvent event import import import bridge backwardsCompatibility internal manager manager asteriskjava asteriskjava org org org org package ",
            "CallerIdTest": "\"\\\"Hans Wurst\\\" <>\" testValueOfWithNullLiteralInNumber \"<1234>\" \"\\\"<Unknown>\\\" <1234>\" \"\\\"\\\" <1234>\" testValueOfWithNullLiteralInName toString toString \"Hans Wurst <1234>\" \"\\\"Hans Wurst\\\" <1234>\" valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId testValueOf null null null null null null null null null null \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" new new new new new new new new new new new callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId testEquals void void void void @ @ @ @ CallerIdTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "CdrEventTest": "toString \"Mon May 29 13:17:21 CEST 2006\" \"2006-05-29 13:17:21\" \"Europe/Monaco\" testBug \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone getTime getTime getStartTimeAsDate getStartTimeAsDate getStartTimeAsDate testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone getTimeZone setDefault setDefault setDefault getDefault \"2006-05-19 11:54:48\" setStartTime setStartTime this new setUp void void void void void @ @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent CdrEvent CdrEvent CdrEventTest class public public public public public public Test Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import event manager asteriskjava org org org org org package ",
            "ChannelReloadEventTest": "\"Channel module reload by CLI command\" testGetReloadReasonDescription REASON_CLI_RELOAD \"CLIRELOAD\" \"CLIRELOAD (Channel module reload by CLI command)\" \"CLIRELOAD (Channel module reload by CLI command)\" testGetReloadReasonCode getReloadReasonDescription getReloadReasonDescription getReloadReasonCode getReloadReasonCode getReloadReasonCode null setReloadReason setReloadReason setReloadReason testNullReloadReason new this this setUp void void void void @ @ @ @ ChannelReloadEvent ChannelReloadEvent ChannelReloadEvent private ChannelReloadEventTest class public public public public public Test Test Test Test Before Before assertNull assertNull assertNull assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import event event event event event event event event event event event manager asteriskjava org org org org org package ",
            "ClassNameMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" determineScript determineScript determineScript determineScript \"org.asteriskjava.fastagi.HelloAgiScript\" \"org.asteriskjava.fastagi.HelloAgiScript\" return return getScript getScript String String Override Override SimpleAgiRequest SimpleAgiRequest request request request request request request request request AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript new new new this setUp void void void @ @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ClassNameMappingStrategy ClassNameMappingStrategy private ClassNameMappingStrategyTest class class class public public public public public public Test Test Test Before Before assertTrue assertTrue assertTrue assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "CompositeMappingStrategyTest": "\"org.asteriskjava.fastagi.HelloAgiScript\" testAJ37ClassName HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" \"no script determined\" null null determineScript determineScript script script script script script script AgiScript AgiScript SimpleAgiRequest SimpleAgiRequest request request request request AgiRequest AgiRequest testAJ37ResourceBundle ClassNameMappingStrategy \"test-mapping\" ResourceBundleMappingStrategy new new new new new setUp void void void @ @ @ strategy strategy strategy strategy CompositeMappingStrategy CompositeMappingStrategy private CompositeMappingStrategyTest class class class public public public public Test Test Test Before Before assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "ConfigFileParserTest": "format println out System getCategories for \"/etc/asterisk/sip2.conf\" readFile XtestReadConfig \"No '=' (equal sign) in line 20 of extensions.conf\" MissingEqualSignException \"Expected exception when parsing a line without a '='\" \"\" \"foo=\" \"s-NOANSWER,1,Hangup\" \"Incorrect value\" \"Incorrect value\" \"exten\" \"Incorrect name\" \"Incorrect name\" \"exten => s-NOANSWER,1,Hangup\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" parseVariable parseVariable parseVariable variable variable variable variable variable variable variable variable variable testParseVariable \"Directive '#include' needs an argument (filename) at line 805 of /etc/asterisk/sip.conf\" MissingDirectiveParameterException \"Expected exception when parsing a line with a directive but no parameter\" \"#include   \" \"/etc/asterisk/sip.conf\" \"Unknown directive 'foo' at line 20 of abc.conf\" UnknownDirectiveException \"Expected exception when parsing a line with an unknown directive\" \"#foo\" getExecFile \"/usr/local/test.sh\" \"Incorrect exec file\" ExecDirective ExecDirective \"#exec   </usr/local/test.sh>   \" getIncludeFile \"/etc/asterisk/inc.conf\" \"Incorrect include file\" IncludeDirective IncludeDirective \"Incorrect type of configDirective\" \"Incorrect type of configDirective\" \"#include \\\"/etc/asterisk/inc.conf\\\"\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" parseDirective parseDirective parseDirective parseDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective ConfigDirective testParseDirective \"parse error: no closing ')', line 1 of test.conf\" \"Expected exception when closing ')' is missing\" \"[foo](bar\" \"parse error: no closing ']', line 1 of test.conf\" \"Expected exception when closing ']' is missing\" \"[foo\" getMessage getMessage getMessage getMessage getMessage getMessage \"Inheritance requested, but category 'a' does not exist, line 1 of test.conf\" e e e e e e e e e e e e e e ConfigParseException ConfigParseException ConfigParseException ConfigParseException ConfigParseException catch catch catch catch catch catch \"Expected exception when requesting inheritance from a non-existing catagory\" \"[foo](a)\" try try try try try try \"[foo](+)\" isTemplate \"Category not flagged as template\" \"[foo](!)\" getFileName getFileName getFileName getFileName getFileName \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" getLineNumber getLineNumber getLineNumber getLineNumber getLineNumber \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"foo\" \"foo\" \"foo\" \"foo\" \"foo\" \"Incorrect category name\" \"Incorrect category name\" \"Incorrect category name\" \"[foo]\" parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader category category category category category category category category category category category category testParseCategoryHeader getComment \"a line comment\" \"Incorrect comment\" getValue getValue getValue \"b\" \"Incorrect variable value\" getName getName getName getName getName getName \"a\" \"Incorrect variable name\" configVariable configVariable configVariable getClass getClass getClass ConfigVariable ConfigVariable ConfigVariable ConfigVariable \"Incorrect type of configElement\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" processLine configElement configElement configElement configElement ConfigElement \"cat\" Category Category Category appendCategory flip put length allocate buffer buffer buffer buffer \" a ;-- comment --; = b ; a line comment\" s s s String Exception Exception throws throws throws throws testProcessLine new new setUp void void void void void void @ @ @ @ @ configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader ConfigFileReader ConfigFileReader ConfigFileParserTest class class class class public public public public public public public Test Test Test Test Test Before Before CharBuffer CharBuffer CharBuffer nio java fail fail fail fail fail fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static import import import import import import config asteriskjava org org org org org org package ",
            "CoreStatusResponseTest": "null testGetCoreStartupTimeAsDateIfDateIsNull toString getCoreStartupDateTimeAsDate \"Wed May 27 02:49:15 CEST 2009\" \"02:49:15\" setCoreStartupTime \"2009-05-27\" setCoreStartupDate setCoreStartupDate \"TimeZone not found\" \"TimeZone not found\" testGetCoreStartupTimeAsDate tearDown setDefault setDefault getDefault new this setUp void void void void @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone CoreStatusResponse CoreStatusResponse \"Europe/Berlin\" getTimeZone tz tz tz tz tz private private private CoreStatusResponseTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit static static static import import import import import import import response response response response response response response manager asteriskjava org org org org org org org package ",
            "DateUtilTest": "\"Fri May 19 09:54:48 GMT 2006\" \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone toString toString \"Fri May 19 11:54:48 GMT 2006\" getTime getTime parseDateTime parseDateTime DateUtil DateUtil result result result result result result testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone setDefault setDefault getDefault setUp void void void void @ @ @ @ \"2006-05-19 11:54:48\" dateString dateString dateString String final final final final defaultTimeZone defaultTimeZone defaultTimeZone DateUtilTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone Date Date Date java java assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import import util util util asteriskjava org org org org org package ",
            "DefaultAgiServerTest": "e catch startup try close flush \"VERBOSE \\\"No script configured for null\\\" 1\\n\" write getRemotePort getRemoteAddress getLocalPort getLocalAddress null null null null andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine XtestStartup testDummy shutdown Exception Exception throws throws tearDown MockedDefaultAgiServer new new setUp void void void void @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket serverSocket serverSocket MockedServerSocketFacade MockedServerSocketFacade server server server server DefaultAgiServer private private private DefaultAgiServerTest class class public public public public public Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade ServerSocketFacade util util IOException IOException io java assertEquals Assert junit junit junit junit verify replay replay expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static import import import import import import import import import import import fastagi asteriskjava asteriskjava asteriskjava org org org org org org org org org org org package ",
            "EventBuilderImplTest": "\"1\" testBuildEventWithOnePeerEntryEventList \"Invalid size of peers property\" \"Invalid size of peers property\" \"UNKNOWN literal returns NULL status\" getStatus getStatus getStatus getStatus \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" getObjectName getObjectName getObjectName getObjectName getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"ActionId is invalid\" \"ActionId is invalid\" \"3\" \"listitems\" \"listitems\" \"LAGGED\" \"LAGGED\" \"UNKNOWN\" \"OK\" \"OK\" \"OK\" \"OK\" \"status\" \"status\" \"a103\" \"a103\" \"a102\" \"a102\" \"a101\" \"a101\" \"a101\" \"a101\" \"objectname\" \"objectname\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"PeerlistComplete\" \"PeerlistComplete\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" testBuildEventWithPeerEntryEventList getT38SessionDuration \"Property 'T38 Session Duration' is not set correctly\" \"120\" \"120\" \"t38 session duration\" \"T38FaxStatus\" testBuildEventWithSpace testBuildEventWithMapPropertyAndOnlyOneEntry size size size size \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" get get get get get get get get get get get getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"var2=val2\" \"var1=val1\" \"var1=val1\" asList asList asList asList asList asList \"variable\" \"variable\" \"AgentCalled\" \"AgentCalled\" testBuildEventWithMapProperty getReceivedPackets \"Property receivedPacket is not set correctly\" testBuildEventForRtpReceiverStatEventAJ139 getSsrc long long \"Property SSRC is not set correctly\" \"0\" \"0\" \"receivedpackets\" \"receivedpackets\" \"3776236237\" \"ssrc\" \"RtpReceiverStat\" \"RtpReceiverStat\" testBuildEventForRtpReceiverStatEventAJ162 getSipCallId \"Property SIP-Callid is not set correctly\" \"12345\" \"12345\" \"sip-callid\" \"Transfer\" testBuildEventWithDashInPropertyName \"Property with value \\\"<none>\\\" is not null\" \"<none>\" testBuildEventWithNullLiteral getTransit \"Transit property not set correctly\" \"12.3456\" \"transit\" \"RTPReceiverStat\" testBuildEventWithDouble getDuration Long \"Duration property not set correctly\" \"569108\" \"duration\" \"MeetmeLeave\" testBuildEventWithLong getTimestamp \"Timestamp property not set correctly\" \"1159310429.569108\" \"timestamp\" \"NewChannel\" testBuildEventWithTimestamp getReasonTxt \"a reason\" \"ReasonTxt property not set correctly\" getReason \"Reason property not set correctly\" \"123 - a reason\" \"reason\" \"LogChannel\" testBuildEventWithReason \"CidCallingPres property not set correctly (must be null)\" \"abc\" testBuildEventWithInvalidCidCallingPres \"123\" \"123\" \"123\" testBuildEventWithCidCallingPresAndMissingTxt \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"123 ()\" testBuildEventWithCidCallingPresAndEmptyTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt \"nice description\" \"CidCallingPresTxt property not set correctly\" getCidCallingPres getCidCallingPres getCidCallingPres getCidCallingPres valueOf valueOf valueOf valueOf \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"123 (nice description)\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" testBuildEventWithCidCallingPres getCauseTxt \"CauseTxt property not set correctly\" \"some text\" \"some text\" \"cause-txt\" \"Hangup\" testBuildEventWithSpecialCharacterProperty getClassName \"ClassName property not set correctly\" \"default\" \"default\" \"class\" \"MusicOnHold\" testBuildEventWithClassProperty getSrc \"Src property not set correctly\" \"source value\" \"source value\" \"source\" \"Cdr\" \"Cdr\" testBuildEventWithSourceProperty getActionId getActionId getActionId \"origId\" \"ActionId not set correctly\" \"1234#origId\" \"actionid\" \"actionid\" \"actionid\" \"StatusComplete\" testBuildEventWithResponseEvent testBuildEventWithEmptyAttributes \"Nonexisting\" testBuildEventWithUnregisteredEvent FALSE \"NO\" testBuildEventWithBooleanPropertyOfValueNo \"yes\" testBuildEventWithBooleanPropertyOfValueYes getRestart getRestart getRestart TRUE TRUE Boolean Boolean Boolean \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"True\" \"restart\" \"restart\" \"restart\" \"shutdown\" \"shutdown\" \"shutdown\" testBuildEventWithBooleanProperty getPriority \"Integer property not set correctly\" getChannel getChannel toString \"priority\" \"channel\" \"channel\" \"newexten\" priority priority priority Integer Integer Integer Integer Integer \"SIP/1234\" channel channel channel testBuildEventWithIntegerProperty getSource \"Source not set correctly\" getCallerIdNum \"String property not set correctly\" \"String property not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"callerid\" \"Newchannel\" \"1234\" callerid callerid callerid testBuildEventWithMixedCaseSetter ex IllegalArgumentException catch \"registerEvent() must not accept abstract classes\" try testRegisterEventWithAbstractEvent \"UserEventD\" UserEventDEvent UserEventDEvent testRegisterUserEventWithUserEventDEvent \"C\" \"userevent\" \"UserEvent\" testRegisterUserEventWithUserEventCAndAsterisk14 \"UserEventC\" UserEventC UserEventC UserEventC UserEventC testRegisterUserEventWithUserEventC \"UserEventB\" BEvent BEvent testRegisterUserEventWithBEvent instanceof instanceof instanceof instanceof instanceof \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent \"UserEventA\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put A A testRegisterUserEventWithA registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass testRegisterEvent EventBuilderImpl new new new this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this setUp void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties Object Object String String String String eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder EventBuilder private private EventBuilderImplTest class class class class class class class class class class class class class class class class class class class class class class class class class class public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before TransferEvent TransferEvent TransferEvent TransferEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent StatusCompleteEvent StatusCompleteEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent ResponseEvent ResponseEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent NewExtenEvent NewExtenEvent NewExtenEvent NewExtenEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent MusicOnHoldEvent MusicOnHoldEvent MeetMeLeaveEvent MeetMeLeaveEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent LogChannelEvent LogChannelEvent LogChannelEvent HangupEvent HangupEvent CdrEvent CdrEvent CdrEvent CdrEvent CdrEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AbstractChannelEvent AbstractChannelEvent event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event Map Map HashMap HashMap Arrays Arrays Arrays Arrays Arrays Arrays Arrays util util util java java java fail fail assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert Assert junit junit junit junit junit junit junit static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ExecCommandTest": "\"30\" testWithMultipleOptionsMultipleParameters \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"SIP/1234,30\" testWithMultipleOptionsSingleParameterCommaSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234|30\\\"\" \"SIP/1234|30\" testWithMultipleOptionsSingleParameterPipeSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234\\\"\" \"SIP/1234\" \"SIP/1234\" testWithSingleOption buildCommand buildCommand buildCommand buildCommand buildCommand \"EXEC \\\"DIAL\\\" \\\"\\\"\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" new new new new new testDefault void void void void void @ @ @ @ @ execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand private ExecCommandTest class public public public public public public Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "FastScannerDeterministicTest": "UTF_8 reader new new inputStream inputStream getBytes buildTestData bytes bytes byte final pattern pattern testLines testLines int private CRNL_PATTERN testNlScanner NL_PATTERN testScanner testScanner testScanner Exception Exception Exception throws throws throws testCrNlScanner void void void @ @ FastScannerDeterministicTest class public public public Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern regex NoSuchElementException Files file StandardCharsets StandardCharsets charset nio nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream File ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java assertTrue Assert junit junit static import import import import import import import import import import import streamreader internal internal util util util util asteriskjava asteriskjava org org org org package ",
            "FastScannerRandomTest": "\"Expected null, not something else\" \"Mismatched output\" RuntimeException RuntimeException throw throw \"Error \" \"Got      \" toHexString toHexString \"Expected \" equals if if null null next next next while useDelimiter scanner scanner scanner fastResult fastResult fastResult fastResult \"\" \"\" \"\" scannerResult scannerResult scannerResult scannerResult getReader FastScannerFactory fast fast fast FastScanner reader2 reader2 inputStream2 inputStream2 UTF_8 UTF_8 reader1 reader1 getBytes getBytes getBytes getBytes inputStream1 inputStream1 boolean printStackTrace e e e catch catch \"MB\" incrementAndGet \" Completed \" println println println println println out out out out out System System System System System compare compare generateTestData testData testData testData testData testData try try i i i for tests tests int int int new new new new new new new new ctr ctr ctr ctr ctr InterruptedException caption caption String String String String String pattern pattern pattern pattern pattern final final \"CR NL\" CRNL_PATTERN compareOutputOfCrNlFastScannerToScanner \"NL\" NL_PATTERN setupTest setupTest setupTest Exception Exception Exception throws throws throws throws compareOutputOfNlFastScannerToScanner void void void @ @ FastScannerRandomTest class public public public ByteArrayUtil ByteArrayUtil ByteArrayUtil encoder core logback qos ch Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern Pattern regex AtomicInteger AtomicInteger AtomicInteger atomic concurrent Scanner Scanner Scanner Random NoSuchElementException NoSuchElementException StandardCharsets StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStream InputStream InputStream IOException IOException ByteArrayInputStream ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java java java fail fail Assert junit junit static import import import import import import import import import import import import import import streamreader internal internal util util util util util util util asteriskjava asteriskjava org org org org package ",
            "FastScannerSpeedTest": "null next while t t String \"unused\" SuppressWarnings \"\\r\\n\" compile useDelimiter scanner scanner scanner try ctr currentTimeMillis start long UTF_8 reader reader new new new inputStream inputStream \":\\t\" \"Scanner \" print out System System i i i int int for getBytes generateTestData FastScannerRandomTest bytes bytes byte final Exception throws testScannerSpeed void @ @ FastScannerSpeedTest class public public Test Test junit SocketConnectionFacadeImpl Pattern Pattern regex Scanner Scanner Scanner NoSuchElementException StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream ByteArrayInputStream ByteArrayInputStream io io io java java java java java java java import import import import import import import import import streamreader internal internal util util util util util asteriskjava asteriskjava org org org package ",
            "GetDataCommandTest": "\"GET DATA \\\"VAR1\\\" 10000 20\" testSetTimeoutAndMaxDigits \"GET DATA \\\"VAR1\\\" 0 10\" setMaxDigits setMaxDigits testSetMaxDigits \"GET DATA \\\"VAR1\\\" 10000\" getMaxDigits getMaxDigits getMaxDigits getTimeout getTimeout getTimeout setTimeout setTimeout testSetTimeout buildCommand buildCommand buildCommand buildCommand \"GET DATA \\\"VAR1\\\"\" \"VAR1\" \"VAR1\" \"VAR1\" \"VAR1\" new new new new testDefault void void void void @ @ @ @ getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand private GetDataCommandTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "HangupCauseTest": "getByCode AST_CAUSE_NO_USER_RESPONSE HangupCause HangupCause \"Valid enum for cause code 18\" testGetByCode void @ HangupCauseTest class public public Test Test assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "ListenerManagerTest": "\"test\" getName String NORMAL getPriority true event onManagerEvent requiredEvents extends extends Class Class Override Override Override Override return return return return private size removeListener shuffle addListener add add getListener getListener listener listener listener listener listener i i i int for for queue queue queue queue ListenerManager ListenerManager new new new new listeners listeners listeners listeners FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener InterruptedException throws listenerTest void void @ @ @ @ @ false managereventRecevied managereventRecevied boolean volatile ListenerManagerTest class class public public public public public public Test Test VarSetEvent VarSetEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent events events events events events wrap wrap asterisk asterisk ListenerPriority ListenerPriority ListenerPriority Set Set Set List List LinkedList LinkedList HashSet HashSet Collections Collections util util util util util java java java java java assertTrue assertTrue assertTrue Assert junit junit static import import import import import import import import import import core internal pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "ManagerConnectionImplTest": "\"username\" setExpectedUsername new setUp void @ mc MockedManagerConnectionImpl mockReader ManagerReaderMock mockWriter mockWriter mockWriter ManagerWriterMock ManagerWriterMock mockSocket protected protected protected protected ManagerConnectionImplTest class public public Test Before Before SocketConnectionFacade SocketConnectionFacade ManagerResponse response NewChannelEvent ManagerEvent DisconnectEvent ConnectEvent event event event event StatusAction PingAction CommandAction action action action TimeoutException ManagerEventListener ManagerConnectionState AuthenticationFailedException AsteriskVersion List ArrayList util util util IOException io java java java fail assertTrue assertFalse assertEquals Assert Assert Assert Assert junit junit junit junit junit junit verify replay expect createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerReaderImplTest": "getHighestSequence Long \"Invalid highest sequence on RtcpReceivedEvent\" getFromPort Integer \"Invalid from port on RtcpReceivedEvent\" getHostAddress getFromAddress \"192.168.0.1\" \"Invalid from address on RtcpReceivedEvent\" rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent \"first event must be a RtcpReceivedEvent\" \"HighestSequence: 999\" \"From 192.168.0.1:1234\" \"Event: RTCPReceived\" testWorkaroundForAsteriskBug13319 testRunReceivingEventWithMapPropertyAndOnlyOneEntry \"second event must be an DisconnectEvent\" \"second event must be an DisconnectEvent\" \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"first event must be a AgentCalledEvent\" \"first event must be a AgentCalledEvent\" \"Variable: var2=val2\" \"Variable: var1=val1\" \"Variable: var1=val1\" \"Event: AgentCalled\" \"Event: AgentCalled\" testRunReceivingEventWithMapProperty \"first event must be a StatusCompleteEvent\" \"\" \"\" \"\" \"\" \"Event: StatusComplete\" testRunReceivingEvent \"DisconnectEvent contains incorrect dateReceived\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" getDateReceived getDateReceived \"ProtocolIdentifierReceivedEvent contains incorrect dateReceived\" getProtocolIdentifier \"ProtocolIdentifierReceivedEvent contains incorrect protocol identifier\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass get get get get get get get get get get get get get get get get get get get \"first event must be a ProtocolIdentifierReceivedEvent\" size size size size size size size dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" setSocket setSocket setSocket setSocket setSocket \"Asterisk Call Manager/1.0\" \"Asterisk Call Manager/1.0\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine Exception Exception Exception Exception Exception throws throws throws throws throws testRunReceivingProtocolIdentifier instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" run run run run run run try testRunWithoutSocket \"cast\" SuppressWarnings null null null null null null tearDown this ManagerReaderImpl overrideCurrentDate overrideCurrentDate new new new new new setUp void void void void void void void void @ @ @ @ @ @ @ @ @ managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader ManagerReader socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher MockedDispatcher MockedDispatcher now now now now now private private private private ManagerReaderImplTest class class class class class class class class class class class class class class public public public public public public public public public Test Test Test Test Test Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade DateUtil DateUtil DateUtil ManagerResponse CommandResponse response response StatusCompleteEvent StatusCompleteEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ManagerEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent event event event event event event event event event event event event event event event List Date Date Date ArrayList util util util util util IOException io java java java java fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerWriterImplTest": "setSocket flush \"action: Status\\r\\n\\r\\n\" write socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade testSendAction instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" null null sendAction sendAction try Exception Exception throws throws testSendActionWithoutSocket \"cast\" SuppressWarnings ManagerWriterImpl new new new setUp void void void @ @ @ @ managerWriter managerWriter managerWriter managerWriter managerWriter ManagerWriter private ManagerWriterImplTest class class public public public public Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StatusAction StatusAction StatusAction action fail fail assertTrue assertTrue Assert Assert junit junit junit junit verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static static static import import import import import import import import import internal manager manager asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "NewStateEventTest": "\"Unknown (4)\" testWithUnknownState getChannelStateDesc getChannelState getChannelState Integer Integer \"Ring\" \"Ring\" setState setState testWithState this new new new setUp void void void @ @ @ newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent NewStateEvent NewStateEvent private NewStateEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "QueueMemberStateTest": "toString testToString \"DEVICE_INUSE\" \"DEVICE_INUSE\" valueOf valueOf DEVICE_INUSE DEVICE_INUSE DEVICE_INUSE QueueMemberState QueueMemberState QueueMemberState QueueMemberState QueueMemberState testValueOf void void @ @ QueueMemberStateTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "RateLimiterTest": "sleep Thread println out acquire i i i int for new limiter limiter currentTimeMillis currentTimeMillis System System System now long InterruptedException throws test void @ RateLimiterTest class public public Test Test RateLimiter RateLimiter RateLimiter assertTrue Assert junit junit static import import import agi agi pbx pbx asteriskjava asteriskjava org org org org package ",
            "ResourceBundleMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"net.sf.asterisk.fastagi.unavailable\" testDetermineScriptWithResourceBundleUnavailable \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" determineScript determineScript determineScript determineScript determineScript SimpleAgiRequest SimpleAgiRequest SimpleAgiRequest request request request request request request request request request request request AgiRequest AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript \"test-mapping\" setResourceBundleName setResourceBundleName new new new new this this setUp void void void void @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ResourceBundleMappingStrategy ResourceBundleMappingStrategy private ResourceBundleMappingStrategyTest class class class public public public public public Test Test Test Test Before Before assertTrue assertTrue assertTrue assertNull assertNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit junit static static static static import import import import import import fastagi asteriskjava org org org org org org org package ",
            "ResponseBuilderImplTest": "getStatus \"Status not set correctly\" getHint \"Hint not set correctly\" getContext \"Context not set correctly\" getExten \"Exten not set correctly\" extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse \"-1\" \"status\" \"\" \"\" \"hint\" \"default\" \"default\" \"context\" \"exten\" \"Extension Status\" testBuildExtensionStateResponse getOldMessages \"Old messages set correctly\" getNewMessages valueOf valueOf valueOf Integer Integer Integer \"New messages not set correctly\" mailboxCountResponse mailboxCountResponse mailboxCountResponse mailboxCountResponse \"5\" \"oldmessages\" \"2\" \"newmessages\" \"123@myctx\" \"123@myctx\" \"Mailbox Message Count\" testBuildMailboxCountResponse FALSE \"0\" \"123,user2\" \"123,user2\" testBuildMailboxStatusResponseWithNoWaiting getWaiting getWaiting TRUE Boolean Boolean \"Waiting not set correctly\" \"Waiting not set correctly\" getMailbox getMailbox getMailbox \"Mailbox not set correctly\" \"Mailbox not set correctly\" \"Mailbox not set correctly\" mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse \"1\" \"1\" \"1\" \"waiting\" \"waiting\" \"123\" \"123\" \"mailbox\" \"mailbox\" \"mailbox\" \"Mailbox Status\" \"Mailbox Status\" testBuildMailboxStatusResponse getChallenge \"Challenge not set correctly\" \"131494410\" \"131494410\" \"challenge\" testBuildChallengeResponse getActionId \"ActionId not set correctly\" \"1234\" \"1234\" \"actionid\" testBuildErrorWithActionId getMessage \"Message not set correctly\" \"Missing action in request\" \"Missing action in request\" \"Missing action in request\" \"message\" \"message\" \"message\" \"message\" \"message\" \"message\" \"Error\" \"Error\" testBuildError null testBuildResponseWithoutResponseClass getResponse getResponse \"Response not set correctly\" \"Response not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put testBuildResponse new new this this setUp void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes Object Object String String responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder ResponseBuilderImpl ResponseBuilderImpl private private ResponseBuilderImplTest class class class class class class class class class class class class class class class class class public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Before Before ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerError ManagerError MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ChallengeResponse ChallengeResponse ChallengeResponse ChallengeResponse response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response Map Map HashMap HashMap util util java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "RtcpReceivedEventTest": "\"1.2345 (sec)\" testDlSrWithSpace getDlSr \"1.2345(sec)\" setDlSr setDlSr testDlSr PT_SENDER_REPORT getPt getPt Long Long \"200(Sender Report)\" setPt testPt getFromPort Integer getHostAddress getFromAddress \"192.168.0.1\" \"192.168.0.1:1234\" setFrom testFrom this new new new new setUp void void void void void @ @ @ @ @ rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent private RtcpReceivedEventTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "ScriptEngineMappingStrategyTest": "testSearchFileOutsidePath getPath \"bla\" getCanonicalPath \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \".\" \".\" \"test\" \"test\" \"src\" \"src\" \"src\" String String String String null null searchFile searchFile searchFile searchFile searchFile throws testSearchFile new new new new new new this setUp void void void @ @ @ scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy private ScriptEngineMappingStrategyTest class public public public public Test Test Test Before Before IOException IOException File File io io java java assertNull assertNull assertNull assertNull assertNull assertEquals assertEquals Assert Assert junit junit junit junit getExtension ScriptEngineMappingStrategy ScriptEngineMappingStrategy ScriptEngineMappingStrategy static static static import import import import import import import fastagi fastagi asteriskjava asteriskjava org org org org org org package ",
            "SipShowPeerResponseTest": "getMohsuggest \"Incorrect mohsuggest\" \"default\" \"default\" setMohsuggest testSetMohsuggest \": 60000 ms\\nChanVariable:\\n PHBX_ID,191\" testSetQualifyFreqWithWorkaroundAndChanVariable \": 6000 ms\\n\" testSetQualifyFreqWithWorkaround getQualifyFreq getQualifyFreq getQualifyFreq int int int \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"6000 ms\" setQualifyFreq setQualifyFreq setQualifyFreq testSetQualifyFreq new setUp void void void void void @ @ @ @ @ SipShowPeerResponse SipShowPeerResponse private SipShowPeerResponseTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import response response response response response response response response response response response manager asteriskjava org org org org package ",
            "SkypeBuddyStatusEventTest": "getBuddySkypename \"the.buddy\" testGetBuddySkypename getUser \"user\" testGetUser \"Skype/user@the.buddy\" setBuddy this new setUp void void void @ @ @ SkypeBuddyStatusEvent SkypeBuddyStatusEvent private SkypeBuddyStatusEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals Assert junit junit junit static import import import event event event event event event manager asteriskjava org org org org package ",
            "SkypeChatMessageEventTest": "getDecodedMessage \"h\u00f6\u00f6\u00f6?\" \"Inocrrectly decoded message\" \"aMO2w7bDtj8=\" setMessage this new SkypeChatMessageEvent SkypeChatMessageEvent final testGetDecodedMessage void @ SkypeChatMessageEventTest class public public Test Test assertEquals assertEquals Assert junit junit static import import event event event event manager asteriskjava org org org package ",
            "T38FaxStatusEventTest": "getAverageRxDataRateInBps getAverageTxDataRateInBps getAverageLagInMilliSeconds getT38SessionDurationInSeconds getMaxLagInMilliSeconds intValue intValue intValue intValue getTotalLagInMilliSeconds \"0 bps\" setAverageRxDataRate \"363 bps\" setAverageTxDataRate \"-1.80 ms\" setAverageLag setT38SessionDuration \"4 ms\" setMaxLag \"-9 ms\" setTotalLag testParseProperties \"0.022 sec.\" \"0.022 sec.\" stripUnit \"0.022\" this this new new T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent testStripUnit void void @ @ T38FaxStatusEventTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import event event event event event event event event event event event event event event event event manager asteriskjava org org org package "
        },
        "deleted_diff_per_file": {
            "src/main/java/org/asteriskjava/util/internal/SocketConnectionFacadeImpl.java": "import java.io.BufferedReader;\nimport java.util.Scanner;\n    private Scanner scanner;\n        BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, encoding));\n        this.scanner = new Scanner(reader);\n        this.scanner.useDelimiter(pattern);\n        String line;\n            if (scanner.ioException() != null)\n            {\n                throw scanner.ioException();\n            }\n            if (scanner.ioException() != null)\n            {\n                throw scanner.ioException();\n            }\n"
        },
        "deleted_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/util/internal/SocketConnectionFacadeImpl.java": [
                19,
                32,
                51,
                171,
                173,
                174,
                181,
                188,
                189,
                190,
                191,
                197,
                198,
                199,
                200
            ]
        },
        "diff_code": "+    private FastScanner scanner;\n+        InputStreamReader reader = new InputStreamReader(inputStream, encoding);\n+        this.scanner = FastScannerFactory.getReader(reader, pattern);\n+        String line = null;\n+    public String next() throws IOException;\n+    private char crChar = '\\r';\n+    private boolean seenReturn = false;\n+    public FastScannerCrNl(Readable reader)\n+    {\n+        super(reader);\n+    }\n+    protected String getLine(boolean endOfLine)\n+    {\n+        for (int i = start; i < end; i++)\n+        {\n+            if (cbuf.get(i) == crChar)\n+            {\n+                seenReturn = true;\n+            }\n+            else if (seenReturn && cbuf.get(i) == nlChar)\n+            {\n+                if (i == start)\n+                {\n+                    result.setLength(result.length() - 1);\n+                }\n+                if (i > start)\n+                {\n+                    result.append(cbuf.subSequence(start, start + (i - start) - 1));\n+                }\n+                start = i + 1;\n+                String tmp = result.toString();\n+                result.setLength(0);\n+                seenReturn = false;\n+                return tmp;\n+            }\n+            else\n+            {\n+                seenReturn = false;\n+            }\n+        }\n+        if (end >= start)\n+        {\n+            result.append(cbuf.subSequence(start, start + (end - start))).toString();\n+            start = 0;\n+            end = 0;\n+        }\n+        return null;\n+    }\n+    private static final Log logger = LogFactory.getLog(FastScannerFactory.class);\n+    private static volatile boolean useLegacyScanner = false;\n+    public static FastScanner getReader(Readable reader, Pattern pattern)\n+    {\n+        if (!useLegacyScanner)\n+        {\n+            if (pattern.pattern().equals(\"\\r\\n\"))\n+            {\n+                return new FastScannerCrNl(reader);\n+            }\n+            if (pattern.pattern().equals(\"\\n\"))\n+            {\n+                return new FastScannerNl(reader);\n+            }\n+        }\n+        logger.warn(\"Using legacy scanner\");\n+        Scanner scanner = new Scanner(reader);\n+        scanner.useDelimiter(pattern);\n+        return getWrappedScanner(scanner);\n+    }\n+    public static void useLegacyScanner(boolean b)\n+    {\n+        useLegacyScanner = b;\n+    }\n+    private static FastScanner getWrappedScanner(final Scanner scanner)\n+    {\n+        return new FastScanner()\n+        {\n+            @Override\n+            public String next() throws IOException\n+            {\n+                try\n+                {\n+                    return scanner.next();\n+                }\n+                catch (NoSuchElementException e)\n+                {\n+                    return null;\n+                }\n+            }\n+            @Override\n+            public void close()\n+            {\n+                scanner.close();\n+            }\n+        };\n+    }\n+    private static final Log logger = LogFactory.getLog(FastScannerNl.class);\n+    private static final int BUFFER_SIZE = 8192;\n+    private AtomicReference<Readable> readableReference = new AtomicReference<>();\n+    protected char nlChar = '\\n';\n+    protected StringBuilder result = new StringBuilder(80);\n+    protected CharBuffer cbuf = CharBuffer.allocate(BUFFER_SIZE);\n+    protected int end = 0;\n+    protected int start = 0;\n+    private boolean closed = false;\n+    protected final Object sync = new Object();\n+    private boolean isFirst = true;\n+    File logfile;\n+    private BufferedWriter writer;\n+    public FastScannerNl(Readable reader)\n+    {\n+        this.readableReference.set(reader);\n+    }\n+    public String next() throws IOException\n+    {\n+        int bytes = 0;\n+        String line = getLine(false);\n+        if (line == null)\n+        {\n+            Readable readable = readableReference.get();\n+            while (readable != null && (bytes = readable.read(cbuf)) > -1)\n+            {\n+                cbuf.position(0);\n+                end = bytes;\n+                line = getLine(bytes >= 0);\n+                if (line != null)\n+                {\n+                    if (isFirst && line.length() == 0)\n+                    {\n+                        line = getLine(bytes >= 0);\n+                    }\n+                    break;\n+                }\n+            }\n+        }\n+        isFirst = false;\n+        if (line == null)\n+        {\n+            String tmp = result.toString();\n+            result.setLength(0);\n+            if (readableReference.get() == null && tmp.length() == 0)\n+            {\n+                return null;\n+            }\n+            if (bytes == -1 && tmp.length() == 0)\n+            {\n+                return null;\n+            }\n+            return tmp;\n+        }\n+        return line;\n+    }\n+    protected String getLine(boolean endOfLine)\n+    {\n+        for (int i = start; i < end; i++)\n+        {\n+            if (cbuf.get(i) == nlChar)\n+            {\n+                if (i > start)\n+                {\n+                    result.append(cbuf.subSequence(start, start + (i - start)));\n+                }\n+                start = i + 1;\n+                String tmp = result.toString();\n+                result.setLength(0);\n+                return tmp;\n+            }\n+        }\n+        if (end >= start)\n+        {\n+            result.append(cbuf.subSequence(start, start + (end - start))).toString();\n+            start = 0;\n+            end = 0;\n+        }\n+        return null;\n+    }\n+    public void close()\n+    {\n+        synchronized (sync)\n+        {\n+            if (closed)\n+                return;\n+            if (readableReference.get() instanceof Closeable)\n+            {\n+                try\n+                {\n+                    ((Closeable) readableReference.get()).close();\n+                }\n+                catch (IOException ioe)\n+                {\n+                    logger.error(ioe, ioe);\n+                }\n+            }\n+            readableReference.set(null);\n+            closed = true;\n+        }\n+    }\n+    @SuppressWarnings(\"unused\")\n+    private void createFileWriter()\n+    {\n+        try\n+        {\n+            logfile = File.createTempFile(this.getClass().getSimpleName(), \"txt\");\n+            writer = Files.newBufferedWriter(logfile.toPath(), Charset.defaultCharset(), StandardOpenOption.APPEND);\n+        }\n+        catch (IOException e)\n+        {\n+            e.printStackTrace();\n+        }\n+    }\n+    @SuppressWarnings(\"unused\")\n+    private void writeToFile(int bytes) throws IOException\n+    {\n+        String lines = new StringBuffer().append(cbuf, 0, bytes).toString();\n+        writer.append(lines, 0, bytes);\n+    }\n+    @SuppressWarnings(\"unused\")\n+    private void closeFileWriter() throws IOException\n+    {\n+        writer.flush();\n+        writer.close();\n+    }\n+    @Test\n+    public void testCrNlScanner() throws Exception\n+    {\n+        testScanner(10000, SocketConnectionFacadeImpl.NL_PATTERN);\n+    }\n+    @Test\n+    public void testNlScanner() throws Exception\n+    {\n+        testScanner(10000, SocketConnectionFacadeImpl.CRNL_PATTERN);\n+    }\n+    private void testScanner(int testLines, Pattern pattern) throws Exception\n+    {\n+        final byte[] bytes = buildTestData(testLines, pattern).getBytes();\n+        InputStream inputStream = new ByteArrayInputStream(bytes);\n+        InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n+        try (FastScanner scanner = FastScannerFactory.getReader(reader, pattern))\n+        {\n+            System.out.println(\"\\nTesting scanner class: \" + scanner.getClass());\n+            int ctr = 0;\n+            @SuppressWarnings(\"unused\")\n+            String t;\n+            while ((t = scanner.next()) != null)\n+            {\n+                ctr++;\n+            }\n+            assertTrue(\"Counter expected : \" + (testLines) + \" got \" + ctr, (testLines) == ctr);\n+        }\n+        catch (NoSuchElementException e)\n+        {\n+        }\n+        System.out.println(\"Done\\n\");\n+    }\n+    @Test\n+    public void testBR2Accuraccy3() throws Exception\n+    {\n+        final byte[] bytes = Files.readAllBytes(new File(\"NlStreamReaderFast273316816601633219txt\").toPath());\n+        InputStream inputStream = new ByteArrayInputStream(bytes);\n+        InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n+        try (FastScannerNl scanner = new FastScannerNl(reader);)\n+        {\n+            String t;\n+            while ((t = scanner.next()) != null)\n+            {\n+                System.out.println(\"L: \" + t + \" \" + t.length());\n+            }\n+        }\n+        catch (NoSuchElementException e)\n+        {\n+        }\n+    }\n+    String buildTestData(int lines, Pattern terminator)\n+    {\n+        StringBuilder builder = new StringBuilder(lines * 30);\n+        int ctr = 0;\n+        while (ctr < lines)\n+        {\n+            ctr++;\n+            builder.append(\"Hallo hello: one line with text! \" + ctr + terminator.pattern());\n+        }\n+        return builder.toString();\n+    }\n+    @Test\n+    public void compareOutputOfNlFastScannerToScanner() throws Exception\n+    {\n+        setupTest(SocketConnectionFacadeImpl.NL_PATTERN, \"NL\");\n+    }\n+    @Test\n+    public void compareOutputOfCrNlFastScannerToScanner() throws Exception\n+    {\n+        setupTest(SocketConnectionFacadeImpl.CRNL_PATTERN, \"CR NL\");\n+    }\n+    void setupTest(final Pattern pattern, String caption) throws InterruptedException\n+    {\n+        final AtomicInteger ctr = new AtomicInteger();\n+        int tests = 50;\n+        for (int i = 0; i < tests; i++)\n+        {\n+            try\n+            {\n+                String testData = generateTestData(1_000_000);\n+                compare(testData, pattern);\n+                System.out.println(caption + \" Completed \" + (ctr.incrementAndGet()) * 1 + \"MB\");\n+            }\n+            catch (Exception e)\n+            {\n+                e.printStackTrace();\n+                fail();\n+            }\n+        }\n+    }\n+    boolean compare(String testData, Pattern pattern) throws IOException\n+    {\n+        InputStream inputStream1 = new ByteArrayInputStream(testData.getBytes());\n+        InputStreamReader reader1 = new InputStreamReader(inputStream1, StandardCharsets.UTF_8);\n+        InputStream inputStream2 = new ByteArrayInputStream(testData.getBytes());\n+        InputStreamReader reader2 = new InputStreamReader(inputStream2, StandardCharsets.UTF_8);\n+        FastScanner fast = FastScannerFactory.getReader(reader2, pattern);\n+        String scannerResult = \"\";\n+        String fastResult = \"\";\n+        int ctr = 0;\n+        Scanner scanner = new Scanner(reader1);\n+        scanner.useDelimiter(pattern);\n+        try\n+        {\n+            while ((scannerResult = scanner.next()) != null)\n+            {\n+                ctr++;\n+                fastResult = fast.next();\n+                if (!fastResult.equals(scannerResult))\n+                {\n+                    System.out.println(\"Expected \" + ByteArrayUtil.toHexString(scannerResult.getBytes()));\n+                    System.out.println(\"Got      \" + ByteArrayUtil.toHexString(fastResult.getBytes()));\n+                    System.out.println(\"Error \" + ctr);\n+                    System.out.println(\"\");\n+                    throw new RuntimeException(\"Mismatched output\");\n+                }\n+            }\n+        }\n+        catch (NoSuchElementException e)\n+        {\n+            if (fast.next() != null)\n+            {\n+                throw new RuntimeException(\"Expected null, not something else\");\n+            }\n+        }\n+        finally\n+        {\n+            scanner.close();\n+            fast.close();\n+        }\n+        return false;\n+    }\n+    public static String generateTestData(int byteSize)\n+    {\n+        Random rand = new Random();\n+        String bodyData = \"abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(),.<>[] {};':\\\"\";\n+        bodyData += bodyData.toUpperCase();\n+        String[] terminators = new String[]{\"\\n\", \"\\r\", \"\\r\\n\", \"\\n\\r\"};\n+        StringBuilder builder = new StringBuilder(byteSize * 2);\n+        for (int i = 0; i < byteSize; i++)\n+        {\n+            if (Math.random() * 100 > 98)\n+            {\n+                builder.append(terminators[rand.nextInt(terminators.length)]);\n+            }\n+            else\n+            {\n+                int position = rand.nextInt(bodyData.length());\n+                builder.append(bodyData.substring(position, position + 1));\n+            }\n+        }\n+        return builder.toString();\n+    }\n+    @Test\n+    public void testScannerSpeed() throws Exception\n+    {\n+        final byte[] bytes = FastScannerRandomTest.generateTestData(10_000_000).getBytes();\n+        for (int i = 10; i-- > 0;)\n+        {\n+            System.out.print(\"Scanner \" + i + \":\\t\");\n+            InputStream inputStream = new ByteArrayInputStream(bytes);\n+            InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n+            long start = System.currentTimeMillis();\n+            int ctr = 0;\n+            try (Scanner scanner = new Scanner(reader);)\n+            {\n+                scanner.useDelimiter(Pattern.compile(\"\\r\\n\"));\n+                @SuppressWarnings(\"unused\")\n+                String t;\n+                while ((t = scanner.next()) != null)\n+                {\n+                    ctr++;\n+                }\n+                System.out.print(ctr + \"\\t\");\n+            }\n+            catch (NoSuchElementException e)\n+            {\n+                System.out.print(ctr + \"\\t\");\n+            }\n+            System.out.println((System.currentTimeMillis() - start) + \" ms\");\n+        }\n+    }\n+    @Test\n+    public void test1() throws Exception\n+    {\n+        System.out.println(\"\\nTesting fast CrNlStream\");\n+        fastScannerSpeedTest(SocketConnectionFacadeImpl.CRNL_PATTERN);\n+    }\n+    @Test\n+    public void test2() throws Exception\n+    {\n+        System.out.println(\"\\nTesting fast NlStream\");\n+        fastScannerSpeedTest(SocketConnectionFacadeImpl.NL_PATTERN);\n+    }\n+    private void fastScannerSpeedTest(Pattern pattern) throws Exception\n+    {\n+        final byte[] bytes = FastScannerRandomTest.generateTestData(10_000_000).getBytes();\n+        for (int i = 10; i-- > 0;)\n+        {\n+            System.out.print(\"Fast \" + i + \":\\t\");\n+            InputStream inputStream = new ByteArrayInputStream(bytes);\n+            InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n+            FastScanner scanner = FastScannerFactory.getReader(reader, pattern);\n+            long start = System.currentTimeMillis();\n+            try\n+            {\n+                int ctr = 0;\n+                @SuppressWarnings(\"unused\")\n+                String t;\n+                while ((t = scanner.next()) != null)\n+                {\n+                    ctr++;\n+                }\n+                System.out.print(ctr + \"\\t\");\n+            }\n+            catch (NoSuchElementException e)\n+            {\n+            }\n+            System.out.println((System.currentTimeMillis() - start) + \" ms\");\n+        }\n+    }\n+    @Test\n+    public void testScannerSpeed() throws Exception\n+    {\n+        try\n+        {\n+            for (int i = 10; i-- > 0;)\n+            {\n+                InputStreamReader reader = getReader();\n+                System.out.print(\"Scanner \" + i + \":\\t\");\n+                long start = System.currentTimeMillis();\n+                int ctr = 0;\n+                try (Scanner scanner = new Scanner(reader);)\n+                {\n+                    scanner.useDelimiter(Pattern.compile(\"\\r\\n\"));\n+                    @SuppressWarnings(\"unused\")\n+                    String t;\n+                    while ((t = scanner.next()) != null)\n+                    {\n+                        ctr++;\n+                    }\n+                    System.out.print(ctr + \"\\t\");\n+                }\n+                catch (NoSuchElementException e)\n+                {\n+                    System.out.print(ctr + \"\\t\");\n+                }\n+                System.out.println((System.currentTimeMillis() - start) + \" ms\");\n+            }\n+        }\n+        catch (Exception e)\n+        {\n+            System.out.println(\n+                    \"If you want to run FastScannerSpeedTestOnSocket, you'll need to run FastScannerTestSocketSource first\");\n+        }\n+    }\n+    private InputStreamReader getReader() throws UnknownHostException, IOException, InterruptedException\n+    {\n+        Socket echoSocket = new Socket(\"127.0.0.1\", FastScannerTestSocketSource.portNumber);\n+        InputStream inputStream = echoSocket.getInputStream();\n+        InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n+        return reader;\n+    }\n+    @Test\n+    public void test1() throws Exception\n+    {\n+        System.out.println(\"\\nTesting fast CrNlStream\");\n+        fastScannerSpeedTest(SocketConnectionFacadeImpl.CRNL_PATTERN);\n+    }\n+    @Test\n+    public void test2() throws Exception\n+    {\n+        System.out.println(\"\\nTesting fast NlStream\");\n+        fastScannerSpeedTest(SocketConnectionFacadeImpl.NL_PATTERN);\n+    }\n+    private void fastScannerSpeedTest(Pattern pattern) throws Exception\n+    {\n+        try\n+        {\n+            for (int i = 10; i-- > 0;)\n+            {\n+                InputStreamReader reader = getReader();\n+                System.out.print(\"Fast \" + i + \":\\t\");\n+                FastScanner scanner = FastScannerFactory.getReader(reader, pattern);\n+                long start = System.currentTimeMillis();\n+                try\n+                {\n+                    int ctr = 0;\n+                    @SuppressWarnings(\"unused\")\n+                    String t;\n+                    while ((t = scanner.next()) != null)\n+                    {\n+                        ctr++;\n+                    }\n+                    System.out.print(ctr + \"\\t\");\n+                }\n+                catch (NoSuchElementException e)\n+                {\n+                }\n+                System.out.println((System.currentTimeMillis() - start) + \" ms\");\n+            }\n+        }\n+        catch (Exception e)\n+        {\n+            System.out.println(\n+                    \"If you want to run FastScannerSpeedTestOnSocket, you'll need to run FastScannerTestSocketSource first\");\n+        }\n+    }\n+    final static byte[] bytes = FastScannerRandomTest.generateTestData(100_000_000).getBytes();\n+    public static int portNumber = 2048;\n+    public static void main(String[] args) throws IOException\n+    {\n+        while (true)\n+        {\n+            listen();\n+        }\n+    }\n+    static void listen() throws IOException\n+    {\n+        System.out.println(\"Waiting for connect on \" + portNumber);\n+        try (ServerSocket serverSocket = new ServerSocket(portNumber); Socket clientSocket = serverSocket.accept();)\n+        {\n+            clientSocket.getOutputStream().write(bytes);\n+        }\n+    }\n",
        "diff_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/util/internal/SocketConnectionFacadeImpl.java": [
                37,
                38,
                51,
                171,
                173,
                181
            ],
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScanner.java": [
                1,
                3,
                4,
                6,
                7,
                8,
                10
            ],
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerCrNl.java": [
                1,
                3,
                4,
                6,
                7,
                9,
                10,
                11,
                13,
                15,
                16,
                18,
                19,
                20,
                21,
                24,
                25,
                26,
                27,
                30,
                31,
                33,
                34,
                35,
                36,
                38,
                39,
                41,
                44,
                47,
                50,
                52,
                53,
                54,
                55,
                57,
                58,
                59,
                60,
                61,
                65,
                66,
                67,
                68,
                69,
                70,
                72
            ],
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerFactory.java": [
                1,
                3,
                4,
                5,
                6,
                8,
                9,
                11,
                12,
                13,
                15,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                33,
                34,
                35,
                37,
                39,
                41,
                42,
                43,
                44,
                46,
                47,
                48,
                49,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                64,
                65,
                66,
                67,
                68,
                70,
                71,
                72
            ],
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerNl.java": [
                2,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                14,
                15,
                17,
                18,
                19,
                21,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                32,
                34,
                36,
                38,
                39,
                40,
                44,
                46,
                47,
                48,
                51,
                52,
                53,
                58,
                61,
                62,
                66,
                68,
                71,
                73,
                74,
                75,
                76,
                79,
                80,
                81,
                82,
                83,
                85,
                87,
                88,
                90,
                92,
                93,
                96,
                97,
                98,
                99,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                110,
                112,
                113,
                115,
                116,
                117,
                118,
                119,
                120,
                122,
                123,
                125,
                128,
                131,
                132,
                134,
                135,
                136,
                137,
                141,
                142,
                143,
                144,
                145,
                146,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183,
                185,
                186,
                187,
                188,
                189,
                190,
                192,
                193,
                194,
                195,
                196,
                197,
                199
            ],
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerDeterministicTest.java": [
                1,
                3,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                14,
                15,
                17,
                18,
                20,
                21,
                22,
                23,
                24,
                26,
                27,
                28,
                29,
                30,
                32,
                33,
                35,
                37,
                39,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                51,
                52,
                53,
                55,
                56,
                57,
                58,
                60,
                61,
                63,
                64,
                65,
                67,
                69,
                71,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                81,
                82,
                83,
                84,
                85,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98
            ],
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerRandomTest.java": [
                1,
                3,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                16,
                17,
                19,
                21,
                22,
                23,
                24,
                25,
                26,
                28,
                30,
                31,
                32,
                33,
                35,
                37,
                38,
                40,
                42,
                44,
                45,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                59,
                61,
                63,
                64,
                66,
                67,
                69,
                70,
                72,
                74,
                75,
                77,
                78,
                80,
                82,
                83,
                84,
                85,
                86,
                87,
                89,
                90,
                92,
                93,
                94,
                95,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                117,
                118,
                119,
                120,
                121,
                123,
                125,
                126,
                127,
                128,
                129,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                140,
                142,
                143
            ],
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTest.java": [
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                11,
                12,
                14,
                15,
                16,
                17,
                18,
                19,
                21,
                22,
                23,
                25,
                27,
                29,
                30,
                31,
                32,
                34,
                36,
                37,
                38,
                39,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                53,
                54,
                55,
                56,
                57,
                58,
                60,
                61,
                62,
                67,
                68,
                69,
                71,
                72,
                73,
                75,
                76,
                77,
                79,
                81,
                82,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                93,
                94,
                95,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                105
            ],
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTestOnSocket.java": [
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                13,
                14,
                16,
                17,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                27,
                28,
                30,
                31,
                32,
                33,
                35,
                37,
                38,
                39,
                40,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                60,
                61,
                63,
                65,
                67,
                68,
                69,
                71,
                72,
                73,
                74,
                75,
                76,
                78,
                79,
                80,
                85,
                86,
                87,
                89,
                90,
                91,
                92,
                93,
                94,
                96,
                97,
                98,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                109,
                110,
                111,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                127
            ],
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerTestSocketSource.java": [
                1,
                3,
                4,
                5,
                7,
                8,
                10,
                11,
                13,
                14,
                16,
                17,
                19,
                20,
                22,
                24,
                25,
                26,
                28,
                29,
                30,
                31,
                32,
                34
            ]
        },
        "diff_per_file": {
            "src/main/java/org/asteriskjava/util/internal/SocketConnectionFacadeImpl.java": "import org.asteriskjava.util.internal.streamreader.FastScanner;\nimport org.asteriskjava.util.internal.streamreader.FastScannerFactory;\n    private FastScanner scanner;\n        InputStreamReader reader = new InputStreamReader(inputStream, encoding);\n        this.scanner = FastScannerFactory.getReader(reader, pattern);\n        String line = null;\n",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScanner.java": "package org.asteriskjava.util.internal.streamreader;\nimport java.io.Closeable;\nimport java.io.IOException;\npublic interface FastScanner extends Closeable\n{\n    public String next() throws IOException;\n}\n",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerCrNl.java": "package org.asteriskjava.util.internal.streamreader;\npublic class FastScannerCrNl extends FastScannerNl\n{\n    private char crChar = '\\r';\n    private boolean seenReturn = false;\n    public FastScannerCrNl(Readable reader)\n    {\n        super(reader);\n    }\n    protected String getLine(boolean endOfLine)\n    {\n        for (int i = start; i < end; i++)\n        {\n            if (cbuf.get(i) == crChar)\n            {\n                seenReturn = true;\n            }\n            else if (seenReturn && cbuf.get(i) == nlChar)\n            {\n                if (i == start)\n                {\n                    result.setLength(result.length() - 1);\n                }\n                if (i > start)\n                {\n                    result.append(cbuf.subSequence(start, start + (i - start) - 1));\n                }\n                start = i + 1;\n                String tmp = result.toString();\n                result.setLength(0);\n                seenReturn = false;\n                return tmp;\n            }\n            else\n            {\n                seenReturn = false;\n            }\n        }\n        if (end >= start)\n        {\n            result.append(cbuf.subSequence(start, start + (end - start))).toString();\n            start = 0;\n            end = 0;\n        }\n        return null;\n    }\n}\n",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerFactory.java": "package org.asteriskjava.util.internal.streamreader;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.util.Scanner;\nimport java.util.regex.Pattern;\nimport org.asteriskjava.util.Log;\nimport org.asteriskjava.util.LogFactory;\npublic class FastScannerFactory\n{\n    private static final Log logger = LogFactory.getLog(FastScannerFactory.class);\n    private static volatile boolean useLegacyScanner = false;\n    public static FastScanner getReader(Readable reader, Pattern pattern)\n    {\n        if (!useLegacyScanner)\n        {\n            if (pattern.pattern().equals(\"\\r\\n\"))\n            {\n                return new FastScannerCrNl(reader);\n            }\n            if (pattern.pattern().equals(\"\\n\"))\n            {\n                return new FastScannerNl(reader);\n            }\n        }\n        logger.warn(\"Using legacy scanner\");\n        Scanner scanner = new Scanner(reader);\n        scanner.useDelimiter(pattern);\n        return getWrappedScanner(scanner);\n    }\n    public static void useLegacyScanner(boolean b)\n    {\n        useLegacyScanner = b;\n    }\n    private static FastScanner getWrappedScanner(final Scanner scanner)\n    {\n        return new FastScanner()\n        {\n            @Override\n            public String next() throws IOException\n            {\n                try\n                {\n                    return scanner.next();\n                }\n                catch (NoSuchElementException e)\n                {\n                    return null;\n                }\n            }\n            @Override\n            public void close()\n            {\n                scanner.close();\n            }\n        };\n    }\n}\n",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerNl.java": "package org.asteriskjava.util.internal.streamreader;\nimport java.io.BufferedWriter;\nimport java.io.Closeable;\nimport java.io.File;\nimport java.io.IOException;\nimport java.nio.CharBuffer;\nimport java.nio.charset.Charset;\nimport java.nio.file.Files;\nimport java.nio.file.StandardOpenOption;\nimport java.util.concurrent.atomic.AtomicReference;\nimport org.asteriskjava.util.Log;\nimport org.asteriskjava.util.LogFactory;\npublic class FastScannerNl implements FastScanner\n{\n    private static final Log logger = LogFactory.getLog(FastScannerNl.class);\n    private static final int BUFFER_SIZE = 8192;\n    private AtomicReference<Readable> readableReference = new AtomicReference<>();\n    protected char nlChar = '\\n';\n    protected StringBuilder result = new StringBuilder(80);\n    protected CharBuffer cbuf = CharBuffer.allocate(BUFFER_SIZE);\n    protected int end = 0;\n    protected int start = 0;\n    private boolean closed = false;\n    protected final Object sync = new Object();\n    private boolean isFirst = true;\n    File logfile;\n    private BufferedWriter writer;\n    public FastScannerNl(Readable reader)\n    {\n        this.readableReference.set(reader);\n    }\n    public String next() throws IOException\n    {\n        int bytes = 0;\n        String line = getLine(false);\n        if (line == null)\n        {\n            Readable readable = readableReference.get();\n            while (readable != null && (bytes = readable.read(cbuf)) > -1)\n            {\n                cbuf.position(0);\n                end = bytes;\n                line = getLine(bytes >= 0);\n                if (line != null)\n                {\n                    if (isFirst && line.length() == 0)\n                    {\n                        line = getLine(bytes >= 0);\n                    }\n                    break;\n                }\n            }\n        }\n        isFirst = false;\n        if (line == null)\n        {\n            String tmp = result.toString();\n            result.setLength(0);\n            if (readableReference.get() == null && tmp.length() == 0)\n            {\n                return null;\n            }\n            if (bytes == -1 && tmp.length() == 0)\n            {\n                return null;\n            }\n            return tmp;\n        }\n        return line;\n    }\n    protected String getLine(boolean endOfLine)\n    {\n        for (int i = start; i < end; i++)\n        {\n            if (cbuf.get(i) == nlChar)\n            {\n                if (i > start)\n                {\n                    result.append(cbuf.subSequence(start, start + (i - start)));\n                }\n                start = i + 1;\n                String tmp = result.toString();\n                result.setLength(0);\n                return tmp;\n            }\n        }\n        if (end >= start)\n        {\n            result.append(cbuf.subSequence(start, start + (end - start))).toString();\n            start = 0;\n            end = 0;\n        }\n        return null;\n    }\n    public void close()\n    {\n        synchronized (sync)\n        {\n            if (closed)\n                return;\n            if (readableReference.get() instanceof Closeable)\n            {\n                try\n                {\n                    ((Closeable) readableReference.get()).close();\n                }\n                catch (IOException ioe)\n                {\n                    logger.error(ioe, ioe);\n                }\n            }\n            readableReference.set(null);\n            closed = true;\n        }\n    }\n    @SuppressWarnings(\"unused\")\n    private void createFileWriter()\n    {\n        try\n        {\n            logfile = File.createTempFile(this.getClass().getSimpleName(), \"txt\");\n            writer = Files.newBufferedWriter(logfile.toPath(), Charset.defaultCharset(), StandardOpenOption.APPEND);\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n    }\n    @SuppressWarnings(\"unused\")\n    private void writeToFile(int bytes) throws IOException\n    {\n        String lines = new StringBuffer().append(cbuf, 0, bytes).toString();\n        writer.append(lines, 0, bytes);\n    }\n    @SuppressWarnings(\"unused\")\n    private void closeFileWriter() throws IOException\n    {\n        writer.flush();\n        writer.close();\n    }\n}\n",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerDeterministicTest.java": "package org.asteriskjava.util.internal.streamreader;\nimport static org.junit.Assert.assertTrue;\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.util.NoSuchElementException;\nimport java.util.regex.Pattern;\nimport org.asteriskjava.util.internal.SocketConnectionFacadeImpl;\nimport org.junit.Test;\npublic class FastScannerDeterministicTest\n{\n    @Test\n    public void testCrNlScanner() throws Exception\n    {\n        testScanner(10000, SocketConnectionFacadeImpl.NL_PATTERN);\n    }\n    @Test\n    public void testNlScanner() throws Exception\n    {\n        testScanner(10000, SocketConnectionFacadeImpl.CRNL_PATTERN);\n    }\n    private void testScanner(int testLines, Pattern pattern) throws Exception\n    {\n        final byte[] bytes = buildTestData(testLines, pattern).getBytes();\n        InputStream inputStream = new ByteArrayInputStream(bytes);\n        InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n        try (FastScanner scanner = FastScannerFactory.getReader(reader, pattern))\n        {\n            System.out.println(\"\\nTesting scanner class: \" + scanner.getClass());\n            int ctr = 0;\n            @SuppressWarnings(\"unused\")\n            String t;\n            while ((t = scanner.next()) != null)\n            {\n                ctr++;\n            }\n            assertTrue(\"Counter expected : \" + (testLines) + \" got \" + ctr, (testLines) == ctr);\n        }\n        catch (NoSuchElementException e)\n        {\n        }\n        System.out.println(\"Done\\n\");\n    }\n    @Test\n    public void testBR2Accuraccy3() throws Exception\n    {\n        final byte[] bytes = Files.readAllBytes(new File(\"NlStreamReaderFast273316816601633219txt\").toPath());\n        InputStream inputStream = new ByteArrayInputStream(bytes);\n        InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n        try (FastScannerNl scanner = new FastScannerNl(reader);)\n        {\n            String t;\n            while ((t = scanner.next()) != null)\n            {\n                System.out.println(\"L: \" + t + \" \" + t.length());\n            }\n        }\n        catch (NoSuchElementException e)\n        {\n        }\n    }\n    String buildTestData(int lines, Pattern terminator)\n    {\n        StringBuilder builder = new StringBuilder(lines * 30);\n        int ctr = 0;\n        while (ctr < lines)\n        {\n            ctr++;\n            builder.append(\"Hallo hello: one line with text! \" + ctr + terminator.pattern());\n        }\n        return builder.toString();\n    }\n}\n",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerRandomTest.java": "package org.asteriskjava.util.internal.streamreader;\nimport static org.junit.Assert.fail;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.StandardCharsets;\nimport java.util.NoSuchElementException;\nimport java.util.Random;\nimport java.util.Scanner;\nimport java.util.concurrent.atomic.AtomicInteger;\nimport java.util.regex.Pattern;\nimport org.asteriskjava.util.internal.SocketConnectionFacadeImpl;\nimport org.junit.Test;\nimport ch.qos.logback.core.encoder.ByteArrayUtil;\npublic class FastScannerRandomTest\n{\n    @Test\n    public void compareOutputOfNlFastScannerToScanner() throws Exception\n    {\n        setupTest(SocketConnectionFacadeImpl.NL_PATTERN, \"NL\");\n    }\n    @Test\n    public void compareOutputOfCrNlFastScannerToScanner() throws Exception\n    {\n        setupTest(SocketConnectionFacadeImpl.CRNL_PATTERN, \"CR NL\");\n    }\n    void setupTest(final Pattern pattern, String caption) throws InterruptedException\n    {\n        final AtomicInteger ctr = new AtomicInteger();\n        int tests = 50;\n        for (int i = 0; i < tests; i++)\n        {\n            try\n            {\n                String testData = generateTestData(1_000_000);\n                compare(testData, pattern);\n                System.out.println(caption + \" Completed \" + (ctr.incrementAndGet()) * 1 + \"MB\");\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n                fail();\n            }\n        }\n    }\n    boolean compare(String testData, Pattern pattern) throws IOException\n    {\n        InputStream inputStream1 = new ByteArrayInputStream(testData.getBytes());\n        InputStreamReader reader1 = new InputStreamReader(inputStream1, StandardCharsets.UTF_8);\n        InputStream inputStream2 = new ByteArrayInputStream(testData.getBytes());\n        InputStreamReader reader2 = new InputStreamReader(inputStream2, StandardCharsets.UTF_8);\n        FastScanner fast = FastScannerFactory.getReader(reader2, pattern);\n        String scannerResult = \"\";\n        String fastResult = \"\";\n        int ctr = 0;\n        Scanner scanner = new Scanner(reader1);\n        scanner.useDelimiter(pattern);\n        try\n        {\n            while ((scannerResult = scanner.next()) != null)\n            {\n                ctr++;\n                fastResult = fast.next();\n                if (!fastResult.equals(scannerResult))\n                {\n                    System.out.println(\"Expected \" + ByteArrayUtil.toHexString(scannerResult.getBytes()));\n                    System.out.println(\"Got      \" + ByteArrayUtil.toHexString(fastResult.getBytes()));\n                    System.out.println(\"Error \" + ctr);\n                    System.out.println(\"\");\n                    throw new RuntimeException(\"Mismatched output\");\n                }\n            }\n        }\n        catch (NoSuchElementException e)\n        {\n            if (fast.next() != null)\n            {\n                throw new RuntimeException(\"Expected null, not something else\");\n            }\n        }\n        finally\n        {\n            scanner.close();\n            fast.close();\n        }\n        return false;\n    }\n    public static String generateTestData(int byteSize)\n    {\n        Random rand = new Random();\n        String bodyData = \"abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(),.<>[] {};':\\\"\";\n        bodyData += bodyData.toUpperCase();\n        String[] terminators = new String[]{\"\\n\", \"\\r\", \"\\r\\n\", \"\\n\\r\"};\n        StringBuilder builder = new StringBuilder(byteSize * 2);\n        for (int i = 0; i < byteSize; i++)\n        {\n            if (Math.random() * 100 > 98)\n            {\n                builder.append(terminators[rand.nextInt(terminators.length)]);\n            }\n            else\n            {\n                int position = rand.nextInt(bodyData.length());\n                builder.append(bodyData.substring(position, position + 1));\n            }\n        }\n        return builder.toString();\n    }\n}\n",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTest.java": "package org.asteriskjava.util.internal.streamreader;\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.StandardCharsets;\nimport java.util.NoSuchElementException;\nimport java.util.Scanner;\nimport java.util.regex.Pattern;\nimport org.asteriskjava.util.internal.SocketConnectionFacadeImpl;\nimport org.junit.Test;\npublic class FastScannerSpeedTest\n{\n    @Test\n    public void testScannerSpeed() throws Exception\n    {\n        final byte[] bytes = FastScannerRandomTest.generateTestData(10_000_000).getBytes();\n        for (int i = 10; i-- > 0;)\n        {\n            System.out.print(\"Scanner \" + i + \":\\t\");\n            InputStream inputStream = new ByteArrayInputStream(bytes);\n            InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n            long start = System.currentTimeMillis();\n            int ctr = 0;\n            try (Scanner scanner = new Scanner(reader);)\n            {\n                scanner.useDelimiter(Pattern.compile(\"\\r\\n\"));\n                @SuppressWarnings(\"unused\")\n                String t;\n                while ((t = scanner.next()) != null)\n                {\n                    ctr++;\n                }\n                System.out.print(ctr + \"\\t\");\n            }\n            catch (NoSuchElementException e)\n            {\n                System.out.print(ctr + \"\\t\");\n            }\n            System.out.println((System.currentTimeMillis() - start) + \" ms\");\n        }\n    }\n    @Test\n    public void test1() throws Exception\n    {\n        System.out.println(\"\\nTesting fast CrNlStream\");\n        fastScannerSpeedTest(SocketConnectionFacadeImpl.CRNL_PATTERN);\n    }\n    @Test\n    public void test2() throws Exception\n    {\n        System.out.println(\"\\nTesting fast NlStream\");\n        fastScannerSpeedTest(SocketConnectionFacadeImpl.NL_PATTERN);\n    }\n    private void fastScannerSpeedTest(Pattern pattern) throws Exception\n    {\n        final byte[] bytes = FastScannerRandomTest.generateTestData(10_000_000).getBytes();\n        for (int i = 10; i-- > 0;)\n        {\n            System.out.print(\"Fast \" + i + \":\\t\");\n            InputStream inputStream = new ByteArrayInputStream(bytes);\n            InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n            FastScanner scanner = FastScannerFactory.getReader(reader, pattern);\n            long start = System.currentTimeMillis();\n            try\n            {\n                int ctr = 0;\n                @SuppressWarnings(\"unused\")\n                String t;\n                while ((t = scanner.next()) != null)\n                {\n                    ctr++;\n                }\n                System.out.print(ctr + \"\\t\");\n            }\n            catch (NoSuchElementException e)\n            {\n            }\n            System.out.println((System.currentTimeMillis() - start) + \" ms\");\n        }\n    }\n}\n",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTestOnSocket.java": "package org.asteriskjava.util.internal.streamreader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.nio.charset.StandardCharsets;\nimport java.util.NoSuchElementException;\nimport java.util.Scanner;\nimport java.util.regex.Pattern;\nimport org.asteriskjava.util.internal.SocketConnectionFacadeImpl;\nimport org.junit.Test;\npublic class FastScannerSpeedTestOnSocket\n{\n    @Test\n    public void testScannerSpeed() throws Exception\n    {\n        try\n        {\n            for (int i = 10; i-- > 0;)\n            {\n                InputStreamReader reader = getReader();\n                System.out.print(\"Scanner \" + i + \":\\t\");\n                long start = System.currentTimeMillis();\n                int ctr = 0;\n                try (Scanner scanner = new Scanner(reader);)\n                {\n                    scanner.useDelimiter(Pattern.compile(\"\\r\\n\"));\n                    @SuppressWarnings(\"unused\")\n                    String t;\n                    while ((t = scanner.next()) != null)\n                    {\n                        ctr++;\n                    }\n                    System.out.print(ctr + \"\\t\");\n                }\n                catch (NoSuchElementException e)\n                {\n                    System.out.print(ctr + \"\\t\");\n                }\n                System.out.println((System.currentTimeMillis() - start) + \" ms\");\n            }\n        }\n        catch (Exception e)\n        {\n            System.out.println(\n                    \"If you want to run FastScannerSpeedTestOnSocket, you'll need to run FastScannerTestSocketSource first\");\n        }\n    }\n    private InputStreamReader getReader() throws UnknownHostException, IOException, InterruptedException\n    {\n        Socket echoSocket = new Socket(\"127.0.0.1\", FastScannerTestSocketSource.portNumber);\n        InputStream inputStream = echoSocket.getInputStream();\n        InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n        return reader;\n    }\n    @Test\n    public void test1() throws Exception\n    {\n        System.out.println(\"\\nTesting fast CrNlStream\");\n        fastScannerSpeedTest(SocketConnectionFacadeImpl.CRNL_PATTERN);\n    }\n    @Test\n    public void test2() throws Exception\n    {\n        System.out.println(\"\\nTesting fast NlStream\");\n        fastScannerSpeedTest(SocketConnectionFacadeImpl.NL_PATTERN);\n    }\n    private void fastScannerSpeedTest(Pattern pattern) throws Exception\n    {\n        try\n        {\n            for (int i = 10; i-- > 0;)\n            {\n                InputStreamReader reader = getReader();\n                System.out.print(\"Fast \" + i + \":\\t\");\n                FastScanner scanner = FastScannerFactory.getReader(reader, pattern);\n                long start = System.currentTimeMillis();\n                try\n                {\n                    int ctr = 0;\n                    @SuppressWarnings(\"unused\")\n                    String t;\n                    while ((t = scanner.next()) != null)\n                    {\n                        ctr++;\n                    }\n                    System.out.print(ctr + \"\\t\");\n                }\n                catch (NoSuchElementException e)\n                {\n                }\n                System.out.println((System.currentTimeMillis() - start) + \" ms\");\n            }\n        }\n        catch (Exception e)\n        {\n            System.out.println(\n                    \"If you want to run FastScannerSpeedTestOnSocket, you'll need to run FastScannerTestSocketSource first\");\n        }\n    }\n}\n",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerTestSocketSource.java": "package org.asteriskjava.util.internal.streamreader;\nimport java.io.IOException;\nimport java.net.ServerSocket;\nimport java.net.Socket;\npublic class FastScannerTestSocketSource\n{\n    final static byte[] bytes = FastScannerRandomTest.generateTestData(100_000_000).getBytes();\n    public static int portNumber = 2048;\n    public static void main(String[] args) throws IOException\n    {\n        while (true)\n        {\n            listen();\n        }\n    }\n    static void listen() throws IOException\n    {\n        System.out.println(\"Waiting for connect on \" + portNumber);\n        try (ServerSocket serverSocket = new ServerSocket(portNumber); Socket clientSocket = serverSocket.accept();)\n        {\n            clientSocket.getOutputStream().write(bytes);\n        }\n    }\n}\n"
        },
        "ekstazi_failed_test_list": [],
        "ekstazi_select_time": 0,
        "ekstazi_test_list": [],
        "ekstazi_total_time": 0,
        "failed_test_list": [],
        "passed_test_list": [
            "AbstractAgiCommandTest",
            "CallerIdTest",
            "ResponseBuilderImplTest",
            "AbstractManagerEventListenerTest",
            "AstUtilTest",
            "CompositeMappingStrategyTest",
            "NewStateEventTest",
            "CdrEventTest",
            "FastScannerDeterministicTest",
            "ChannelReloadEventTest",
            "ResourceBundleMappingStrategyTest",
            "GetDataCommandTest",
            "ScriptEngineMappingStrategyTest",
            "ActionBuilderImplTest",
            "EventBuilderImplTest",
            "AgiReaderImplTest",
            "AsyncAgiEventTest",
            "DefaultAgiServerTest",
            "QueueMemberStateTest",
            "AsteriskChannelImplTest",
            "T38FaxStatusEventTest",
            "BridgeEnterEventComparatorTest",
            "RateLimiterTest",
            "FastScannerRandomTest",
            "ClassNameMappingStrategyTest",
            "HangupCauseTest",
            "AgiReplyImplTest",
            "AsteriskQueueMemberImplTest",
            "ConfigFileParserTest",
            "SkypeChatMessageEventTest",
            "CoreStatusResponseTest",
            "AgiChannelImplTest",
            "AsteriskAgentImplTest",
            "DateUtilTest",
            "RtcpReceivedEventTest",
            "SkypeBuddyStatusEventTest",
            "AgiRequestImplTest",
            "FastScannerSpeedTest",
            "AgiWriterImplTest",
            "SipShowPeerResponseTest",
            "ExecCommandTest",
            "ManagerReaderImplTest",
            "ListenerManagerTest",
            "ManagerConnectionImplTest",
            "ManagerWriterImplTest"
        ],
        "prev_commit": "6f17d94c",
        "queries": {
            "src/main/java/org/asteriskjava/util/internal/SocketConnectionFacadeImpl.java": "getReader reader reader getOutputStream outputStream getInputStream inputStream inputStream pattern pattern void MAX_SOCKET_READ_TIMEOUT_MILLIS MAX_SOCKET_READ_TIMEOUT_MILLIS FileTrace \"true\" equalsIgnoreCase \"false\" TRACE_PROPERTY getProperty System initialize initialize initialize new new new connect setSoTimeout setSoTimeout else createSocket createSocket getDefault getDefault if if lineDelimiter lineDelimiter lineDelimiter lineDelimiter encoding encoding encoding encoding encoding encoding UTF_8 UTF_8 UTF_8 this this this this this throws throws throws throws throws throws readTimeout readTimeout readTimeout readTimeout readTimeout readTimeout readTimeout readTimeout timeout timeout timeout timeout timeout timeout timeout timeout boolean boolean boolean boolean port port port port port port port port int int int int int int int int int int int int int host host host host host host host host String String String String trace trace Trace Trace writer scanner scanner socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket private private private private private private \"\\n\" NL_PATTERN NL_PATTERN \"\\r\\n\" compile compile CRNL_PATTERN CRNL_PATTERN CRNL_PATTERN final final final static static static implements SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl class public public public public public public public FastScannerFactory FastScannerFactory FastScanner FastScanner streamreader streamreader SocketConnectionFacade SocketConnectionFacade SSLSocketFactory SSLSocketFactory ssl ssl ssl ssl ssl ssl ssl ssl ssl SocketFactory SocketFactory javax javax Pattern Pattern Pattern Pattern Pattern Pattern Pattern Pattern regex NoSuchElementException StandardCharsets StandardCharsets StandardCharsets StandardCharsets Charset Charset Charset Charset charset charset nio nio Socket Socket Socket Socket Socket InetSocketAddress InetSocketAddress InetAddress net net net net net OutputStreamWriter OutputStream OutputStream InputStreamReader InputStreamReader InputStreamReader InputStream InputStream IOException IOException IOException IOException IOException IOException IOException BufferedWriter BufferedWriter io io io io io io java java java java java java java java java java java java java import import import import import import import import import import import import import import import import import import internal internal internal util util util util util util asteriskjava asteriskjava asteriskjava asteriskjava org org org org package ",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScanner.java": "throws next String extends FastScanner interface public public IOException IOException Closeable Closeable io io java java import import streamreader internal util asteriskjava org package ",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerCrNl.java": "endOfLine getLine String protected super reader reader Readable false seenReturn boolean boolean '\\r' crChar char private private FastScannerNl extends FastScannerCrNl FastScannerCrNl class public public streamreader internal util asteriskjava org package ",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerFactory.java": "FastScannerNl \"\\n\" FastScannerCrNl new new return return \"\\r\\n\" equals equals if if if pattern pattern pattern pattern pattern reader reader reader Readable getReader FastScanner false useLegacyScanner useLegacyScanner boolean volatile getLog logger final static static static private private FastScannerFactory FastScannerFactory class class public public LogFactory LogFactory Log Log Pattern Pattern regex Scanner NoSuchElementException IOException io java java java java import import import import import import streamreader internal util util util util util util asteriskjava asteriskjava asteriskjava org org org package ",
            "src/main/java/org/asteriskjava/util/internal/streamreader/FastScannerNl.java": "set this reader reader writer logfile true isFirst sync Object Object false closed boolean boolean start end allocate cbuf result StringBuilder StringBuilder '\\n' nlChar char protected protected protected protected protected protected new new new readableReference readableReference Readable Readable BUFFER_SIZE BUFFER_SIZE int int int getLog logger final final final static static private private private private private private FastScanner implements FastScannerNl FastScannerNl FastScannerNl class class public public LogFactory LogFactory Log Log AtomicReference AtomicReference AtomicReference atomic concurrent StandardOpenOption Files file file Charset charset CharBuffer CharBuffer CharBuffer nio nio nio nio IOException File File Closeable BufferedWriter BufferedWriter io io io io java java java java java java java java java import import import import import import import import import import import streamreader internal util util util util asteriskjava asteriskjava asteriskjava org org org package ",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerDeterministicTest.java": "UTF_8 reader new new inputStream inputStream getBytes buildTestData bytes bytes byte final pattern pattern testLines testLines int private CRNL_PATTERN testNlScanner NL_PATTERN testScanner testScanner testScanner Exception Exception Exception throws throws throws testCrNlScanner void void void @ @ FastScannerDeterministicTest class public public public Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern regex NoSuchElementException Files file StandardCharsets StandardCharsets charset nio nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream File ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java assertTrue Assert junit junit static import import import import import import import import import import import streamreader internal internal util util util util asteriskjava asteriskjava org org org org package ",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerRandomTest.java": "\"Expected null, not something else\" \"Mismatched output\" RuntimeException RuntimeException throw throw \"Error \" \"Got      \" toHexString toHexString \"Expected \" equals if if null null next next next while useDelimiter scanner scanner scanner fastResult fastResult fastResult fastResult \"\" \"\" \"\" scannerResult scannerResult scannerResult scannerResult getReader FastScannerFactory fast fast fast FastScanner reader2 reader2 inputStream2 inputStream2 UTF_8 UTF_8 reader1 reader1 getBytes getBytes getBytes getBytes inputStream1 inputStream1 boolean printStackTrace e e e catch catch \"MB\" incrementAndGet \" Completed \" println println println println println out out out out out System System System System System compare compare generateTestData testData testData testData testData testData try try i i i for tests tests int int int new new new new new new new new ctr ctr ctr ctr ctr InterruptedException caption caption String String String String String pattern pattern pattern pattern pattern final final \"CR NL\" CRNL_PATTERN compareOutputOfCrNlFastScannerToScanner \"NL\" NL_PATTERN setupTest setupTest setupTest Exception Exception Exception throws throws throws throws compareOutputOfNlFastScannerToScanner void void void @ @ FastScannerRandomTest class public public public ByteArrayUtil ByteArrayUtil ByteArrayUtil encoder core logback qos ch Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern Pattern regex AtomicInteger AtomicInteger AtomicInteger atomic concurrent Scanner Scanner Scanner Random NoSuchElementException NoSuchElementException StandardCharsets StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStream InputStream InputStream IOException IOException ByteArrayInputStream ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java java java fail fail Assert junit junit static import import import import import import import import import import import import import import streamreader internal internal util util util util util util util asteriskjava asteriskjava org org org org package ",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTest.java": "null next while t t String \"unused\" SuppressWarnings \"\\r\\n\" compile useDelimiter scanner scanner scanner try ctr currentTimeMillis start long UTF_8 reader reader new new new inputStream inputStream \":\\t\" \"Scanner \" print out System System i i i int int for getBytes generateTestData FastScannerRandomTest bytes bytes byte final Exception throws testScannerSpeed void @ @ FastScannerSpeedTest class public public Test Test junit SocketConnectionFacadeImpl Pattern Pattern regex Scanner Scanner Scanner NoSuchElementException StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream ByteArrayInputStream ByteArrayInputStream io io io java java java java java java java import import import import import import import import import streamreader internal internal util util util util util asteriskjava asteriskjava org org org package ",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerSpeedTestOnSocket.java": "null next while t t String \"unused\" SuppressWarnings \"\\r\\n\" compile useDelimiter new scanner scanner scanner ctr currentTimeMillis start long \":\\t\" \"Scanner \" print out System System getReader reader reader i i i int int for try try Exception throws testScannerSpeed void @ @ FastScannerSpeedTestOnSocket class public public Test Test junit SocketConnectionFacadeImpl Pattern Pattern regex Scanner Scanner Scanner NoSuchElementException StandardCharsets charset nio UnknownHostException Socket net net InputStreamReader InputStreamReader InputStream IOException io io io java java java java java java java java java import import import import import import import import import import import streamreader internal internal util util util util util asteriskjava asteriskjava org org org package ",
            "src/test/java/org/asteriskjava/util/internal/streamreader/FastScannerTestSocketSource.java": "write getOutputStream accept clientSocket clientSocket new serverSocket serverSocket try \"Waiting for connect on \" println out System listen listen true while throws throws args String main void void portNumber portNumber portNumber int getBytes generateTestData FastScannerRandomTest bytes bytes byte static static static static final FastScannerTestSocketSource class public public public Socket Socket ServerSocket ServerSocket ServerSocket net net IOException IOException IOException io java java java import import import streamreader internal util asteriskjava org package "
        },
        "starts_failed_test_list": [],
        "starts_select_time": 0,
        "starts_test_list": [],
        "starts_total_time": 0,
        "tests_cases_num": {
            "AbstractAgiCommandTest": 6,
            "AbstractManagerEventListenerTest": 2,
            "ActionBuilderImplTest": 16,
            "AgiChannelImplTest": 3,
            "AgiReaderImplTest": 5,
            "AgiReplyImplTest": 12,
            "AgiRequestImplTest": 24,
            "AgiWriterImplTest": 1,
            "AstUtilTest": 6,
            "AsteriskAgentImplTest": 1,
            "AsteriskChannelImplTest": 1,
            "AsteriskQueueMemberImplTest": 1,
            "AsyncAgiEventTest": 2,
            "BridgeEnterEventComparatorTest": 17,
            "CallerIdTest": 7,
            "CdrEventTest": 3,
            "ChannelReloadEventTest": 3,
            "ClassNameMappingStrategyTest": 2,
            "CompositeMappingStrategyTest": 2,
            "ConfigFileParserTest": 4,
            "CoreStatusResponseTest": 2,
            "DateUtilTest": 2,
            "DefaultAgiServerTest": 4,
            "EventBuilderImplTest": 35,
            "ExecCommandTest": 5,
            "FastScannerDeterministicTest": 3,
            "FastScannerRandomTest": 2,
            "FastScannerSpeedTest": 3,
            "GetDataCommandTest": 4,
            "HangupCauseTest": 1,
            "ListenerManagerTest": 1,
            "ManagerConnectionImplTest": 22,
            "ManagerReaderImplTest": 9,
            "ManagerWriterImplTest": 2,
            "NewStateEventTest": 2,
            "QueueMemberStateTest": 2,
            "RateLimiterTest": 1,
            "ResourceBundleMappingStrategyTest": 3,
            "ResponseBuilderImplTest": 9,
            "RtcpReceivedEventTest": 5,
            "ScriptEngineMappingStrategyTest": 3,
            "SipShowPeerResponseTest": 4,
            "SkypeBuddyStatusEventTest": 2,
            "SkypeChatMessageEventTest": 1,
            "T38FaxStatusEventTest": 2
        }
    },
    {
        "changed_files": [
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java",
            "src/test/java/org/asteriskjava/fastagi/SimpleAgiRequest.java"
        ],
        "changed_files_num": 2,
        "changed_java_files": [
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java",
            "src/test/java/org/asteriskjava/fastagi/SimpleAgiRequest.java"
        ],
        "changed_java_files_num": 2,
        "commit": "cbfaf57e",
        "data_objects": {
            "AbstractAgiCommandTest": "escapeAndQuote \"MY \" return Override this s s s s s String String String serialVersionUID long final AbstractAgiCommand extends \"MY \\\"first \\\\\\\\\\\\\\\" second \\\\\\\\\\\\\\\" third\\\"\" \"first \\\\\\\" second \\\\\\\" third\" testEscapedQuotesAJ192 \"MY \\\"Caller is:John Doe\\\"\" \"Caller is:\\nJohn Doe\" testEscapeAndQuoteWithStringContainingNewline \"MY \\\"\\\\\\\"John Doe\\\\\\\" is calling\\\"\" \"\\\"John Doe\\\" is calling\" testEscapeAndQuoteWithStringContainingQuotes \"\" testEscapeAndQuoteWithEmptyString \"MY \\\"\\\"\" \"MY \\\"\\\"\" null testEscapeAndQuoteWithNullString buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand \"MY \\\"just a string\\\"\" \"just a string\" new new new new new new testEscapeAndQuote void void void void void void @ @ @ @ @ @ @ myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand private private private AbstractAgiCommandTest class class public public public public public public public public public public Test Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static static import import command fastagi asteriskjava org org org package ",
            "AbstractManagerEventListenerTest": "shouldHandleJoinEvent void @ AbstractManagerEventListenerTest class public public Test Test LeaveEvent JoinEvent event event assertTrue Assert junit junit static import import import import manager manager manager asteriskjava asteriskjava asteriskjava org org org org org package ",
            "ActionBuilderImplTest": "\"This method must not be considered a getter relevant for building the action\" i int getIndexedProperty \"This method must not be considered a getter\" get privateProperty privateProperty getNonPublicProperty protected protected getSecondProperty getFirstProperty \"My\" return return return return return return getAction Override nonPublicProperty nonPublicProperty nonPublicProperty secondProperty secondProperty secondProperty secondProperty secondProperty Integer Integer Integer firstProperty firstProperty firstProperty firstProperty firstProperty serialVersionUID long final extends \"property-3: value3\\r\\n\" \"Incorrect mapping of property with annotated field\" testBuildActionWithAnnotatedField determineFieldName determineFieldName determineFieldName \"property1\" \"property1\" \"property1\" testDetermineFieldName \"property-2: value2\\r\\n\" \"Incorrect mapping of property with annotated setter\" testBuildActionWithAnnotatedSetter \"isProperty1\" \"isProperty1\" \"getProperty1\" \"getProperty1\" determineSetterName determineSetterName \"setProperty1\" \"setProperty1\" \"setProperty1\" testDetermineSetterName \"property-1: value1\\r\\n\" \"Incorrect mapping of property with annotated getter\" \"value3\" \"value3\" \"value3\" AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction testBuildActionWithAnnotatedGetter \"Incorrect mapping of variable property\" ASTERISK_1_6 \"var2\" \"peer\" testBuildActionForSipNotifyAction \"variable: var1=value1\\r\\nvariable: VAR2=value2\\r\\n\" setVariables \"value2\" \"value2\" \"value2\" \"value2\" \"value2\" \"VAR2\" \"value1\" \"value1\" \"value1\" \"value1\" \"value1\" \"var1\" \"var1\" map map map map map testBuildActionWithVariableMapForAsterisk12 \"variable: var1=value1\\r\\nvariable: var2=\\r\\nvariable: var3=value3\\r\\n\" testBuildActionWithVariablesForAsterisk12WithNullValues \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" ASTERISK_1_2 ASTERISK_1_2 ASTERISK_1_2 setTargetVersion setTargetVersion setTargetVersion setTargetVersion testBuildActionWithVariablesForAsterisk12 \"variable: var1=value1|var2=|var3=value3\\r\\n\" \"var1=value1|var2=|var3=value3\" \"var1=value1|var2=|var3=value3\" testBuildActionWithVariablesForAsterisk10WithNullValues \"variable: var1=value1|var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"var1=value1|var2=value2\" \"var1=value1|var2=value2\" setVariable setVariable setVariable setVariable setVariable setVariable originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction testBuildActionWithVariablesForAsterisk10 \"deprecation\" \"deprecation\" \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings SuppressWarnings SuppressWarnings \"mapmember: Key1=Value1|Key2=Value2|Key3=Value3\\r\\n\" \"Map member missing\" \"stringmember: stringMemberValue\\r\\n\" \"Regular member missing\" \"UserEvent: myuser\\r\\n\" \"Event name missing\" \"action: UserEvent\\r\\n\" setMapMember \"stringMemberValue\" setStringMember \"Value3\" \"Key3\" \"Value2\" \"Key2\" \"Value1\" \"Key1\" put put put put put mapMemberTest mapMemberTest mapMemberTest mapMemberTest mapMemberTest setUserEvent event event event event event MyUserEvent MyUserEvent testBuildUserEventAction \"Cat-000000: testcategory\" \"Action missing category testcategory - \" \"action: Action\" \"UpdateConfig actions must not have more than one 'action' header\" \"Action-0:\" \"Action must have zero-padded 6 digit numbering\" \"reload: Yes\" \"Correct reload setting missing\" \"dstfilename: destfile.conf\" \"Destination filename missing\" \"srcfilename: sourcefile.conf\" \"Source filename missing\" \"action: UpdateConfig\" null null null \"testcategory\" ACTION_NEWCAT addCommand true setReload \"destfile.conf\" setDstFilename \"sourcefile.conf\" setSrcFilename testBuildUpdateConfigAction \"actioncompleteeventclass:\" \"Action contains actionCompleteEventClass property\" \"action: Agents\\r\\n\" testBuildEventGeneratingAction testBuildActionWithNullValue length length \"Incorrect length\" \"Incorrect length\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" endsWith endsWith endsWith endsWith \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"secondproperty: 2\\r\\n\" \"Second property missing\" \"firstproperty: first value\\r\\n\" \"firstproperty: first value\\r\\n\" \"First property missing\" \"First property missing\" \"action: My\\r\\n\" \"action: My\\r\\n\" indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction \"private\" setNonPublicProperty setNonPublicProperty setSecondProperty setSecondProperty \"first value\" \"first value\" setFirstProperty setFirstProperty setFirstProperty actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String myAction myAction myAction myAction myAction myAction myAction myAction myAction myAction MyAction MyAction MyAction MyAction MyAction testBuildAction new new new new new new new new new new new new new new new new new new this this this this this setUp void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl private private private private private ActionBuilderImplTest class class public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before UserEventAction UserEventAction UserEventAction UpdateConfigAction UpdateConfigAction UpdateConfigAction UpdateConfigAction SipNotifyAction SipNotifyAction SipNotifyAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction AgentsAction AgentsAction AgentsAction AbstractManagerAction AbstractManagerAction action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion Map Map Map LinkedHashMap LinkedHashMap LinkedHashMap util util java java assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org package ",
            "AgiChannelImplTest": "getExtra name getAttribute getStatus return return return return getResult getResultCodeAsChar char getResultCode getLines UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException throw throw throw throw throw throw getFirstLine usage usage usage usage usage synopsis synopsis synopsis synopsis synopsis result result result result result String String String String String String String String String String String String String String status status status status status int int int int serialVersionUID long final implements getUsage getUsage \"Incorrect usage\" getSynopsis getSynopsis \"Incorrect sysnopsis\" \"Invalid command syntax: NOOP Synopsis\" \"must throw InvalidCommandSyntaxException\" \"NOOP Usage\" \"NOOP Usage\" setUsage setUsage \"NOOP Synopsis\" \"NOOP Synopsis\" setSynopsis setSynopsis SC_INVALID_COMMAND_SYNTAX testSendCommandWithInvalidCommandSyntaxResponse getMessage getMessage \"Invalid or unknown command: NOOP\" \"Incorrect message\" \"Incorrect message\" e e e e e e catch catch \"must throw InvalidOrUnknownCommandException\" try try SC_INVALID_OR_UNKNOWN_COMMAND testSendCommandWithInvalidOrUnknownCommandResponse andReturn andReturn andReturn readReply readReply readReply sendCommand sendCommand sendCommand sendCommand sendCommand sendCommand \"0\" \"0\" \"0\" setResult setResult setResult setResult SC_SUCCESS setStatus setStatus setStatus setStatus SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply Exception Exception Exception throws throws throws testSendCommand null AgiChannelImpl new new new new new new new new new new new new new this this this this this this this setUp void void void void void void void void @ @ @ @ agiChannel agiChannel agiChannel agiChannel agiChannel agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter private private private private private private private private AgiChannelImplTest class class class class public public public public public public public public public public public public public public public public public public public public Test Test Test Test Before Before AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand command command command command command command command command command command command command command InvalidOrUnknownCommandException InvalidOrUnknownCommandException InvalidCommandSyntaxException InvalidCommandSyntaxException AgiWriter AgiWriter AgiWriter AgiReader AgiReader AgiReader AgiChannel AgiChannel List List util java fail fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify verify replay replay replay replay replay replay replay expect expect expect expect createMock createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org package ",
            "AgiReaderImplTest": "e catch \"Must throw AgiHangupException\" try null testReadReplyWhenHungUp getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" testReadReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testReadReplyInvalidOrUnknownCommand getResultCode \"Incorrect result\" getStatus getStatus getStatus SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" readReply readReply readReply readReply \"200 result=49 endpos=2240\" testReadReply \"incorrect remote port\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect local port\" getAddress getAddress getAddress getAddress getAddress getAddress getAddress getAddress \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" getChannel \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" readRequest getRemotePort getRemotePort getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote getLocalPort getLocalPort getByAddress getByAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress byteValue byteValue byteValue byteValue byteValue byteValue byteValue byteValue valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf Integer Integer Integer Integer Integer Integer Integer Integer ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal byte byte byte byte \"\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine request request request request request request request request request request request request request request request Exception Exception Exception Exception Exception throws throws throws throws throws testReadRequest FastAgiReader new new new this this setUp void void void void void void @ @ @ @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket agiReader agiReader agiReader agiReader agiReader agiReader agiReader private private AgiReaderImplTest class class public public public public public public public Test Test Test Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply AgiRequest AgiRequest AgiReader AgiReader AgiHangupException AgiHangupException InetAddress InetAddress InetAddress net java fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org package ",
            "AgiReplyImplTest": "testBuildReplyInvalidCommandSyntaxWithOnlyUsage getUsage \"Deletes an entry in the Asterisk database for a given family and key. Returns 1 if succesful, 0 otherwise\" \"Incorrect usage\" getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" \"520-Invalid command syntax.  Proper usage follows:\" testBuildReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testBuildReplyInvalidOrUnknownCommand \"200 result=1 ((hello)(world)) endpos=2240\" testBuildReplyWithAdditionalAttributeAndParenthesis \"(hello)(world)\" \"(hello)(world)\" \"Incorrect parenthesis\" \"Incorrect parenthesis\" \"200 result=1 ((hello)(world))\" testBuildReplyWithParenthesis println out System testBla \"hi \\\"joe!\\\"\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"hi \\\\\\\"joe!\\\\\\\"\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute2 \"text0\" \"text0\" \"123456789\" \"Incorrect text0 attribute\" \"Incorrect text0 attribute\" getExtra getExtra getExtra getExtra \"speech\" \"speech\" \"Incorrect extra\" \"Incorrect extra\" \"0\" \"0\" \"1\" \"1\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"123456789\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute \"startpos\" \"1234\" \"Incorrect startpos attribute\" \"200 result=49 startpos=1234 endpos=2240\" testBuildReplyWithMultipleAdditionalAttribute \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"2240\" \"2240\" \"2240\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"200 result=49 endpos=2240\" testBuildReplyWithAdditionalAttribute \"result\" \"result\" \"result\" \"result\" \"result\" getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute \"49\" \"49\" \"49\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" getResultCodeAsChar getResultCodeAsChar getResultCodeAsChar '1' '1' '1' \"Incorrect result as character\" \"Incorrect result as character\" \"Incorrect result as character\" getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"200 result=49\" add add add add add add add add add add add add add add add add add add add add reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl testBuildReply new new new new new new new new new new new this setUp void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String private AgiReplyImplTest class public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Before Before List List ArrayList ArrayList util util java java assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import import import internal fastagi asteriskjava org org org org org package ",
            "AgiRequestImplTest": "getCallerIdNumber \"incorrect callerIdNumber\" \"agi_callerid: 1234\" testBuildRequestWithoutCallerIdName \"12345\" \"incorrect accountCode\" \"agi_accountcode: 12345\" testBuildRequestWithAccountCode getAsteriskVersion ASTERISK_13 \"incorret Asterisk Version Number\" getAccountCode getAccountCode \"incorrect accountCode must not be set\" getEnhanced FALSE Boolean \"incorrect enhanced\" getPriority Integer \"incorrect priority\" getExtension \"incorrect extension\" getContext \"local\" \"incorrect context\" getRdnis \"9876\" \"incorrect rdnis\" getDnid \"8870\" \"8870\" \"incorrect dnid\" getCallerIdName \"John Doe\" \"incorrect callerIdName\" getCallerId getCallerId \"1234\" \"1234\" \"1234\" \"incorrect callerId\" \"incorrect callerId\" getLanguage \"en\" \"incorrect language\" getUniqueId \"1110023416.6\" getType \"SIP\" \"incorrect type\" \"incorrect uniqueId\" \"incorrect uniqueId\" getChannel getChannel \"SIP/1234-d715\" \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" AgiRequestImpl AgiRequestImpl AgiRequestImpl \"agi_version: 13.1.0~dfsg-1.1ubuntu4.1\" \"agi_accountcode: \" \"agi_enhanced: 0.0\" \"agi_priority: 1\" \"agi_extension: 8870\" \"agi_context: local\" \"agi_rdnis: 9876\" \"agi_dnid: 8870\" \"agi_callerid: John Doe<1234>\" \"agi_uniqueid: 1110023416.6\" \"agi_type: SIP\" \"agi_language: en\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" \"agi_network: yes\" add add add add add add add add add add add add add add add add add add add add new new new new new new new request request request request request request request request request request request request request request request request request request request request request request request request request request lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String String String String String testBuildRequest void void void \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings @ @ @ @ @ AgiRequestImplTest class public public public public Test Test Test Test AgiRequest AgiRequest AgiRequest AgiRequest AsteriskVersion AsteriskVersion List List List List ArrayList ArrayList ArrayList ArrayList util util java java fail assertNull assertNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import import internal fastagi fastagi asteriskjava asteriskjava asteriskjava org org org org org org org org package ",
            "AgiWriterImplTest": "sendCommand flush \"STREAM FILE \\\"welcome\\\" \\\"\\\"\\n\" write \"welcome\" Exception throws testSendCommand FastAgiWriter new new this this setUp void void @ @ socket socket socket socket socket socket socket agiWriter agiWriter agiWriter private private AgiWriterImplTest class class public public public Test Test Before Before junit junit SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StreamFileCommand StreamFileCommand StreamFileCommand command command command command AgiWriter AgiWriter verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static import import import import import import import import internal fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org package ",
            "AstUtilTest": "\"1\" isEqual isEqual isEqual isEqual isEqual testIsEqual \"-none-\" \"\\\"-none-\\\" must be considered null\" testIsNullForIpAddressInPeerEntryEvent \"<unknown>\" \"<unknown> must be null\" \"unknown\" \"unknown must be null\" isNull isNull isNull isNull \"null must be null\" testIsNull \"3496853210\" \"3496853210\" \"\\\"3496853210\\\" <3496853210>\" s s s String testAJ120 \"Hans Wurst <  > \" \"Hans Wurst <>\" \"\\\"Hans Wurst\\\"\" \"Hans Wurst <  1234 >   \" \"1234\" \"1234\" \"1234\" testParseCallerIdNumber \" \" \" \" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \" 1234> \" \"1234>\" \" <1234 \" \"<1234\" \" <1234> \" \"<1234>\" \" Hans Wurst \" \"\\\"Hans <Wurst>\\\" <1234>\" \"Hans <Wurst>\" \" Hans Wurst  <1234>  \" \"Hans Wurst <1234>\" \"  \\\"  Hans Wurst  \\\"   <1234>  \" \"  \\\"Hans Wurst  \\\"   <1234>  \" \"\\\" Hans Wurst \\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\"<1234>\" \"\\\"Hans Wurst\\\"<1234>\" parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" testParseCallerIdName null null null null null null null null null null null null null null null null null null null null \"null must be false\" \"false\" \"false must be false\" \"true\" \"true must be true\" \"Enabled\" \"Enabled must be true\" \"ON\" \"ON must be true\" \"on\" isTrue isTrue isTrue isTrue isTrue isTrue AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil \"on must be true\" testIsTrue void void void void void void void @ @ @ @ @ @ @ AstUtilTest class public public public public public public public public Test Test Test Test Test Test Test Test assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit static static static import import import import util asteriskjava org org org org org package ",
            "AsteriskAgentImplTest": "\"wrong number of propagated changes\" updateState getSource \"wrong queue\" getNewValue AGENT_RINGING AGENT_RINGING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener getState testUpdateStatus AGENT_IDLE AGENT_IDLE AGENT_IDLE \"Agent/999\" \"Testagent\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int agent agent agent agent agent agent AsteriskAgentImpl AsteriskAgentImpl private private AsteriskAgentImplTest class public public public public Test Test Before Before AgentState AgentState AgentState AgentState AgentState AgentState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsteriskChannelImplTest": "\"wrong number of propagated changes\" getSource \"wrong source\" getNewValue DIALING DIALING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener testStateChange DOWN DOWN stateChanged stateChanged getDate getDate getDate \"0123456789.123\" \"SIP/1234\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int channel channel channel channel channel channel AsteriskChannelImpl AsteriskChannelImpl private private AsteriskChannelImplTest class public public public public Test Test Before Before DateUtil DateUtil DateUtil DateUtil util ChannelState ChannelState ChannelState ChannelState ChannelState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import internal live live asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "AsteriskQueueMemberImplTest": "server AsteriskServerImpl numberOfChanges int queueMember AsteriskQueueMemberImpl private private private AsteriskQueueMemberImplTest class public Test Before QueueMemberState PropertyChangeListener PropertyChangeEvent beans beans java java assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsteriskVersionTest": "ASTERISK_15 \"Asterisk 15.1.0\" test15 ASTERISK_14 \"Asterisk 14.1.0\" test14 ASTERISK_13 equals equals equals \"Asterisk 13.1.0~dfsg-1.1ubuntu4.1\" test13 \"\" getDetermineVersionFromString getDetermineVersionFromString getDetermineVersionFromString getDetermineVersionFromString AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion testNullIfNoMatch void void void void @ @ @ @ AsteriskVersionTest class public public public public public Test Test Test Test Test assertTrue assertTrue assertTrue assertTrue assertNull assertNull Assert Assert junit junit junit static static import import import asteriskjava org org org org package ",
            "AsyncAgiEventTest": "\"agi_request: async: bla\" \"agi_request%3a%20async%3a%20bla\\n\" testDecodeEnvWithMoreThanTwoDelimiters \"agi_threadid: -1231783024\" get get get \"agi_calleridname: Stefan Reuter\" decodeEnv decodeEnv \"agi_threadid%3a%20-1231783024\\n\" \"agi_accountcode%3a%20\\n\" \"agi_enhanced%3a%200.0\\n\" \"agi_priority%3a%201\\n\" \"agi_extension%3a%203115\\n\" \"agi_context%3a%20from-local\\n\" \"agi_rdnis%3a%20unknown\\n\" \"agi_dnid%3a%203115\\n\" \"agi_callingtns%3a%200\\n\" \"agi_callington%3a%200\\n\" \"agi_callingani2%3a%200\\n\" \"agi_callingpres%3a%200\\n\" \"agi_calleridname%3a%20Stefan%20Reuter\\n\" \"agi_callerid%3a%201312\\n\" \"agi_version%3a%20SVN-branch-1.6.0-r110832\\n\" \"agi_uniqueid%3a%201207271023.41\\n\" \"agi_type%3a%20SIP\\n\" \"agi_language%3a%20en\\n\" \"agi_channel%3a%20SIP%2f1312-b70020a8\\n\" \"agi_request%3a%20async\\n\" setEnv setEnv env env env env env env env String String this this new new AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent testDecodeEnv void void @ @ AsyncAgiEventTest class public public public Test Test Test List List List util java assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import import event event event event event event event manager asteriskjava org org org package ",
            "BridgeEnterEventComparatorTest": "withoutPrefix_shouldId2BeGreater void @ new bridgeEnterEventComparator BridgeEnterEventComparator BridgeEnterEventComparator private BridgeEnterEventComparatorTest class public public Test Test Assert junit junit BridgeEnterEvent event import import import bridge backwardsCompatibility internal manager manager asteriskjava asteriskjava org org org org package ",
            "CallerIdTest": "\"\\\"Hans Wurst\\\" <>\" testValueOfWithNullLiteralInNumber \"<1234>\" \"\\\"<Unknown>\\\" <1234>\" \"\\\"\\\" <1234>\" testValueOfWithNullLiteralInName toString toString \"Hans Wurst <1234>\" \"\\\"Hans Wurst\\\" <1234>\" valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId testValueOf null null null null null null null null null null \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" new new new new new new new new new new new callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId testEquals void void void void @ @ @ @ CallerIdTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "CdrEventTest": "toString \"Mon May 29 13:17:21 CEST 2006\" \"2006-05-29 13:17:21\" \"Europe/Monaco\" testBug \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone getTime getTime getStartTimeAsDate getStartTimeAsDate getStartTimeAsDate testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone getTimeZone setDefault setDefault setDefault getDefault \"2006-05-19 11:54:48\" setStartTime setStartTime this new setUp void void void void void @ @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent CdrEvent CdrEvent CdrEventTest class public public public public public public Test Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import event manager asteriskjava org org org org org package ",
            "ChannelReloadEventTest": "\"Channel module reload by CLI command\" testGetReloadReasonDescription REASON_CLI_RELOAD \"CLIRELOAD\" \"CLIRELOAD (Channel module reload by CLI command)\" \"CLIRELOAD (Channel module reload by CLI command)\" testGetReloadReasonCode getReloadReasonDescription getReloadReasonDescription getReloadReasonCode getReloadReasonCode getReloadReasonCode null setReloadReason setReloadReason setReloadReason testNullReloadReason new this this setUp void void void void @ @ @ @ ChannelReloadEvent ChannelReloadEvent ChannelReloadEvent private ChannelReloadEventTest class public public public public public Test Test Test Test Before Before assertNull assertNull assertNull assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import event event event event event event event event event event event manager asteriskjava org org org org org package ",
            "ClassNameMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" determineScript determineScript determineScript determineScript \"org.asteriskjava.fastagi.HelloAgiScript\" \"org.asteriskjava.fastagi.HelloAgiScript\" return return getScript getScript String String Override Override SimpleAgiRequest SimpleAgiRequest request request request request request request request request AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript new new new this setUp void void void @ @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ClassNameMappingStrategy ClassNameMappingStrategy private ClassNameMappingStrategyTest class class class public public public public public public Test Test Test Before Before assertTrue assertTrue assertTrue assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "CompositeMappingStrategyTest": "\"org.asteriskjava.fastagi.HelloAgiScript\" testAJ37ClassName HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" \"no script determined\" null null determineScript determineScript script script script script script script AgiScript AgiScript SimpleAgiRequest SimpleAgiRequest request request request request AgiRequest AgiRequest testAJ37ResourceBundle ClassNameMappingStrategy \"test-mapping\" ResourceBundleMappingStrategy new new new new new setUp void void void @ @ @ strategy strategy strategy strategy CompositeMappingStrategy CompositeMappingStrategy private CompositeMappingStrategyTest class class class public public public public Test Test Test Before Before assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "ConfigFileParserTest": "format println out System getCategories for \"/etc/asterisk/sip2.conf\" readFile XtestReadConfig \"No '=' (equal sign) in line 20 of extensions.conf\" MissingEqualSignException \"Expected exception when parsing a line without a '='\" \"\" \"foo=\" \"s-NOANSWER,1,Hangup\" \"Incorrect value\" \"Incorrect value\" \"exten\" \"Incorrect name\" \"Incorrect name\" \"exten => s-NOANSWER,1,Hangup\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" parseVariable parseVariable parseVariable variable variable variable variable variable variable variable variable variable testParseVariable \"Directive '#include' needs an argument (filename) at line 805 of /etc/asterisk/sip.conf\" MissingDirectiveParameterException \"Expected exception when parsing a line with a directive but no parameter\" \"#include   \" \"/etc/asterisk/sip.conf\" \"Unknown directive 'foo' at line 20 of abc.conf\" UnknownDirectiveException \"Expected exception when parsing a line with an unknown directive\" \"#foo\" getExecFile \"/usr/local/test.sh\" \"Incorrect exec file\" ExecDirective ExecDirective \"#exec   </usr/local/test.sh>   \" getIncludeFile \"/etc/asterisk/inc.conf\" \"Incorrect include file\" IncludeDirective IncludeDirective \"Incorrect type of configDirective\" \"Incorrect type of configDirective\" \"#include \\\"/etc/asterisk/inc.conf\\\"\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" parseDirective parseDirective parseDirective parseDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective ConfigDirective testParseDirective \"parse error: no closing ')', line 1 of test.conf\" \"Expected exception when closing ')' is missing\" \"[foo](bar\" \"parse error: no closing ']', line 1 of test.conf\" \"Expected exception when closing ']' is missing\" \"[foo\" getMessage getMessage getMessage getMessage getMessage getMessage \"Inheritance requested, but category 'a' does not exist, line 1 of test.conf\" e e e e e e e e e e e e e e ConfigParseException ConfigParseException ConfigParseException ConfigParseException ConfigParseException catch catch catch catch catch catch \"Expected exception when requesting inheritance from a non-existing catagory\" \"[foo](a)\" try try try try try try \"[foo](+)\" isTemplate \"Category not flagged as template\" \"[foo](!)\" getFileName getFileName getFileName getFileName getFileName \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" getLineNumber getLineNumber getLineNumber getLineNumber getLineNumber \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"foo\" \"foo\" \"foo\" \"foo\" \"foo\" \"Incorrect category name\" \"Incorrect category name\" \"Incorrect category name\" \"[foo]\" parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader category category category category category category category category category category category category testParseCategoryHeader getComment \"a line comment\" \"Incorrect comment\" getValue getValue getValue \"b\" \"Incorrect variable value\" getName getName getName getName getName getName \"a\" \"Incorrect variable name\" configVariable configVariable configVariable getClass getClass getClass ConfigVariable ConfigVariable ConfigVariable ConfigVariable \"Incorrect type of configElement\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" processLine configElement configElement configElement configElement ConfigElement \"cat\" Category Category Category appendCategory flip put length allocate buffer buffer buffer buffer \" a ;-- comment --; = b ; a line comment\" s s s String Exception Exception throws throws throws throws testProcessLine new new setUp void void void void void void @ @ @ @ @ configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader ConfigFileReader ConfigFileReader ConfigFileParserTest class class class class public public public public public public public Test Test Test Test Test Before Before CharBuffer CharBuffer CharBuffer nio java fail fail fail fail fail fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static import import import import import import config asteriskjava org org org org org org package ",
            "CoreStatusResponseTest": "null testGetCoreStartupTimeAsDateIfDateIsNull toString getCoreStartupDateTimeAsDate \"Wed May 27 02:49:15 CEST 2009\" \"02:49:15\" setCoreStartupTime \"2009-05-27\" setCoreStartupDate setCoreStartupDate \"TimeZone not found\" \"TimeZone not found\" testGetCoreStartupTimeAsDate tearDown setDefault setDefault getDefault new this setUp void void void void @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone CoreStatusResponse CoreStatusResponse \"Europe/Berlin\" getTimeZone tz tz tz tz tz private private private CoreStatusResponseTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit static static static import import import import import import import response response response response response response response manager asteriskjava org org org org org org org package ",
            "DateUtilTest": "\"Fri May 19 09:54:48 GMT 2006\" \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone toString toString \"Fri May 19 11:54:48 GMT 2006\" getTime getTime parseDateTime parseDateTime DateUtil DateUtil result result result result result result testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone setDefault setDefault getDefault setUp void void void void @ @ @ @ \"2006-05-19 11:54:48\" dateString dateString dateString String final final final final defaultTimeZone defaultTimeZone defaultTimeZone DateUtilTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone Date Date Date java java assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import import util util util asteriskjava org org org org org package ",
            "DefaultAgiServerTest": "e catch startup try close flush \"VERBOSE \\\"No script configured for null\\\" 1\\n\" write getRemotePort getRemoteAddress getLocalPort getLocalAddress null null null null andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine XtestStartup testDummy shutdown Exception Exception throws throws tearDown MockedDefaultAgiServer new new setUp void void void void @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket serverSocket serverSocket MockedServerSocketFacade MockedServerSocketFacade server server server server DefaultAgiServer private private private DefaultAgiServerTest class class public public public public public Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade ServerSocketFacade util util IOException IOException io java assertEquals Assert junit junit junit junit verify replay replay expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static import import import import import import import import import import import fastagi asteriskjava asteriskjava asteriskjava org org org org org org org org org org org package ",
            "EventBuilderImplTest": "\"1\" testBuildEventWithOnePeerEntryEventList \"Invalid size of peers property\" \"Invalid size of peers property\" \"UNKNOWN literal returns NULL status\" getStatus getStatus getStatus getStatus \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" getObjectName getObjectName getObjectName getObjectName getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"ActionId is invalid\" \"ActionId is invalid\" \"3\" \"listitems\" \"listitems\" \"LAGGED\" \"LAGGED\" \"UNKNOWN\" \"OK\" \"OK\" \"OK\" \"OK\" \"status\" \"status\" \"a103\" \"a103\" \"a102\" \"a102\" \"a101\" \"a101\" \"a101\" \"a101\" \"objectname\" \"objectname\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"PeerlistComplete\" \"PeerlistComplete\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" testBuildEventWithPeerEntryEventList getT38SessionDuration \"Property 'T38 Session Duration' is not set correctly\" \"120\" \"120\" \"t38 session duration\" \"T38FaxStatus\" testBuildEventWithSpace testBuildEventWithMapPropertyAndOnlyOneEntry size size size size \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" get get get get get get get get get get get getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"var2=val2\" \"var1=val1\" \"var1=val1\" asList asList asList asList asList asList \"variable\" \"variable\" \"AgentCalled\" \"AgentCalled\" testBuildEventWithMapProperty getReceivedPackets \"Property receivedPacket is not set correctly\" testBuildEventForRtpReceiverStatEventAJ139 getSsrc long long \"Property SSRC is not set correctly\" \"0\" \"0\" \"receivedpackets\" \"receivedpackets\" \"3776236237\" \"ssrc\" \"RtpReceiverStat\" \"RtpReceiverStat\" testBuildEventForRtpReceiverStatEventAJ162 getSipCallId \"Property SIP-Callid is not set correctly\" \"12345\" \"12345\" \"sip-callid\" \"Transfer\" testBuildEventWithDashInPropertyName \"Property with value \\\"<none>\\\" is not null\" \"<none>\" testBuildEventWithNullLiteral getTransit \"Transit property not set correctly\" \"12.3456\" \"transit\" \"RTPReceiverStat\" testBuildEventWithDouble getDuration Long \"Duration property not set correctly\" \"569108\" \"duration\" \"MeetmeLeave\" testBuildEventWithLong getTimestamp \"Timestamp property not set correctly\" \"1159310429.569108\" \"timestamp\" \"NewChannel\" testBuildEventWithTimestamp getReasonTxt \"a reason\" \"ReasonTxt property not set correctly\" getReason \"Reason property not set correctly\" \"123 - a reason\" \"reason\" \"LogChannel\" testBuildEventWithReason \"CidCallingPres property not set correctly (must be null)\" \"abc\" testBuildEventWithInvalidCidCallingPres \"123\" \"123\" \"123\" testBuildEventWithCidCallingPresAndMissingTxt \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"123 ()\" testBuildEventWithCidCallingPresAndEmptyTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt \"nice description\" \"CidCallingPresTxt property not set correctly\" getCidCallingPres getCidCallingPres getCidCallingPres getCidCallingPres valueOf valueOf valueOf valueOf \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"123 (nice description)\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" testBuildEventWithCidCallingPres getCauseTxt \"CauseTxt property not set correctly\" \"some text\" \"some text\" \"cause-txt\" \"Hangup\" testBuildEventWithSpecialCharacterProperty getClassName \"ClassName property not set correctly\" \"default\" \"default\" \"class\" \"MusicOnHold\" testBuildEventWithClassProperty getSrc \"Src property not set correctly\" \"source value\" \"source value\" \"source\" \"Cdr\" \"Cdr\" testBuildEventWithSourceProperty getActionId getActionId getActionId \"origId\" \"ActionId not set correctly\" \"1234#origId\" \"actionid\" \"actionid\" \"actionid\" \"StatusComplete\" testBuildEventWithResponseEvent testBuildEventWithEmptyAttributes \"Nonexisting\" testBuildEventWithUnregisteredEvent FALSE \"NO\" testBuildEventWithBooleanPropertyOfValueNo \"yes\" testBuildEventWithBooleanPropertyOfValueYes getRestart getRestart getRestart TRUE TRUE Boolean Boolean Boolean \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"True\" \"restart\" \"restart\" \"restart\" \"shutdown\" \"shutdown\" \"shutdown\" testBuildEventWithBooleanProperty getPriority \"Integer property not set correctly\" getChannel getChannel toString \"priority\" \"channel\" \"channel\" \"newexten\" priority priority priority Integer Integer Integer Integer Integer \"SIP/1234\" channel channel channel testBuildEventWithIntegerProperty getSource \"Source not set correctly\" getCallerIdNum \"String property not set correctly\" \"String property not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"callerid\" \"Newchannel\" \"1234\" callerid callerid callerid testBuildEventWithMixedCaseSetter ex IllegalArgumentException catch \"registerEvent() must not accept abstract classes\" try testRegisterEventWithAbstractEvent \"UserEventD\" UserEventDEvent UserEventDEvent testRegisterUserEventWithUserEventDEvent \"C\" \"userevent\" \"UserEvent\" testRegisterUserEventWithUserEventCAndAsterisk14 \"UserEventC\" UserEventC UserEventC UserEventC UserEventC testRegisterUserEventWithUserEventC \"UserEventB\" BEvent BEvent testRegisterUserEventWithBEvent instanceof instanceof instanceof instanceof instanceof \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent \"UserEventA\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put A A testRegisterUserEventWithA registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass testRegisterEvent EventBuilderImpl new new new this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this setUp void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties Object Object String String String String eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder EventBuilder private private EventBuilderImplTest class class class class class class class class class class class class class class class class class class class class class class class class class class public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before TransferEvent TransferEvent TransferEvent TransferEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent StatusCompleteEvent StatusCompleteEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent ResponseEvent ResponseEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent NewExtenEvent NewExtenEvent NewExtenEvent NewExtenEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent MusicOnHoldEvent MusicOnHoldEvent MeetMeLeaveEvent MeetMeLeaveEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent LogChannelEvent LogChannelEvent LogChannelEvent HangupEvent HangupEvent CdrEvent CdrEvent CdrEvent CdrEvent CdrEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AbstractChannelEvent AbstractChannelEvent event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event Map Map HashMap HashMap Arrays Arrays Arrays Arrays Arrays Arrays Arrays util util util java java java fail fail assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert Assert junit junit junit junit junit junit junit static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ExecCommandTest": "\"30\" testWithMultipleOptionsMultipleParameters \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"SIP/1234,30\" testWithMultipleOptionsSingleParameterCommaSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234|30\\\"\" \"SIP/1234|30\" testWithMultipleOptionsSingleParameterPipeSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234\\\"\" \"SIP/1234\" \"SIP/1234\" testWithSingleOption buildCommand buildCommand buildCommand buildCommand buildCommand \"EXEC \\\"DIAL\\\" \\\"\\\"\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" new new new new new testDefault void void void void void @ @ @ @ @ execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand private ExecCommandTest class public public public public public public Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "FastScannerDeterministicTest": "UTF_8 reader new new inputStream inputStream getBytes buildTestData bytes bytes byte final pattern pattern testLines testLines int private CRNL_PATTERN testNlScanner NL_PATTERN testScanner testScanner testScanner Exception Exception Exception throws throws throws testCrNlScanner void void void @ @ FastScannerDeterministicTest class public public public Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern regex NoSuchElementException Files file StandardCharsets StandardCharsets charset nio nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream File ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java assertTrue Assert junit junit static import import import import import import import import import import import streamreader internal internal util util util util asteriskjava asteriskjava org org org org package ",
            "FastScannerRandomTest": "\"Expected null, not something else\" \"Mismatched output\" RuntimeException RuntimeException throw throw \"Error \" \"Got      \" toHexString toHexString \"Expected \" equals if if null null next next next while useDelimiter scanner scanner scanner fastResult fastResult fastResult fastResult \"\" \"\" \"\" scannerResult scannerResult scannerResult scannerResult getReader FastScannerFactory fast fast fast FastScanner reader2 reader2 inputStream2 inputStream2 UTF_8 UTF_8 reader1 reader1 getBytes getBytes getBytes getBytes inputStream1 inputStream1 boolean printStackTrace e e e catch catch \"MB\" incrementAndGet \" Completed \" println println println println println out out out out out System System System System System compare compare generateTestData testData testData testData testData testData try try i i i for tests tests int int int new new new new new new new new ctr ctr ctr ctr ctr InterruptedException caption caption String String String String String pattern pattern pattern pattern pattern final final \"CR NL\" CRNL_PATTERN compareOutputOfCrNlFastScannerToScanner \"NL\" NL_PATTERN setupTest setupTest setupTest Exception Exception Exception throws throws throws throws compareOutputOfNlFastScannerToScanner void void void @ @ FastScannerRandomTest class public public public ByteArrayUtil ByteArrayUtil ByteArrayUtil encoder core logback qos ch Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern Pattern regex AtomicInteger AtomicInteger AtomicInteger atomic concurrent Scanner Scanner Scanner Random NoSuchElementException NoSuchElementException StandardCharsets StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStream InputStream InputStream IOException IOException ByteArrayInputStream ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java java java fail fail Assert junit junit static import import import import import import import import import import import import import import streamreader internal internal util util util util util util util asteriskjava asteriskjava org org org org package ",
            "FastScannerSpeedTest": "null next while t t String \"unused\" SuppressWarnings \"\\r\\n\" compile useDelimiter scanner scanner scanner try ctr currentTimeMillis start long UTF_8 reader reader new new new inputStream inputStream \":\\t\" \"Scanner \" print out System System i i i int int for getBytes generateTestData FastScannerRandomTest bytes bytes byte final Exception throws testScannerSpeed void @ @ FastScannerSpeedTest class public public Test Test junit SocketConnectionFacadeImpl Pattern Pattern regex Scanner Scanner Scanner NoSuchElementException StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream ByteArrayInputStream ByteArrayInputStream io io io java java java java java java java import import import import import import import import import streamreader internal internal util util util util util asteriskjava asteriskjava org org org package ",
            "GetDataCommandTest": "\"GET DATA \\\"VAR1\\\" 10000 20\" testSetTimeoutAndMaxDigits \"GET DATA \\\"VAR1\\\" 0 10\" setMaxDigits setMaxDigits testSetMaxDigits \"GET DATA \\\"VAR1\\\" 10000\" getMaxDigits getMaxDigits getMaxDigits getTimeout getTimeout getTimeout setTimeout setTimeout testSetTimeout buildCommand buildCommand buildCommand buildCommand \"GET DATA \\\"VAR1\\\"\" \"VAR1\" \"VAR1\" \"VAR1\" \"VAR1\" new new new new testDefault void void void void @ @ @ @ getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand private GetDataCommandTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "HangupCauseTest": "getByCode AST_CAUSE_NO_USER_RESPONSE HangupCause HangupCause \"Valid enum for cause code 18\" testGetByCode void @ HangupCauseTest class public public Test Test assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "ListenerManagerTest": "\"test\" getName String NORMAL getPriority true event onManagerEvent requiredEvents extends extends Class Class Override Override Override Override return return return return private size removeListener shuffle addListener add add getListener getListener listener listener listener listener listener i i i int for for queue queue queue queue ListenerManager ListenerManager new new new new listeners listeners listeners listeners FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener InterruptedException throws listenerTest void void @ @ @ @ @ false managereventRecevied managereventRecevied boolean volatile ListenerManagerTest class class public public public public public public Test Test VarSetEvent VarSetEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent events events events events events wrap wrap asterisk asterisk ListenerPriority ListenerPriority ListenerPriority Set Set Set List List LinkedList LinkedList HashSet HashSet Collections Collections util util util util util java java java java java assertTrue assertTrue assertTrue Assert junit junit static import import import import import import import import import import core internal pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "ManagerConnectionImplTest": "\"username\" setExpectedUsername new setUp void @ mc MockedManagerConnectionImpl mockReader ManagerReaderMock mockWriter mockWriter mockWriter ManagerWriterMock ManagerWriterMock mockSocket protected protected protected protected ManagerConnectionImplTest class public public Test Before Before SocketConnectionFacade SocketConnectionFacade ManagerResponse response NewChannelEvent ManagerEvent DisconnectEvent ConnectEvent event event event event StatusAction PingAction CoreSettingsAction CommandAction action action action action TimeoutException ManagerEventListener ManagerConnectionState AuthenticationFailedException AsteriskVersion List ArrayList util util util IOException io java java java fail assertTrue assertFalse assertEquals Assert Assert Assert Assert junit junit junit junit junit junit verify replay expect createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerReaderImplTest": "getHighestSequence Long \"Invalid highest sequence on RtcpReceivedEvent\" getFromPort Integer \"Invalid from port on RtcpReceivedEvent\" getHostAddress getFromAddress \"192.168.0.1\" \"Invalid from address on RtcpReceivedEvent\" rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent \"first event must be a RtcpReceivedEvent\" \"HighestSequence: 999\" \"From 192.168.0.1:1234\" \"Event: RTCPReceived\" testWorkaroundForAsteriskBug13319 testRunReceivingEventWithMapPropertyAndOnlyOneEntry \"second event must be an DisconnectEvent\" \"second event must be an DisconnectEvent\" \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"first event must be a AgentCalledEvent\" \"first event must be a AgentCalledEvent\" \"Variable: var2=val2\" \"Variable: var1=val1\" \"Variable: var1=val1\" \"Event: AgentCalled\" \"Event: AgentCalled\" testRunReceivingEventWithMapProperty \"first event must be a StatusCompleteEvent\" \"\" \"\" \"\" \"\" \"Event: StatusComplete\" testRunReceivingEvent \"DisconnectEvent contains incorrect dateReceived\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" getDateReceived getDateReceived \"ProtocolIdentifierReceivedEvent contains incorrect dateReceived\" getProtocolIdentifier \"ProtocolIdentifierReceivedEvent contains incorrect protocol identifier\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass get get get get get get get get get get get get get get get get get get get \"first event must be a ProtocolIdentifierReceivedEvent\" size size size size size size size dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" setSocket setSocket setSocket setSocket setSocket \"Asterisk Call Manager/1.0\" \"Asterisk Call Manager/1.0\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine Exception Exception Exception Exception Exception throws throws throws throws throws testRunReceivingProtocolIdentifier instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" run run run run run run try testRunWithoutSocket \"cast\" SuppressWarnings null null null null null null tearDown this ManagerReaderImpl overrideCurrentDate overrideCurrentDate new new new new new setUp void void void void void void void void @ @ @ @ @ @ @ @ @ managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader ManagerReader socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher MockedDispatcher MockedDispatcher now now now now now private private private private ManagerReaderImplTest class class class class class class class class class class class class class class public public public public public public public public public Test Test Test Test Test Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade DateUtil DateUtil DateUtil ManagerResponse CommandResponse response response StatusCompleteEvent StatusCompleteEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ManagerEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent event event event event event event event event event event event event event event event List Date Date Date ArrayList util util util util util IOException io java java java java fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerWriterImplTest": "setSocket flush \"action: Status\\r\\n\\r\\n\" write socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade testSendAction instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" null null sendAction sendAction try Exception Exception throws throws testSendActionWithoutSocket \"cast\" SuppressWarnings ManagerWriterImpl new new new setUp void void void @ @ @ @ managerWriter managerWriter managerWriter managerWriter managerWriter ManagerWriter private ManagerWriterImplTest class class public public public public Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StatusAction StatusAction StatusAction action fail fail assertTrue assertTrue Assert Assert junit junit junit junit verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static static static import import import import import import import import import internal manager manager asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "NewStateEventTest": "\"Unknown (4)\" testWithUnknownState getChannelStateDesc getChannelState getChannelState Integer Integer \"Ring\" \"Ring\" setState setState testWithState this new new new setUp void void void @ @ @ newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent NewStateEvent NewStateEvent private NewStateEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "QueueMemberStateTest": "toString testToString \"DEVICE_INUSE\" \"DEVICE_INUSE\" valueOf valueOf DEVICE_INUSE DEVICE_INUSE DEVICE_INUSE QueueMemberState QueueMemberState QueueMemberState QueueMemberState QueueMemberState testValueOf void void @ @ QueueMemberStateTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "RateLimiterTest": "sleep Thread println out acquire i i i int for new limiter limiter currentTimeMillis currentTimeMillis System System System now long InterruptedException throws test void @ RateLimiterTest class public public Test Test RateLimiter RateLimiter RateLimiter assertTrue Assert junit junit static import import import agi agi pbx pbx asteriskjava asteriskjava org org org org package ",
            "ResourceBundleMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"net.sf.asterisk.fastagi.unavailable\" testDetermineScriptWithResourceBundleUnavailable \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" determineScript determineScript determineScript determineScript determineScript SimpleAgiRequest SimpleAgiRequest SimpleAgiRequest request request request request request request request request request request request AgiRequest AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript \"test-mapping\" setResourceBundleName setResourceBundleName new new new new this this setUp void void void void @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ResourceBundleMappingStrategy ResourceBundleMappingStrategy private ResourceBundleMappingStrategyTest class class class public public public public public Test Test Test Test Before Before assertTrue assertTrue assertTrue assertNull assertNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit junit static static static static import import import import import import fastagi asteriskjava org org org org org org org package ",
            "ResponseBuilderImplTest": "getStatus \"Status not set correctly\" getHint \"Hint not set correctly\" getContext \"Context not set correctly\" getExten \"Exten not set correctly\" extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse \"-1\" \"status\" \"\" \"\" \"hint\" \"default\" \"default\" \"context\" \"exten\" \"Extension Status\" testBuildExtensionStateResponse getOldMessages \"Old messages set correctly\" getNewMessages valueOf valueOf valueOf Integer Integer Integer \"New messages not set correctly\" mailboxCountResponse mailboxCountResponse mailboxCountResponse mailboxCountResponse \"5\" \"oldmessages\" \"2\" \"newmessages\" \"123@myctx\" \"123@myctx\" \"Mailbox Message Count\" testBuildMailboxCountResponse FALSE \"0\" \"123,user2\" \"123,user2\" testBuildMailboxStatusResponseWithNoWaiting getWaiting getWaiting TRUE Boolean Boolean \"Waiting not set correctly\" \"Waiting not set correctly\" getMailbox getMailbox getMailbox \"Mailbox not set correctly\" \"Mailbox not set correctly\" \"Mailbox not set correctly\" mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse \"1\" \"1\" \"1\" \"waiting\" \"waiting\" \"123\" \"123\" \"mailbox\" \"mailbox\" \"mailbox\" \"Mailbox Status\" \"Mailbox Status\" testBuildMailboxStatusResponse getChallenge \"Challenge not set correctly\" \"131494410\" \"131494410\" \"challenge\" testBuildChallengeResponse getActionId \"ActionId not set correctly\" \"1234\" \"1234\" \"actionid\" testBuildErrorWithActionId getMessage \"Message not set correctly\" \"Missing action in request\" \"Missing action in request\" \"Missing action in request\" \"message\" \"message\" \"message\" \"message\" \"message\" \"message\" \"Error\" \"Error\" testBuildError null testBuildResponseWithoutResponseClass getResponse getResponse \"Response not set correctly\" \"Response not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put testBuildResponse new new this this setUp void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes Object Object String String responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder ResponseBuilderImpl ResponseBuilderImpl private private ResponseBuilderImplTest class class class class class class class class class class class class class class class class class public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Before Before ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerError ManagerError MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ChallengeResponse ChallengeResponse ChallengeResponse ChallengeResponse response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response Map Map HashMap HashMap util util java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "RtcpReceivedEventTest": "\"1.2345 (sec)\" testDlSrWithSpace getDlSr \"1.2345(sec)\" setDlSr setDlSr testDlSr PT_SENDER_REPORT getPt getPt Long Long \"200(Sender Report)\" setPt testPt getFromPort Integer getHostAddress getFromAddress \"192.168.0.1\" \"192.168.0.1:1234\" setFrom testFrom this new new new new setUp void void void void void @ @ @ @ @ rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent private RtcpReceivedEventTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "ScriptEngineMappingStrategyTest": "testSearchFileOutsidePath getPath \"bla\" getCanonicalPath \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \".\" \".\" \"test\" \"test\" \"src\" \"src\" \"src\" String String String String null null searchFile searchFile searchFile searchFile searchFile throws testSearchFile new new new new new new this setUp void void void @ @ @ scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy private ScriptEngineMappingStrategyTest class public public public public Test Test Test Before Before IOException IOException File File io io java java assertNull assertNull assertNull assertNull assertNull assertEquals assertEquals Assert Assert junit junit junit junit getExtension ScriptEngineMappingStrategy ScriptEngineMappingStrategy ScriptEngineMappingStrategy static static static import import import import import import import fastagi fastagi asteriskjava asteriskjava org org org org org org package ",
            "SipShowPeerResponseTest": "getMohsuggest \"Incorrect mohsuggest\" \"default\" \"default\" setMohsuggest testSetMohsuggest \": 60000 ms\\nChanVariable:\\n PHBX_ID,191\" testSetQualifyFreqWithWorkaroundAndChanVariable \": 6000 ms\\n\" testSetQualifyFreqWithWorkaround getQualifyFreq getQualifyFreq getQualifyFreq int int int \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"6000 ms\" setQualifyFreq setQualifyFreq setQualifyFreq testSetQualifyFreq new setUp void void void void void @ @ @ @ @ SipShowPeerResponse SipShowPeerResponse private SipShowPeerResponseTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import response response response response response response response response response response response manager asteriskjava org org org org package ",
            "SkypeBuddyStatusEventTest": "getBuddySkypename \"the.buddy\" testGetBuddySkypename getUser \"user\" testGetUser \"Skype/user@the.buddy\" setBuddy this new setUp void void void @ @ @ SkypeBuddyStatusEvent SkypeBuddyStatusEvent private SkypeBuddyStatusEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals Assert junit junit junit static import import import event event event event event event manager asteriskjava org org org org package ",
            "SkypeChatMessageEventTest": "getDecodedMessage \"h\u00f6\u00f6\u00f6?\" \"Inocrrectly decoded message\" \"aMO2w7bDtj8=\" setMessage this new SkypeChatMessageEvent SkypeChatMessageEvent final testGetDecodedMessage void @ SkypeChatMessageEventTest class public public Test Test assertEquals assertEquals Assert junit junit static import import event event event event manager asteriskjava org org org package ",
            "T38FaxStatusEventTest": "getAverageRxDataRateInBps getAverageTxDataRateInBps getAverageLagInMilliSeconds getT38SessionDurationInSeconds getMaxLagInMilliSeconds intValue intValue intValue intValue getTotalLagInMilliSeconds \"0 bps\" setAverageRxDataRate \"363 bps\" setAverageTxDataRate \"-1.80 ms\" setAverageLag setT38SessionDuration \"4 ms\" setMaxLag \"-9 ms\" setTotalLag testParseProperties \"0.022 sec.\" \"0.022 sec.\" stripUnit \"0.022\" this this new new T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent testStripUnit void void @ @ T38FaxStatusEventTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import event event event event event event event event event event event event event event event event manager asteriskjava org org org package "
        },
        "deleted_diff_per_file": {
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": "                File[] contenuti = folder.listFiles();\n                String entryName;\n                for (File actual : contenuti)\n                    entryName = actual.getName();\n                    entryName = entryName.substring(0, entryName.lastIndexOf('.'));\n                    names.add(entryName);\n",
            "src/test/java/org/asteriskjava/fastagi/SimpleAgiRequest.java": "    private AsteriskVersion asteriskVersion;\n"
        },
        "deleted_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": [
                365,
                366,
                367,
                369,
                370,
                371
            ],
            "src/test/java/org/asteriskjava/fastagi/SimpleAgiRequest.java": [
                31
            ]
        },
        "diff_code": "+                File[] files = folder.listFiles();\n+                if (files != null)\n+                    for (File actual : files)\n+                    {\n+                        String entryName = actual.getName();\n+                        entryName = entryName.substring(0, entryName.lastIndexOf('.'));\n+                        names.add(entryName);\n+                    }\n+    private AsteriskVersion asteriskVersion = AsteriskVersion.ASTERISK_13;\n",
        "diff_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": [
                365,
                366,
                368,
                369,
                370,
                371,
                372,
                373
            ],
            "src/test/java/org/asteriskjava/fastagi/SimpleAgiRequest.java": [
                31
            ]
        },
        "diff_per_file": {
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": "                File[] files = folder.listFiles();\n                if (files != null)\n                    for (File actual : files)\n                    {\n                        String entryName = actual.getName();\n                        entryName = entryName.substring(0, entryName.lastIndexOf('.'));\n                        names.add(entryName);\n                    }\n",
            "src/test/java/org/asteriskjava/fastagi/SimpleAgiRequest.java": "    private AsteriskVersion asteriskVersion = AsteriskVersion.ASTERISK_13;\n"
        },
        "ekstazi_failed_test_list": [],
        "ekstazi_select_time": 0,
        "ekstazi_test_list": [],
        "ekstazi_total_time": 0,
        "failed_test_list": [],
        "passed_test_list": [
            "AbstractAgiCommandTest",
            "CallerIdTest",
            "ResponseBuilderImplTest",
            "AbstractManagerEventListenerTest",
            "AstUtilTest",
            "CompositeMappingStrategyTest",
            "NewStateEventTest",
            "CdrEventTest",
            "FastScannerDeterministicTest",
            "ChannelReloadEventTest",
            "ResourceBundleMappingStrategyTest",
            "GetDataCommandTest",
            "ScriptEngineMappingStrategyTest",
            "ActionBuilderImplTest",
            "EventBuilderImplTest",
            "AgiReaderImplTest",
            "AsyncAgiEventTest",
            "DefaultAgiServerTest",
            "QueueMemberStateTest",
            "AsteriskChannelImplTest",
            "T38FaxStatusEventTest",
            "BridgeEnterEventComparatorTest",
            "RateLimiterTest",
            "FastScannerRandomTest",
            "ClassNameMappingStrategyTest",
            "HangupCauseTest",
            "AgiReplyImplTest",
            "AsteriskQueueMemberImplTest",
            "ConfigFileParserTest",
            "SkypeChatMessageEventTest",
            "CoreStatusResponseTest",
            "AgiChannelImplTest",
            "AsteriskAgentImplTest",
            "DateUtilTest",
            "RtcpReceivedEventTest",
            "SkypeBuddyStatusEventTest",
            "AgiRequestImplTest",
            "FastScannerSpeedTest",
            "AsteriskVersionTest",
            "AgiWriterImplTest",
            "SipShowPeerResponseTest",
            "ExecCommandTest",
            "ManagerReaderImplTest",
            "ListenerManagerTest",
            "ManagerConnectionImplTest",
            "ManagerWriterImplTest"
        ],
        "prev_commit": "624ba313",
        "queries": {
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": "private ReflectionUtil ReflectionUtil class public JarFile JarEntry jar jar Set Map Locale Iterator HashSet HashMap Enumeration URLDecoder URL URISyntaxException URI net net net net Modifier Method InvocationTargetException Constructor reflect reflect reflect reflect lang lang lang lang IOException File io io java java java java java java java java java java java java java java java java java java java import import import import import import import import import import import import import import import import import import import util util util util util util util util util util asteriskjava org package ",
            "src/test/java/org/asteriskjava/fastagi/SimpleAgiRequest.java": "getAsteriskVersion Override @ setRemotePort getRemotePort setRemoteAddress getRemoteAddress setLocalPort getLocalPort setLocalAddress void void void void getLocalAddress getArguments getParameterMap getParameterValues name name getParameter getCallingTon getCallingTns getCallingPres getCallingAni2 getAccountCode getEnhanced Boolean getPriority Integer Integer Integer Integer Integer getExtension getContext getRdnis getDnid getCallerIdName getCallerIdNumber getCallerId getLanguage getType getUniqueId getChannel getRequestURL return return return return return return getScript UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException new new new new new new new new new new new new new new new new new new new new new new new new throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw throw getRequest \"hello.agi\" this this this this this this ASTERISK_13 asteriskVersion asteriskVersion script script script script script script String String String String String String String String String String String String String String String String String String String String String String String String String private private remotePort remotePort remotePort remotePort remotePort remoteAddress remoteAddress remoteAddress remoteAddress remoteAddress localPort localPort localPort localPort localPort int int int int int int localAddress localAddress localAddress localAddress localAddress AgiRequest implements SimpleAgiRequest SimpleAgiRequest SimpleAgiRequest class public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion Map Map Map util InetAddress InetAddress InetAddress InetAddress InetAddress InetAddress InetAddress net java java import import import fastagi asteriskjava asteriskjava org org package "
        },
        "starts_failed_test_list": [],
        "starts_select_time": 0,
        "starts_test_list": [],
        "starts_total_time": 0,
        "tests_cases_num": {
            "AbstractAgiCommandTest": 6,
            "AbstractManagerEventListenerTest": 2,
            "ActionBuilderImplTest": 16,
            "AgiChannelImplTest": 3,
            "AgiReaderImplTest": 5,
            "AgiReplyImplTest": 12,
            "AgiRequestImplTest": 24,
            "AgiWriterImplTest": 1,
            "AstUtilTest": 7,
            "AsteriskAgentImplTest": 1,
            "AsteriskChannelImplTest": 1,
            "AsteriskQueueMemberImplTest": 1,
            "AsteriskVersionTest": 4,
            "AsyncAgiEventTest": 2,
            "BridgeEnterEventComparatorTest": 17,
            "CallerIdTest": 7,
            "CdrEventTest": 3,
            "ChannelReloadEventTest": 3,
            "ClassNameMappingStrategyTest": 2,
            "CompositeMappingStrategyTest": 2,
            "ConfigFileParserTest": 4,
            "CoreStatusResponseTest": 2,
            "DateUtilTest": 2,
            "DefaultAgiServerTest": 4,
            "EventBuilderImplTest": 35,
            "ExecCommandTest": 5,
            "FastScannerDeterministicTest": 3,
            "FastScannerRandomTest": 2,
            "FastScannerSpeedTest": 3,
            "GetDataCommandTest": 4,
            "HangupCauseTest": 1,
            "ListenerManagerTest": 1,
            "ManagerConnectionImplTest": 22,
            "ManagerReaderImplTest": 9,
            "ManagerWriterImplTest": 2,
            "NewStateEventTest": 2,
            "QueueMemberStateTest": 2,
            "RateLimiterTest": 1,
            "ResourceBundleMappingStrategyTest": 3,
            "ResponseBuilderImplTest": 9,
            "RtcpReceivedEventTest": 5,
            "ScriptEngineMappingStrategyTest": 3,
            "SipShowPeerResponseTest": 4,
            "SkypeBuddyStatusEventTest": 2,
            "SkypeChatMessageEventTest": 1,
            "T38FaxStatusEventTest": 2
        }
    },
    {
        "changed_files": [
            "src/main/java/org/asteriskjava/manager/internal/AbstractBuilder.java",
            "src/main/java/org/asteriskjava/manager/internal/EventBuilderImpl.java",
            "src/main/java/org/asteriskjava/pbx/asterisk/wrap/events/DbGetResponseEvent.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentEventFactory.java",
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java"
        ],
        "changed_files_num": 5,
        "changed_java_files": [
            "src/main/java/org/asteriskjava/manager/internal/AbstractBuilder.java",
            "src/main/java/org/asteriskjava/manager/internal/EventBuilderImpl.java",
            "src/main/java/org/asteriskjava/pbx/asterisk/wrap/events/DbGetResponseEvent.java",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentEventFactory.java",
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java"
        ],
        "changed_java_files_num": 5,
        "commit": "18893be7",
        "data_objects": {
            "AbstractAgiCommandTest": "escapeAndQuote \"MY \" return Override this s s s s s String String String serialVersionUID long final AbstractAgiCommand extends \"MY \\\"first \\\\\\\\\\\\\\\" second \\\\\\\\\\\\\\\" third\\\"\" \"first \\\\\\\" second \\\\\\\" third\" testEscapedQuotesAJ192 \"MY \\\"Caller is:John Doe\\\"\" \"Caller is:\\nJohn Doe\" testEscapeAndQuoteWithStringContainingNewline \"MY \\\"\\\\\\\"John Doe\\\\\\\" is calling\\\"\" \"\\\"John Doe\\\" is calling\" testEscapeAndQuoteWithStringContainingQuotes \"\" testEscapeAndQuoteWithEmptyString \"MY \\\"\\\"\" \"MY \\\"\\\"\" null testEscapeAndQuoteWithNullString buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand buildCommand \"MY \\\"just a string\\\"\" \"just a string\" new new new new new new testEscapeAndQuote void void void void void void @ @ @ @ @ @ @ myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand myCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand MyCommand private private private AbstractAgiCommandTest class class public public public public public public public public public public Test Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static static import import command fastagi asteriskjava org org org package ",
            "AbstractManagerEventListenerTest": "shouldHandleJoinEvent void @ AbstractManagerEventListenerTest class public public Test Test LeaveEvent JoinEvent event event assertTrue Assert junit junit static import import import import manager manager manager asteriskjava asteriskjava asteriskjava org org org org org package ",
            "ActionBuilderImplTest": "\"This method must not be considered a getter relevant for building the action\" i int getIndexedProperty \"This method must not be considered a getter\" get privateProperty privateProperty getNonPublicProperty protected protected getSecondProperty getFirstProperty \"My\" return return return return return return getAction Override nonPublicProperty nonPublicProperty nonPublicProperty secondProperty secondProperty secondProperty secondProperty secondProperty Integer Integer Integer firstProperty firstProperty firstProperty firstProperty firstProperty serialVersionUID long final extends \"property-3: value3\\r\\n\" \"Incorrect mapping of property with annotated field\" testBuildActionWithAnnotatedField determineFieldName determineFieldName determineFieldName \"property1\" \"property1\" \"property1\" testDetermineFieldName \"property-2: value2\\r\\n\" \"Incorrect mapping of property with annotated setter\" testBuildActionWithAnnotatedSetter \"isProperty1\" \"isProperty1\" \"getProperty1\" \"getProperty1\" determineSetterName determineSetterName \"setProperty1\" \"setProperty1\" \"setProperty1\" testDetermineSetterName \"property-1: value1\\r\\n\" \"Incorrect mapping of property with annotated getter\" \"value3\" \"value3\" \"value3\" AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction AnnotatedAction testBuildActionWithAnnotatedGetter \"Incorrect mapping of variable property\" ASTERISK_1_6 \"var2\" \"peer\" testBuildActionForSipNotifyAction \"variable: var1=value1\\r\\nvariable: VAR2=value2\\r\\n\" setVariables \"value2\" \"value2\" \"value2\" \"value2\" \"value2\" \"VAR2\" \"value1\" \"value1\" \"value1\" \"value1\" \"value1\" \"var1\" \"var1\" map map map map map testBuildActionWithVariableMapForAsterisk12 \"variable: var1=value1\\r\\nvariable: var2=\\r\\nvariable: var3=value3\\r\\n\" testBuildActionWithVariablesForAsterisk12WithNullValues \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"variable: var1=value1\\r\\nvariable: var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" \"Incorrect mapping of variable property for Asterisk 1.2\" ASTERISK_1_2 ASTERISK_1_2 ASTERISK_1_2 setTargetVersion setTargetVersion setTargetVersion setTargetVersion testBuildActionWithVariablesForAsterisk12 \"variable: var1=value1|var2=|var3=value3\\r\\n\" \"var1=value1|var2=|var3=value3\" \"var1=value1|var2=|var3=value3\" testBuildActionWithVariablesForAsterisk10WithNullValues \"variable: var1=value1|var2=value2\\r\\n\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"Incorrect mapping of variable property for Asterisk 1.0\" \"var1=value1|var2=value2\" \"var1=value1|var2=value2\" setVariable setVariable setVariable setVariable setVariable setVariable originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction originateAction testBuildActionWithVariablesForAsterisk10 \"deprecation\" \"deprecation\" \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings SuppressWarnings SuppressWarnings \"mapmember: Key1=Value1|Key2=Value2|Key3=Value3\\r\\n\" \"Map member missing\" \"stringmember: stringMemberValue\\r\\n\" \"Regular member missing\" \"UserEvent: myuser\\r\\n\" \"Event name missing\" \"action: UserEvent\\r\\n\" setMapMember \"stringMemberValue\" setStringMember \"Value3\" \"Key3\" \"Value2\" \"Key2\" \"Value1\" \"Key1\" put put put put put mapMemberTest mapMemberTest mapMemberTest mapMemberTest mapMemberTest setUserEvent event event event event event MyUserEvent MyUserEvent testBuildUserEventAction \"Cat-000000: testcategory\" \"Action missing category testcategory - \" \"action: Action\" \"UpdateConfig actions must not have more than one 'action' header\" \"Action-0:\" \"Action must have zero-padded 6 digit numbering\" \"reload: Yes\" \"Correct reload setting missing\" \"dstfilename: destfile.conf\" \"Destination filename missing\" \"srcfilename: sourcefile.conf\" \"Source filename missing\" \"action: UpdateConfig\" null null null \"testcategory\" ACTION_NEWCAT addCommand true setReload \"destfile.conf\" setDstFilename \"sourcefile.conf\" setSrcFilename testBuildUpdateConfigAction \"actioncompleteeventclass:\" \"Action contains actionCompleteEventClass property\" \"action: Agents\\r\\n\" testBuildEventGeneratingAction testBuildActionWithNullValue length length \"Incorrect length\" \"Incorrect length\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" \"\\r\\n\\r\\n\" endsWith endsWith endsWith endsWith \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"Missing trailing CRNL CRNL\" \"secondproperty: 2\\r\\n\" \"Second property missing\" \"firstproperty: first value\\r\\n\" \"firstproperty: first value\\r\\n\" \"First property missing\" \"First property missing\" \"action: My\\r\\n\" \"action: My\\r\\n\" indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf indexOf \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" \"Action name missing\" buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction buildAction \"private\" setNonPublicProperty setNonPublicProperty setSecondProperty setSecondProperty \"first value\" \"first value\" setFirstProperty setFirstProperty setFirstProperty actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String String myAction myAction myAction myAction myAction myAction myAction myAction myAction myAction MyAction MyAction MyAction MyAction MyAction testBuildAction new new new new new new new new new new new new new new new new new new this this this this this setUp void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder actionBuilder ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl ActionBuilderImpl private private private private private ActionBuilderImplTest class class public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before UserEventAction UserEventAction UserEventAction UpdateConfigAction UpdateConfigAction UpdateConfigAction UpdateConfigAction SipNotifyAction SipNotifyAction SipNotifyAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction OriginateAction AgentsAction AgentsAction AgentsAction AbstractManagerAction AbstractManagerAction action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action action AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion Map Map Map LinkedHashMap LinkedHashMap LinkedHashMap util util java java assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org package ",
            "AgiChannelImplTest": "getExtra name getAttribute getStatus return return return return getResult getResultCodeAsChar char getResultCode getLines UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException UnsupportedOperationException throw throw throw throw throw throw getFirstLine usage usage usage usage usage synopsis synopsis synopsis synopsis synopsis result result result result result String String String String String String String String String String String String String String status status status status status int int int int serialVersionUID long final implements getUsage getUsage \"Incorrect usage\" getSynopsis getSynopsis \"Incorrect sysnopsis\" \"Invalid command syntax: NOOP Synopsis\" \"must throw InvalidCommandSyntaxException\" \"NOOP Usage\" \"NOOP Usage\" setUsage setUsage \"NOOP Synopsis\" \"NOOP Synopsis\" setSynopsis setSynopsis SC_INVALID_COMMAND_SYNTAX testSendCommandWithInvalidCommandSyntaxResponse getMessage getMessage \"Invalid or unknown command: NOOP\" \"Incorrect message\" \"Incorrect message\" e e e e e e catch catch \"must throw InvalidOrUnknownCommandException\" try try SC_INVALID_OR_UNKNOWN_COMMAND testSendCommandWithInvalidOrUnknownCommandResponse andReturn andReturn andReturn readReply readReply readReply sendCommand sendCommand sendCommand sendCommand sendCommand sendCommand \"0\" \"0\" \"0\" setResult setResult setResult setResult SC_SUCCESS setStatus setStatus setStatus setStatus SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply SimpleAgiReply Exception Exception Exception throws throws throws testSendCommand null AgiChannelImpl new new new new new new new new new new new new new this this this this this this this setUp void void void void void void void void @ @ @ @ agiChannel agiChannel agiChannel agiChannel agiChannel agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiReader agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter agiWriter private private private private private private private private AgiChannelImplTest class class class class public public public public public public public public public public public public public public public public public public public public Test Test Test Test Before Before AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand NoopCommand command command command command command command command command command command command command command InvalidOrUnknownCommandException InvalidOrUnknownCommandException InvalidCommandSyntaxException InvalidCommandSyntaxException AgiWriter AgiWriter AgiWriter AgiReader AgiReader AgiReader AgiChannel AgiChannel List List util java fail fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify verify replay replay replay replay replay replay replay expect expect expect expect createMock createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org package ",
            "AgiReaderImplTest": "e catch \"Must throw AgiHangupException\" try null testReadReplyWhenHungUp getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" testReadReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testReadReplyInvalidOrUnknownCommand getResultCode \"Incorrect result\" getStatus getStatus getStatus SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" readReply readReply readReply readReply \"200 result=49 endpos=2240\" testReadReply \"incorrect remote port\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect remote address\" \"incorrect local port\" getAddress getAddress getAddress getAddress getAddress getAddress getAddress getAddress \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" \"incorrect local address\" getChannel \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" readRequest getRemotePort getRemotePort getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress getRemoteAddress ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote ipRemote getLocalPort getLocalPort getByAddress getByAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress getLocalAddress byteValue byteValue byteValue byteValue byteValue byteValue byteValue byteValue valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf Integer Integer Integer Integer Integer Integer Integer Integer ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal ipLocal byte byte byte byte \"\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine request request request request request request request request request request request request request request request Exception Exception Exception Exception Exception throws throws throws throws throws testReadRequest FastAgiReader new new new this this setUp void void void void void void @ @ @ @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket socket agiReader agiReader agiReader agiReader agiReader agiReader agiReader private private AgiReaderImplTest class class public public public public public public public Test Test Test Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply AgiReply reply reply reply reply reply reply reply reply reply reply reply reply AgiRequest AgiRequest AgiReader AgiReader AgiHangupException AgiHangupException InetAddress InetAddress InetAddress net java fail fail assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static import import import import import import import import import import import import import import internal fastagi fastagi fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org package ",
            "AgiReplyImplTest": "testBuildReplyInvalidCommandSyntaxWithOnlyUsage getUsage \"Deletes an entry in the Asterisk database for a given family and key. Returns 1 if succesful, 0 otherwise\" \"Incorrect usage\" getSynopsis \"DATABASE DEL <family> <key>\" \"Incorrect synopsis\" SC_INVALID_COMMAND_SYNTAX SC_INVALID_COMMAND_SYNTAX \"520 End of proper usage.\" \"520 End of proper usage.\" \" Returns 1 if succesful, 0 otherwise\" \" Returns 1 if succesful, 0 otherwise\" \" given family and key.\" \" given family and key.\" \"        Deletes an entry in the Asterisk database for a\" \"        Deletes an entry in the Asterisk database for a\" \" Usage: DATABASE DEL <family> <key>\" \" Usage: DATABASE DEL <family> <key>\" \"520-Invalid command syntax.  Proper usage follows:\" \"520-Invalid command syntax.  Proper usage follows:\" testBuildReplyInvalidCommandSyntax SC_INVALID_OR_UNKNOWN_COMMAND \"510 Invalid or unknown command\" testBuildReplyInvalidOrUnknownCommand \"200 result=1 ((hello)(world)) endpos=2240\" testBuildReplyWithAdditionalAttributeAndParenthesis \"(hello)(world)\" \"(hello)(world)\" \"Incorrect parenthesis\" \"Incorrect parenthesis\" \"200 result=1 ((hello)(world))\" testBuildReplyWithParenthesis println out System testBla \"hi \\\"joe!\\\"\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"hi \\\\\\\"joe!\\\\\\\"\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute2 \"text0\" \"text0\" \"123456789\" \"Incorrect text0 attribute\" \"Incorrect text0 attribute\" getExtra getExtra getExtra getExtra \"speech\" \"speech\" \"Incorrect extra\" \"Incorrect extra\" \"0\" \"0\" \"1\" \"1\" \"200 result=1 (speech) endpos=0 results=1 score0=969 text0=\\\"123456789\\\" grammar0=digits\" testBuildReplyWithQuotedAttribute \"startpos\" \"1234\" \"Incorrect startpos attribute\" \"200 result=49 startpos=1234 endpos=2240\" testBuildReplyWithMultipleAdditionalAttribute \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"endpos\" \"2240\" \"2240\" \"2240\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"Incorrect endpos attribute\" \"200 result=49 endpos=2240\" testBuildReplyWithAdditionalAttribute \"result\" \"result\" \"result\" \"result\" \"result\" getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute getAttribute \"49\" \"49\" \"49\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" \"Incorrect result when get via getAttribute()\" getResultCodeAsChar getResultCodeAsChar getResultCodeAsChar '1' '1' '1' \"Incorrect result as character\" \"Incorrect result as character\" \"Incorrect result as character\" getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode getResultCode \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" \"Incorrect result\" getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus getStatus SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS SC_SUCCESS \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"Incorrect status\" \"200 result=49\" add add add add add add add add add add add add add add add add add add add add reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply reply AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl AgiReplyImpl testBuildReply new new new new new new new new new new new this setUp void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String private AgiReplyImplTest class public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Before Before List List ArrayList ArrayList util util java java assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import import import internal fastagi asteriskjava org org org org org package ",
            "AgiRequestImplTest": "getCallerIdNumber \"incorrect callerIdNumber\" \"agi_callerid: 1234\" testBuildRequestWithoutCallerIdName \"12345\" \"incorrect accountCode\" \"agi_accountcode: 12345\" testBuildRequestWithAccountCode getAsteriskVersion ASTERISK_13 \"incorret Asterisk Version Number\" getAccountCode getAccountCode \"incorrect accountCode must not be set\" getEnhanced FALSE Boolean \"incorrect enhanced\" getPriority Integer \"incorrect priority\" getExtension \"incorrect extension\" getContext \"local\" \"incorrect context\" getRdnis \"9876\" \"incorrect rdnis\" getDnid \"8870\" \"8870\" \"incorrect dnid\" getCallerIdName \"John Doe\" \"incorrect callerIdName\" getCallerId getCallerId \"1234\" \"1234\" \"1234\" \"incorrect callerId\" \"incorrect callerId\" getLanguage \"en\" \"incorrect language\" getUniqueId \"1110023416.6\" getType \"SIP\" \"incorrect type\" \"incorrect uniqueId\" \"incorrect uniqueId\" getChannel getChannel \"SIP/1234-d715\" \"SIP/1234-d715\" \"incorrect channel\" getRequestURL \"agi://host/myscript.agi\" \"incorrect requestURL\" getScript \"myscript.agi\" \"incorrect script\" AgiRequestImpl AgiRequestImpl AgiRequestImpl \"agi_version: 13.1.0~dfsg-1.1ubuntu4.1\" \"agi_accountcode: \" \"agi_enhanced: 0.0\" \"agi_priority: 1\" \"agi_extension: 8870\" \"agi_context: local\" \"agi_rdnis: 9876\" \"agi_dnid: 8870\" \"agi_callerid: John Doe<1234>\" \"agi_uniqueid: 1110023416.6\" \"agi_type: SIP\" \"agi_language: en\" \"agi_channel: SIP/1234-d715\" \"agi_request: agi://host/myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network_script: myscript.agi\" \"agi_network: yes\" \"agi_network: yes\" add add add add add add add add add add add add add add add add add add add add new new new new new new new request request request request request request request request request request request request request request request request request request request request request request request request request request lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines lines String String String String String String testBuildRequest void void void \"deprecation\" \"deprecation\" SuppressWarnings SuppressWarnings @ @ @ @ @ AgiRequestImplTest class public public public public Test Test Test Test AgiRequest AgiRequest AgiRequest AgiRequest AsteriskVersion AsteriskVersion List List List List ArrayList ArrayList ArrayList ArrayList util util java java fail assertNull assertNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit static static static static import import import import import import import import import internal fastagi fastagi asteriskjava asteriskjava asteriskjava org org org org org org org org package ",
            "AgiWriterImplTest": "sendCommand flush \"STREAM FILE \\\"welcome\\\" \\\"\\\"\\n\" write \"welcome\" Exception throws testSendCommand FastAgiWriter new new this this setUp void void @ @ socket socket socket socket socket socket socket agiWriter agiWriter agiWriter private private AgiWriterImplTest class class public public public Test Test Before Before junit junit SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StreamFileCommand StreamFileCommand StreamFileCommand command command command command AgiWriter AgiWriter verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static import import import import import import import import internal fastagi fastagi fastagi asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org package ",
            "AstUtilTest": "\"1\" isEqual isEqual isEqual isEqual isEqual testIsEqual \"-none-\" \"\\\"-none-\\\" must be considered null\" testIsNullForIpAddressInPeerEntryEvent \"<unknown>\" \"<unknown> must be null\" \"unknown\" \"unknown must be null\" isNull isNull isNull isNull \"null must be null\" testIsNull \"3496853210\" \"3496853210\" \"\\\"3496853210\\\" <3496853210>\" s s s String testAJ120 \"Hans Wurst <  > \" \"Hans Wurst <>\" \"\\\"Hans Wurst\\\"\" \"Hans Wurst <  1234 >   \" \"1234\" \"1234\" \"1234\" testParseCallerIdNumber \" \" \" \" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \" 1234> \" \"1234>\" \" <1234 \" \"<1234\" \" <1234> \" \"<1234>\" \" Hans Wurst \" \"\\\"Hans <Wurst>\\\" <1234>\" \"Hans <Wurst>\" \" Hans Wurst  <1234>  \" \"Hans Wurst <1234>\" \"  \\\"  Hans Wurst  \\\"   <1234>  \" \"  \\\"Hans Wurst  \\\"   <1234>  \" \"\\\" Hans Wurst \\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\" <1234>\" \"\\\"Hans Wurst\\\"<1234>\" \"\\\"Hans Wurst\\\"<1234>\" parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId parseCallerId \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" testParseCallerIdName null null null null null null null null null null null null null null null null null null null null \"null must be false\" \"false\" \"false must be false\" \"true\" \"true must be true\" \"Enabled\" \"Enabled must be true\" \"ON\" \"ON must be true\" \"on\" isTrue isTrue isTrue isTrue isTrue isTrue AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil AstUtil \"on must be true\" testIsTrue void void void void void void void @ @ @ @ @ @ @ AstUtilTest class public public public public public public public public Test Test Test Test Test Test Test Test assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertFalse assertFalse assertFalse assertFalse assertFalse assertFalse assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit static static static import import import import util asteriskjava org org org org org package ",
            "AsteriskAgentImplTest": "\"wrong number of propagated changes\" updateState getSource \"wrong queue\" getNewValue AGENT_RINGING AGENT_RINGING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener getState testUpdateStatus AGENT_IDLE AGENT_IDLE AGENT_IDLE \"Agent/999\" \"Testagent\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int agent agent agent agent agent agent AsteriskAgentImpl AsteriskAgentImpl private private AsteriskAgentImplTest class public public public public Test Test Before Before AgentState AgentState AgentState AgentState AgentState AgentState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsteriskChannelImplTest": "\"wrong number of propagated changes\" getSource \"wrong source\" getNewValue DIALING DIALING \"wrong newValue\" getOldValue \"wrong oldValue\" getPropertyName \"state\" \"wrong propertyName\" evt evt evt evt evt propertyChange addPropertyChangeListener testStateChange DOWN DOWN stateChanged stateChanged getDate getDate getDate \"0123456789.123\" \"SIP/1234\" new new new server server AsteriskServerImpl AsteriskServerImpl setUp void void void @ @ numberOfChanges numberOfChanges numberOfChanges numberOfChanges int channel channel channel channel channel channel AsteriskChannelImpl AsteriskChannelImpl private private AsteriskChannelImplTest class public public public public Test Test Before Before DateUtil DateUtil DateUtil DateUtil util ChannelState ChannelState ChannelState ChannelState ChannelState PropertyChangeListener PropertyChangeListener PropertyChangeEvent PropertyChangeEvent beans beans java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import internal live live asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "AsteriskQueueMemberImplTest": "server AsteriskServerImpl numberOfChanges int queueMember AsteriskQueueMemberImpl private private private AsteriskQueueMemberImplTest class public Test Before QueueMemberState PropertyChangeListener PropertyChangeEvent beans beans java java assertEquals Assert junit junit junit static import import import import import import internal live live asteriskjava asteriskjava org org org org org package ",
            "AsteriskVersionTest": "ASTERISK_15 \"Asterisk 15.1.0\" test15 ASTERISK_14 \"Asterisk 14.1.0\" test14 ASTERISK_13 equals equals equals \"Asterisk 13.1.0~dfsg-1.1ubuntu4.1\" test13 \"\" getDetermineVersionFromString getDetermineVersionFromString getDetermineVersionFromString getDetermineVersionFromString AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion AsteriskVersion testNullIfNoMatch void void void void @ @ @ @ AsteriskVersionTest class public public public public public Test Test Test Test Test assertTrue assertTrue assertTrue assertTrue assertNull assertNull Assert Assert junit junit junit static static import import import asteriskjava org org org org package ",
            "AsyncAgiEventTest": "\"agi_request: async: bla\" \"agi_request%3a%20async%3a%20bla\\n\" testDecodeEnvWithMoreThanTwoDelimiters \"agi_threadid: -1231783024\" get get get \"agi_calleridname: Stefan Reuter\" decodeEnv decodeEnv \"agi_threadid%3a%20-1231783024\\n\" \"agi_accountcode%3a%20\\n\" \"agi_enhanced%3a%200.0\\n\" \"agi_priority%3a%201\\n\" \"agi_extension%3a%203115\\n\" \"agi_context%3a%20from-local\\n\" \"agi_rdnis%3a%20unknown\\n\" \"agi_dnid%3a%203115\\n\" \"agi_callingtns%3a%200\\n\" \"agi_callington%3a%200\\n\" \"agi_callingani2%3a%200\\n\" \"agi_callingpres%3a%200\\n\" \"agi_calleridname%3a%20Stefan%20Reuter\\n\" \"agi_callerid%3a%201312\\n\" \"agi_version%3a%20SVN-branch-1.6.0-r110832\\n\" \"agi_uniqueid%3a%201207271023.41\\n\" \"agi_type%3a%20SIP\\n\" \"agi_language%3a%20en\\n\" \"agi_channel%3a%20SIP%2f1312-b70020a8\\n\" \"agi_request%3a%20async\\n\" setEnv setEnv env env env env env env env String String this this new new AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent AsyncAgiEvent testDecodeEnv void void @ @ AsyncAgiEventTest class public public public Test Test Test List List List util java assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import import event event event event event event event manager asteriskjava org org org package ",
            "BridgeEnterEventComparatorTest": "withoutPrefix_shouldId2BeGreater void @ new bridgeEnterEventComparator BridgeEnterEventComparator BridgeEnterEventComparator private BridgeEnterEventComparatorTest class public public Test Test Assert junit junit BridgeEnterEvent event import import import bridge backwardsCompatibility internal manager manager asteriskjava asteriskjava org org org org package ",
            "CallerIdTest": "\"\\\"Hans Wurst\\\" <>\" testValueOfWithNullLiteralInNumber \"<1234>\" \"\\\"<Unknown>\\\" <1234>\" \"\\\"\\\" <1234>\" testValueOfWithNullLiteralInName toString toString \"Hans Wurst <1234>\" \"\\\"Hans Wurst\\\" <1234>\" valueOf valueOf valueOf valueOf valueOf valueOf valueOf valueOf callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId callerId testValueOf null null null null null null null null null null \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"1234\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" \"Hans Wurst\" new new new new new new new new new new new callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId2 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 callerId1 CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId CallerId testEquals void void void void @ @ @ @ CallerIdTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "CdrEventTest": "toString \"Mon May 29 13:17:21 CEST 2006\" \"2006-05-29 13:17:21\" \"Europe/Monaco\" testBug \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone getTime getTime getStartTimeAsDate getStartTimeAsDate getStartTimeAsDate testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone getTimeZone setDefault setDefault setDefault getDefault \"2006-05-19 11:54:48\" setStartTime setStartTime this new setUp void void void void void @ @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent cdrEvent CdrEvent CdrEvent CdrEventTest class public public public public public public Test Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import event manager asteriskjava org org org org org package ",
            "ChannelReloadEventTest": "\"Channel module reload by CLI command\" testGetReloadReasonDescription REASON_CLI_RELOAD \"CLIRELOAD\" \"CLIRELOAD (Channel module reload by CLI command)\" \"CLIRELOAD (Channel module reload by CLI command)\" testGetReloadReasonCode getReloadReasonDescription getReloadReasonDescription getReloadReasonCode getReloadReasonCode getReloadReasonCode null setReloadReason setReloadReason setReloadReason testNullReloadReason new this this setUp void void void void @ @ @ @ ChannelReloadEvent ChannelReloadEvent ChannelReloadEvent private ChannelReloadEventTest class public public public public public Test Test Test Test Before Before assertNull assertNull assertNull assertEquals assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import event event event event event event event event event event event manager asteriskjava org org org org org package ",
            "ClassNameMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" determineScript determineScript determineScript determineScript \"org.asteriskjava.fastagi.HelloAgiScript\" \"org.asteriskjava.fastagi.HelloAgiScript\" return return getScript getScript String String Override Override SimpleAgiRequest SimpleAgiRequest request request request request request request request request AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript new new new this setUp void void void @ @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ClassNameMappingStrategy ClassNameMappingStrategy private ClassNameMappingStrategyTest class class class public public public public public public Test Test Test Before Before assertTrue assertTrue assertTrue assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "CompositeMappingStrategyTest": "\"org.asteriskjava.fastagi.HelloAgiScript\" testAJ37ClassName HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" \"no script determined\" null null determineScript determineScript script script script script script script AgiScript AgiScript SimpleAgiRequest SimpleAgiRequest request request request request AgiRequest AgiRequest testAJ37ResourceBundle ClassNameMappingStrategy \"test-mapping\" ResourceBundleMappingStrategy new new new new new setUp void void void @ @ @ strategy strategy strategy strategy CompositeMappingStrategy CompositeMappingStrategy private CompositeMappingStrategyTest class class class public public public public Test Test Test Before Before assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert junit junit junit junit static static import import import import fastagi asteriskjava org org org org org package ",
            "ConfigFileParserTest": "format println out System getCategories for \"/etc/asterisk/sip2.conf\" readFile XtestReadConfig \"No '=' (equal sign) in line 20 of extensions.conf\" MissingEqualSignException \"Expected exception when parsing a line without a '='\" \"\" \"foo=\" \"s-NOANSWER,1,Hangup\" \"Incorrect value\" \"Incorrect value\" \"exten\" \"Incorrect name\" \"Incorrect name\" \"exten => s-NOANSWER,1,Hangup\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" \"extensions.conf\" parseVariable parseVariable parseVariable variable variable variable variable variable variable variable variable variable testParseVariable \"Directive '#include' needs an argument (filename) at line 805 of /etc/asterisk/sip.conf\" MissingDirectiveParameterException \"Expected exception when parsing a line with a directive but no parameter\" \"#include   \" \"/etc/asterisk/sip.conf\" \"Unknown directive 'foo' at line 20 of abc.conf\" UnknownDirectiveException \"Expected exception when parsing a line with an unknown directive\" \"#foo\" getExecFile \"/usr/local/test.sh\" \"Incorrect exec file\" ExecDirective ExecDirective \"#exec   </usr/local/test.sh>   \" getIncludeFile \"/etc/asterisk/inc.conf\" \"Incorrect include file\" IncludeDirective IncludeDirective \"Incorrect type of configDirective\" \"Incorrect type of configDirective\" \"#include \\\"/etc/asterisk/inc.conf\\\"\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" \"abc.conf\" parseDirective parseDirective parseDirective parseDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective configDirective ConfigDirective testParseDirective \"parse error: no closing ')', line 1 of test.conf\" \"Expected exception when closing ')' is missing\" \"[foo](bar\" \"parse error: no closing ']', line 1 of test.conf\" \"Expected exception when closing ']' is missing\" \"[foo\" getMessage getMessage getMessage getMessage getMessage getMessage \"Inheritance requested, but category 'a' does not exist, line 1 of test.conf\" e e e e e e e e e e e e e e ConfigParseException ConfigParseException ConfigParseException ConfigParseException ConfigParseException catch catch catch catch catch catch \"Expected exception when requesting inheritance from a non-existing catagory\" \"[foo](a)\" try try try try try try \"[foo](+)\" isTemplate \"Category not flagged as template\" \"[foo](!)\" getFileName getFileName getFileName getFileName getFileName \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" \"Incorrect file name\" getLineNumber getLineNumber getLineNumber getLineNumber getLineNumber \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"Incorrect line number\" \"foo\" \"foo\" \"foo\" \"foo\" \"foo\" \"Incorrect category name\" \"Incorrect category name\" \"Incorrect category name\" \"[foo]\" parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader parseCategoryHeader category category category category category category category category category category category category testParseCategoryHeader getComment \"a line comment\" \"Incorrect comment\" getValue getValue getValue \"b\" \"Incorrect variable value\" getName getName getName getName getName getName \"a\" \"Incorrect variable name\" configVariable configVariable configVariable getClass getClass getClass ConfigVariable ConfigVariable ConfigVariable ConfigVariable \"Incorrect type of configElement\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" \"test.conf\" processLine configElement configElement configElement configElement ConfigElement \"cat\" Category Category Category appendCategory flip put length allocate buffer buffer buffer buffer \" a ;-- comment --; = b ; a line comment\" s s s String Exception Exception throws throws throws throws testProcessLine new new setUp void void void void void void @ @ @ @ @ configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader configFileReader ConfigFileReader ConfigFileReader ConfigFileParserTest class class class class public public public public public public public Test Test Test Test Test Before Before CharBuffer CharBuffer CharBuffer nio java fail fail fail fail fail fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit static static static import import import import import import config asteriskjava org org org org org org package ",
            "CoreStatusResponseTest": "null testGetCoreStartupTimeAsDateIfDateIsNull toString getCoreStartupDateTimeAsDate \"Wed May 27 02:49:15 CEST 2009\" \"02:49:15\" setCoreStartupTime \"2009-05-27\" setCoreStartupDate setCoreStartupDate \"TimeZone not found\" \"TimeZone not found\" testGetCoreStartupTimeAsDate tearDown setDefault setDefault getDefault new this setUp void void void void @ @ @ @ defaultTimeZone defaultTimeZone defaultTimeZone CoreStatusResponse CoreStatusResponse \"Europe/Berlin\" getTimeZone tz tz tz tz tz private private private CoreStatusResponseTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone util java assertNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit static static static import import import import import import import response response response response response response response manager asteriskjava org org org org org org org package ",
            "DateUtilTest": "\"Fri May 19 09:54:48 GMT 2006\" \"GMT+2\" tz tz testGetStartTimeAsDateWithTimeZone toString toString \"Fri May 19 11:54:48 GMT 2006\" getTime getTime parseDateTime parseDateTime DateUtil DateUtil result result result result result result testGetStartTimeAsDate tearDown \"GMT\" getTimeZone getTimeZone setDefault setDefault getDefault setUp void void void void @ @ @ @ \"2006-05-19 11:54:48\" dateString dateString dateString String final final final final defaultTimeZone defaultTimeZone defaultTimeZone DateUtilTest class public public public public public Test Test Test Before Before After After TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone TimeZone Date Date Date java java assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit junit static import import import import import import util util util asteriskjava org org org org org package ",
            "DefaultAgiServerTest": "e catch startup try close flush \"VERBOSE \\\"No script configured for null\\\" 1\\n\" write getRemotePort getRemoteAddress getLocalPort getLocalAddress null null null null andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine XtestStartup testDummy shutdown Exception Exception throws throws tearDown MockedDefaultAgiServer new new setUp void void void void @ @ @ socket socket socket socket socket socket socket socket socket socket socket socket serverSocket serverSocket MockedServerSocketFacade MockedServerSocketFacade server server server server DefaultAgiServer private private private DefaultAgiServerTest class class public public public public public Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade ServerSocketFacade util util IOException IOException io java assertEquals Assert junit junit junit junit verify replay replay expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static import import import import import import import import import import import fastagi asteriskjava asteriskjava asteriskjava org org org org org org org org org org org package ",
            "EventBuilderImplTest": "\"1\" testBuildEventWithOnePeerEntryEventList \"Invalid size of peers property\" \"Invalid size of peers property\" \"UNKNOWN literal returns NULL status\" getStatus getStatus getStatus getStatus \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" \"Property events[status] is not set correctly\" getObjectName getObjectName getObjectName getObjectName getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents getChildEvents \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"Property events[objectname] is not set correctly\" \"ActionId is invalid\" \"ActionId is invalid\" \"3\" \"listitems\" \"listitems\" \"LAGGED\" \"LAGGED\" \"UNKNOWN\" \"OK\" \"OK\" \"OK\" \"OK\" \"status\" \"status\" \"a103\" \"a103\" \"a102\" \"a102\" \"a101\" \"a101\" \"a101\" \"a101\" \"objectname\" \"objectname\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"1378144905_4#123\" \"PeerlistComplete\" \"PeerlistComplete\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" \"PeerEntry\" testBuildEventWithPeerEntryEventList getT38SessionDuration \"Property 'T38 Session Duration' is not set correctly\" \"120\" \"120\" \"t38 session duration\" \"T38FaxStatus\" testBuildEventWithSpace testBuildEventWithMapPropertyAndOnlyOneEntry size size size size \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" get get get get get get get get get get get getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"var2=val2\" \"var1=val1\" \"var1=val1\" asList asList asList asList asList asList \"variable\" \"variable\" \"AgentCalled\" \"AgentCalled\" testBuildEventWithMapProperty getReceivedPackets \"Property receivedPacket is not set correctly\" testBuildEventForRtpReceiverStatEventAJ139 getSsrc long long \"Property SSRC is not set correctly\" \"0\" \"0\" \"receivedpackets\" \"receivedpackets\" \"3776236237\" \"ssrc\" \"RtpReceiverStat\" \"RtpReceiverStat\" testBuildEventForRtpReceiverStatEventAJ162 getSipCallId \"Property SIP-Callid is not set correctly\" \"12345\" \"12345\" \"sip-callid\" \"Transfer\" testBuildEventWithDashInPropertyName \"Property with value \\\"<none>\\\" is not null\" \"<none>\" testBuildEventWithNullLiteral getTransit \"Transit property not set correctly\" \"12.3456\" \"transit\" \"RTPReceiverStat\" testBuildEventWithDouble getDuration Long \"Duration property not set correctly\" \"569108\" \"duration\" \"MeetmeLeave\" testBuildEventWithLong getTimestamp \"Timestamp property not set correctly\" \"1159310429.569108\" \"timestamp\" \"NewChannel\" testBuildEventWithTimestamp getReasonTxt \"a reason\" \"ReasonTxt property not set correctly\" getReason \"Reason property not set correctly\" \"123 - a reason\" \"reason\" \"LogChannel\" testBuildEventWithReason \"CidCallingPres property not set correctly (must be null)\" \"abc\" testBuildEventWithInvalidCidCallingPres \"123\" \"123\" \"123\" testBuildEventWithCidCallingPresAndMissingTxt \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"CidCallingPresTxt property not set correctly (must be null)\" \"123 ()\" testBuildEventWithCidCallingPresAndEmptyTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt getCidCallingPresTxt \"nice description\" \"CidCallingPresTxt property not set correctly\" getCidCallingPres getCidCallingPres getCidCallingPres getCidCallingPres valueOf valueOf valueOf valueOf \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"CidCallingPres property not set correctly\" \"123 (nice description)\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"cid-callingpres\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" \"Newcallerid\" testBuildEventWithCidCallingPres getCauseTxt \"CauseTxt property not set correctly\" \"some text\" \"some text\" \"cause-txt\" \"Hangup\" testBuildEventWithSpecialCharacterProperty getClassName \"ClassName property not set correctly\" \"default\" \"default\" \"class\" \"MusicOnHold\" testBuildEventWithClassProperty getSrc \"Src property not set correctly\" \"source value\" \"source value\" \"source\" \"Cdr\" \"Cdr\" testBuildEventWithSourceProperty getActionId getActionId getActionId \"origId\" \"ActionId not set correctly\" \"1234#origId\" \"actionid\" \"actionid\" \"actionid\" \"StatusComplete\" testBuildEventWithResponseEvent testBuildEventWithEmptyAttributes \"Nonexisting\" testBuildEventWithUnregisteredEvent FALSE \"NO\" testBuildEventWithBooleanPropertyOfValueNo \"yes\" testBuildEventWithBooleanPropertyOfValueYes getRestart getRestart getRestart TRUE TRUE Boolean Boolean Boolean \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"Boolean property not set correctly\" \"True\" \"restart\" \"restart\" \"restart\" \"shutdown\" \"shutdown\" \"shutdown\" testBuildEventWithBooleanProperty getPriority \"Integer property not set correctly\" getChannel getChannel toString \"priority\" \"channel\" \"channel\" \"newexten\" priority priority priority Integer Integer Integer Integer Integer \"SIP/1234\" channel channel channel testBuildEventWithIntegerProperty getSource \"Source not set correctly\" getCallerIdNum \"String property not set correctly\" \"String property not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"callerid\" \"Newchannel\" \"1234\" callerid callerid callerid testBuildEventWithMixedCaseSetter ex IllegalArgumentException catch \"registerEvent() must not accept abstract classes\" try testRegisterEventWithAbstractEvent \"UserEventD\" UserEventDEvent UserEventDEvent testRegisterUserEventWithUserEventDEvent \"C\" \"userevent\" \"UserEvent\" testRegisterUserEventWithUserEventCAndAsterisk14 \"UserEventC\" UserEventC UserEventC UserEventC UserEventC testRegisterUserEventWithUserEventC \"UserEventB\" BEvent BEvent testRegisterUserEventWithBEvent instanceof instanceof instanceof instanceof instanceof \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" \"Wrong type\" buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent buildEvent \"UserEventA\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put put A A testRegisterUserEventWithA registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass registerEventClass testRegisterEvent EventBuilderImpl new new new this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this this setUp void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties properties Object Object String String String String eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder eventBuilder EventBuilder private private EventBuilderImplTest class class class class class class class class class class class class class class class class class class class class class class class class class class public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Before Before TransferEvent TransferEvent TransferEvent TransferEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent StatusCompleteEvent StatusCompleteEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent ShutdownEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent RtpReceiverStatEvent ResponseEvent ResponseEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent PeersEvent NewExtenEvent NewExtenEvent NewExtenEvent NewExtenEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewChannelEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent NewCallerIdEvent MusicOnHoldEvent MusicOnHoldEvent MeetMeLeaveEvent MeetMeLeaveEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent LogChannelEvent LogChannelEvent LogChannelEvent HangupEvent HangupEvent CdrEvent CdrEvent CdrEvent CdrEvent CdrEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AbstractChannelEvent AbstractChannelEvent event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event event Map Map HashMap HashMap Arrays Arrays Arrays Arrays Arrays Arrays Arrays util util util java java java fail fail assertTrue assertTrue assertTrue assertTrue assertTrue assertTrue assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertNotNull assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert Assert Assert junit junit junit junit junit junit junit static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ExecCommandTest": "\"30\" testWithMultipleOptionsMultipleParameters \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"EXEC \\\"DIAL\\\" \\\"SIP/1234,30\\\"\" \"SIP/1234,30\" testWithMultipleOptionsSingleParameterCommaSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234|30\\\"\" \"SIP/1234|30\" testWithMultipleOptionsSingleParameterPipeSeparated \"EXEC \\\"DIAL\\\" \\\"SIP/1234\\\"\" \"SIP/1234\" \"SIP/1234\" testWithSingleOption buildCommand buildCommand buildCommand buildCommand buildCommand \"EXEC \\\"DIAL\\\" \\\"\\\"\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" \"DIAL\" new new new new new testDefault void void void void void @ @ @ @ @ execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand execCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand ExecCommand private ExecCommandTest class public public public public public public Test Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "FastScannerDeterministicTest": "UTF_8 reader new new inputStream inputStream getBytes buildTestData bytes bytes byte final pattern pattern testLines testLines int private CRNL_PATTERN testNlScanner NL_PATTERN testScanner testScanner testScanner Exception Exception Exception throws throws throws testCrNlScanner void void void @ @ FastScannerDeterministicTest class public public public Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern regex NoSuchElementException Files file StandardCharsets StandardCharsets charset nio nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream File ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java assertTrue Assert junit junit static import import import import import import import import import import import streamreader internal internal util util util util asteriskjava asteriskjava org org org org package ",
            "FastScannerRandomTest": "\"Expected null, not something else\" \"Mismatched output\" RuntimeException RuntimeException throw throw \"Error \" \"Got      \" toHexString toHexString \"Expected \" equals if if null null next next next while useDelimiter scanner scanner scanner fastResult fastResult fastResult fastResult \"\" \"\" \"\" scannerResult scannerResult scannerResult scannerResult getReader FastScannerFactory fast fast fast FastScanner reader2 reader2 inputStream2 inputStream2 UTF_8 UTF_8 reader1 reader1 getBytes getBytes getBytes getBytes inputStream1 inputStream1 boolean printStackTrace e e e catch catch \"MB\" incrementAndGet \" Completed \" println println println println println out out out out out System System System System System compare compare generateTestData testData testData testData testData testData try try i i i for tests tests int int int new new new new new new new new ctr ctr ctr ctr ctr InterruptedException caption caption String String String String String pattern pattern pattern pattern pattern final final \"CR NL\" CRNL_PATTERN compareOutputOfCrNlFastScannerToScanner \"NL\" NL_PATTERN setupTest setupTest setupTest Exception Exception Exception throws throws throws throws compareOutputOfNlFastScannerToScanner void void void @ @ FastScannerRandomTest class public public public ByteArrayUtil ByteArrayUtil ByteArrayUtil encoder core logback qos ch Test Test Test SocketConnectionFacadeImpl SocketConnectionFacadeImpl SocketConnectionFacadeImpl Pattern Pattern Pattern regex AtomicInteger AtomicInteger AtomicInteger atomic concurrent Scanner Scanner Scanner Random NoSuchElementException NoSuchElementException StandardCharsets StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStreamReader InputStream InputStream InputStream IOException IOException ByteArrayInputStream ByteArrayInputStream ByteArrayInputStream io io io io java java java java java java java java java java fail fail Assert junit junit static import import import import import import import import import import import import import import streamreader internal internal util util util util util util util asteriskjava asteriskjava org org org org package ",
            "FastScannerSpeedTest": "null next while t t String \"unused\" SuppressWarnings \"\\r\\n\" compile useDelimiter scanner scanner scanner try ctr currentTimeMillis start long UTF_8 reader reader new new new inputStream inputStream \":\\t\" \"Scanner \" print out System System i i i int int for getBytes generateTestData FastScannerRandomTest bytes bytes byte final Exception throws testScannerSpeed void @ @ FastScannerSpeedTest class public public Test Test junit SocketConnectionFacadeImpl Pattern Pattern regex Scanner Scanner Scanner NoSuchElementException StandardCharsets StandardCharsets charset nio InputStreamReader InputStreamReader InputStreamReader InputStream InputStream ByteArrayInputStream ByteArrayInputStream io io io java java java java java java java import import import import import import import import import streamreader internal internal util util util util util asteriskjava asteriskjava org org org package ",
            "GetDataCommandTest": "\"GET DATA \\\"VAR1\\\" 10000 20\" testSetTimeoutAndMaxDigits \"GET DATA \\\"VAR1\\\" 0 10\" setMaxDigits setMaxDigits testSetMaxDigits \"GET DATA \\\"VAR1\\\" 10000\" getMaxDigits getMaxDigits getMaxDigits getTimeout getTimeout getTimeout setTimeout setTimeout testSetTimeout buildCommand buildCommand buildCommand buildCommand \"GET DATA \\\"VAR1\\\"\" \"VAR1\" \"VAR1\" \"VAR1\" \"VAR1\" new new new new testDefault void void void void @ @ @ @ getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand getDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand GetDataCommand private GetDataCommandTest class public public public public public Test Test Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import command fastagi asteriskjava org org org package ",
            "HangupCauseTest": "getByCode AST_CAUSE_NO_USER_RESPONSE HangupCause HangupCause \"Valid enum for cause code 18\" testGetByCode void @ HangupCauseTest class public public Test Test assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "ListenerManagerTest": "\"test\" getName String NORMAL getPriority true event onManagerEvent requiredEvents extends extends Class Class Override Override Override Override return return return return private size removeListener shuffle addListener add add getListener getListener listener listener listener listener listener i i i int for for queue queue queue queue ListenerManager ListenerManager new new new new listeners listeners listeners listeners FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener FilteredManagerListener InterruptedException throws listenerTest void void @ @ @ @ @ false managereventRecevied managereventRecevied boolean volatile ListenerManagerTest class class public public public public public public Test Test VarSetEvent VarSetEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent events events events events events wrap wrap asterisk asterisk ListenerPriority ListenerPriority ListenerPriority Set Set Set List List LinkedList LinkedList HashSet HashSet Collections Collections util util util util util java java java java java assertTrue assertTrue assertTrue Assert junit junit static import import import import import import import import import import core internal pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org package ",
            "ManagerConnectionImplTest": "\"username\" setExpectedUsername new setUp void @ mc MockedManagerConnectionImpl mockReader ManagerReaderMock mockWriter mockWriter mockWriter ManagerWriterMock ManagerWriterMock mockSocket protected protected protected protected ManagerConnectionImplTest class public public Test Before Before SocketConnectionFacade SocketConnectionFacade ManagerResponse response NewChannelEvent ManagerEvent DisconnectEvent ConnectEvent event event event event StatusAction PingAction CoreSettingsAction CommandAction action action action action TimeoutException ManagerEventListener ManagerConnectionState AuthenticationFailedException AsteriskVersion List ArrayList util util util IOException io java java java fail assertTrue assertFalse assertEquals Assert Assert Assert Assert junit junit junit junit junit junit verify replay expect createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerReaderImplTest": "getHighestSequence Long \"Invalid highest sequence on RtcpReceivedEvent\" getFromPort Integer \"Invalid from port on RtcpReceivedEvent\" getHostAddress getFromAddress \"192.168.0.1\" \"Invalid from address on RtcpReceivedEvent\" rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent \"first event must be a RtcpReceivedEvent\" \"HighestSequence: 999\" \"From 192.168.0.1:1234\" \"Event: RTCPReceived\" testWorkaroundForAsteriskBug13319 testRunReceivingEventWithMapPropertyAndOnlyOneEntry \"second event must be an DisconnectEvent\" \"second event must be an DisconnectEvent\" \"Invalid size of variables property\" \"Invalid size of variables property\" \"var2\" \"val2\" \"Property variables[var2] is not set correctly\" \"var1\" \"var1\" getVariables getVariables getVariables getVariables getVariables \"val1\" \"val1\" \"Property variables[var1] is not set correctly\" \"Property variables[var1] is not set correctly\" \"Returned event is of wrong type\" \"Returned event is of wrong type\" \"first event must be a AgentCalledEvent\" \"first event must be a AgentCalledEvent\" \"Variable: var2=val2\" \"Variable: var1=val1\" \"Variable: var1=val1\" \"Event: AgentCalled\" \"Event: AgentCalled\" testRunReceivingEventWithMapProperty \"first event must be a StatusCompleteEvent\" \"\" \"\" \"\" \"\" \"Event: StatusComplete\" testRunReceivingEvent \"DisconnectEvent contains incorrect dateReceived\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" \"second event must be a DisconnectEvent\" getDateReceived getDateReceived \"ProtocolIdentifierReceivedEvent contains incorrect dateReceived\" getProtocolIdentifier \"ProtocolIdentifierReceivedEvent contains incorrect protocol identifier\" getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass getClass get get get get get get get get get get get get get get get get get get get \"first event must be a ProtocolIdentifierReceivedEvent\" size size size size size size size dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents dispatchedEvents \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" \"not exactly two events dispatched\" setSocket setSocket setSocket setSocket setSocket \"Asterisk Call Manager/1.0\" \"Asterisk Call Manager/1.0\" andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn andReturn readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine readLine Exception Exception Exception Exception Exception throws throws throws throws throws testRunReceivingProtocolIdentifier instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" run run run run run run try testRunWithoutSocket \"cast\" SuppressWarnings null null null null null null tearDown this ManagerReaderImpl overrideCurrentDate overrideCurrentDate new new new new new setUp void void void void void void void void @ @ @ @ @ @ @ @ @ managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader managerReader ManagerReader socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher dispatcher MockedDispatcher MockedDispatcher now now now now now private private private private ManagerReaderImplTest class class class class class class class class class class class class class class public public public public public public public public public Test Test Test Test Test Test Test Before Before After After SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade DateUtil DateUtil DateUtil ManagerResponse CommandResponse response response StatusCompleteEvent StatusCompleteEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ProtocolIdentifierReceivedEvent ManagerEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent DisconnectEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent AgentCalledEvent event event event event event event event event event event event event event event event List Date Date Date ArrayList util util util util util IOException io java java java java fail fail assertTrue assertTrue assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert Assert Assert junit junit junit junit junit junit verify verify verify verify verify verify replay replay replay replay replay replay expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect expect createMock createMock EasyMock EasyMock EasyMock EasyMock easymock easymock easymock easymock static static static static static static static import import import import import import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org org org org org org org org org org org org package ",
            "ManagerWriterImplTest": "setSocket flush \"action: Status\\r\\n\\r\\n\" write socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade socketConnectionFacade testSendAction instanceof \"Exception must be of type IllegalStateException\" e e IllegalStateException IllegalStateException catch \"Must throw IllegalStateException\" null null sendAction sendAction try Exception Exception throws throws testSendActionWithoutSocket \"cast\" SuppressWarnings ManagerWriterImpl new new new setUp void void void @ @ @ @ managerWriter managerWriter managerWriter managerWriter managerWriter ManagerWriter private ManagerWriterImplTest class class public public public public Test Test Test Before Before SocketConnectionFacade SocketConnectionFacade SocketConnectionFacade util StatusAction StatusAction StatusAction action fail fail assertTrue assertTrue Assert Assert junit junit junit junit verify verify replay replay createMock createMock EasyMock EasyMock EasyMock easymock easymock easymock static static static static static import import import import import import import import import internal manager manager asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "NewStateEventTest": "\"Unknown (4)\" testWithUnknownState getChannelStateDesc getChannelState getChannelState Integer Integer \"Ring\" \"Ring\" setState setState testWithState this new new new setUp void void void @ @ @ newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent newStateEvent NewStateEvent NewStateEvent private NewStateEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "QueueMemberStateTest": "toString testToString \"DEVICE_INUSE\" \"DEVICE_INUSE\" valueOf valueOf DEVICE_INUSE DEVICE_INUSE DEVICE_INUSE QueueMemberState QueueMemberState QueueMemberState QueueMemberState QueueMemberState testValueOf void void @ @ QueueMemberStateTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import live asteriskjava org org org package ",
            "RateLimiterTest": "sleep Thread println out acquire i i i int for new limiter limiter currentTimeMillis currentTimeMillis System System System now long InterruptedException throws test void @ RateLimiterTest class public public Test Test RateLimiter RateLimiter RateLimiter assertTrue Assert junit junit static import import import agi agi pbx pbx asteriskjava asteriskjava org org org org package ",
            "ResourceBundleMappingStrategyTest": "\"returned a shared instance\" false setShareInstances testDetermineScriptWithNonSharedInstance \"net.sf.asterisk.fastagi.unavailable\" testDetermineScriptWithResourceBundleUnavailable \"script instances are not cached\" HelloAgiScript HelloAgiScript getClass getClass \"incorrect script determined\" \"incorrect script determined\" \"no script determined\" determineScript determineScript determineScript determineScript determineScript SimpleAgiRequest SimpleAgiRequest SimpleAgiRequest request request request request request request request request request request request AgiRequest AgiRequest AgiRequest scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptSecondPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass scriptFirstPass AgiScript AgiScript AgiScript AgiScript testDetermineScript \"test-mapping\" setResourceBundleName setResourceBundleName new new new new this this setUp void void void void @ @ @ @ mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy mappingStrategy ResourceBundleMappingStrategy ResourceBundleMappingStrategy private ResourceBundleMappingStrategyTest class class class public public public public public Test Test Test Test Before Before assertTrue assertTrue assertTrue assertNull assertNull assertNotNull assertNotNull assertEquals assertEquals assertEquals Assert Assert Assert Assert junit junit junit junit junit junit static static static static import import import import import import fastagi asteriskjava org org org org org org org package ",
            "ResponseBuilderImplTest": "getStatus \"Status not set correctly\" getHint \"Hint not set correctly\" getContext \"Context not set correctly\" getExten \"Exten not set correctly\" extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse extensionStateResponse \"-1\" \"status\" \"\" \"\" \"hint\" \"default\" \"default\" \"context\" \"exten\" \"Extension Status\" testBuildExtensionStateResponse getOldMessages \"Old messages set correctly\" getNewMessages valueOf valueOf valueOf Integer Integer Integer \"New messages not set correctly\" mailboxCountResponse mailboxCountResponse mailboxCountResponse mailboxCountResponse \"5\" \"oldmessages\" \"2\" \"newmessages\" \"123@myctx\" \"123@myctx\" \"Mailbox Message Count\" testBuildMailboxCountResponse FALSE \"0\" \"123,user2\" \"123,user2\" testBuildMailboxStatusResponseWithNoWaiting getWaiting getWaiting TRUE Boolean Boolean \"Waiting not set correctly\" \"Waiting not set correctly\" getMailbox getMailbox getMailbox \"Mailbox not set correctly\" \"Mailbox not set correctly\" \"Mailbox not set correctly\" mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse mailboxStatusResponse \"1\" \"1\" \"1\" \"waiting\" \"waiting\" \"123\" \"123\" \"mailbox\" \"mailbox\" \"mailbox\" \"Mailbox Status\" \"Mailbox Status\" testBuildMailboxStatusResponse getChallenge \"Challenge not set correctly\" \"131494410\" \"131494410\" \"challenge\" testBuildChallengeResponse getActionId \"ActionId not set correctly\" \"1234\" \"1234\" \"actionid\" testBuildErrorWithActionId getMessage \"Message not set correctly\" \"Missing action in request\" \"Missing action in request\" \"Missing action in request\" \"message\" \"message\" \"message\" \"message\" \"message\" \"message\" \"Error\" \"Error\" testBuildError null testBuildResponseWithoutResponseClass getResponse getResponse \"Response not set correctly\" \"Response not set correctly\" getClass getClass getClass getClass getClass getClass getClass getClass \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" \"Response of wrong type\" buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse buildResponse \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"Success\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" \"response\" put put put put put put put put put put put put put put put put put put put put put put put put put put put put testBuildResponse new new this this setUp void void void void void void void void void void @ @ @ @ @ @ @ @ @ @ attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes attributes Object Object String String responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder responseBuilder ResponseBuilderImpl ResponseBuilderImpl private private ResponseBuilderImplTest class class class class class class class class class class class class class class class class class public public public public public public public public public public public Test Test Test Test Test Test Test Test Test Test Before Before ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerResponse ManagerError ManagerError MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxStatusResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse MailboxCountResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ExtensionStateResponse ChallengeResponse ChallengeResponse ChallengeResponse ChallengeResponse response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response response Map Map HashMap HashMap util util java java assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import import import import import import import import import internal manager manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "RtcpReceivedEventTest": "\"1.2345 (sec)\" testDlSrWithSpace getDlSr \"1.2345(sec)\" setDlSr setDlSr testDlSr PT_SENDER_REPORT getPt getPt Long Long \"200(Sender Report)\" setPt testPt getFromPort Integer getHostAddress getFromAddress \"192.168.0.1\" \"192.168.0.1:1234\" setFrom testFrom this new new new new setUp void void void void void @ @ @ @ @ rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent rtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent RtcpReceivedEvent private RtcpReceivedEventTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import event manager asteriskjava org org org org package ",
            "ScriptEngineMappingStrategyTest": "testSearchFileOutsidePath getPath \"bla\" getCanonicalPath \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \"pom.xml\" \".\" \".\" \"test\" \"test\" \"src\" \"src\" \"src\" String String String String null null searchFile searchFile searchFile searchFile searchFile throws testSearchFile new new new new new new this setUp void void void @ @ @ scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy scriptEngineMappingStrategy private ScriptEngineMappingStrategyTest class public public public public Test Test Test Before Before IOException IOException File File io io java java assertNull assertNull assertNull assertNull assertNull assertEquals assertEquals Assert Assert junit junit junit junit getExtension ScriptEngineMappingStrategy ScriptEngineMappingStrategy ScriptEngineMappingStrategy static static static import import import import import import import fastagi fastagi asteriskjava asteriskjava org org org org org org package ",
            "SipShowPeerResponseTest": "getMohsuggest \"Incorrect mohsuggest\" \"default\" \"default\" setMohsuggest testSetMohsuggest \": 60000 ms\\nChanVariable:\\n PHBX_ID,191\" testSetQualifyFreqWithWorkaroundAndChanVariable \": 6000 ms\\n\" testSetQualifyFreqWithWorkaround getQualifyFreq getQualifyFreq getQualifyFreq int int int \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"Incorrect qualifyFreq\" \"6000 ms\" setQualifyFreq setQualifyFreq setQualifyFreq testSetQualifyFreq new setUp void void void void void @ @ @ @ @ SipShowPeerResponse SipShowPeerResponse private SipShowPeerResponseTest class public public public public public public Test Test Test Test Test Before Before assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit junit static import import import response response response response response response response response response response response manager asteriskjava org org org org package ",
            "SkypeBuddyStatusEventTest": "getBuddySkypename \"the.buddy\" testGetBuddySkypename getUser \"user\" testGetUser \"Skype/user@the.buddy\" setBuddy this new setUp void void void @ @ @ SkypeBuddyStatusEvent SkypeBuddyStatusEvent private SkypeBuddyStatusEventTest class public public public public Test Test Test Before Before assertEquals assertEquals assertEquals Assert junit junit junit static import import import event event event event event event manager asteriskjava org org org org package ",
            "SkypeChatMessageEventTest": "getDecodedMessage \"h\u00f6\u00f6\u00f6?\" \"Inocrrectly decoded message\" \"aMO2w7bDtj8=\" setMessage this new SkypeChatMessageEvent SkypeChatMessageEvent final testGetDecodedMessage void @ SkypeChatMessageEventTest class public public Test Test assertEquals assertEquals Assert junit junit static import import event event event event manager asteriskjava org org org package ",
            "T38FaxStatusEventTest": "getAverageRxDataRateInBps getAverageTxDataRateInBps getAverageLagInMilliSeconds getT38SessionDurationInSeconds getMaxLagInMilliSeconds intValue intValue intValue intValue getTotalLagInMilliSeconds \"0 bps\" setAverageRxDataRate \"363 bps\" setAverageTxDataRate \"-1.80 ms\" setAverageLag setT38SessionDuration \"4 ms\" setMaxLag \"-9 ms\" setTotalLag testParseProperties \"0.022 sec.\" \"0.022 sec.\" stripUnit \"0.022\" this this new new T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent T38FaxStatusEvent testStripUnit void void @ @ T38FaxStatusEventTest class public public public Test Test Test assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals assertEquals Assert junit junit static import import event event event event event event event event event event event event event event event event manager asteriskjava org org org package "
        },
        "deleted_diff_per_file": {
            "src/main/java/org/asteriskjava/manager/internal/AbstractBuilder.java": "                    logger.warn(\"Key: \" + entry2.getKey() + \" Value: \" + entry2.getValue());\n",
            "src/main/java/org/asteriskjava/manager/internal/EventBuilderImpl.java": "import java.io.File;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.net.URL;\nimport java.net.URLDecoder;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.jar.JarEntry;\nimport java.util.jar.JarFile;\n    private final static Set<Class< ? extends ManagerEvent>> knownManagerEventClasses = loadEventClasses();\n    @SuppressWarnings(\"unchecked\")\n    private static Set<Class< ? extends ManagerEvent>> loadEventClasses()\n    {\n        Set<Class< ? extends ManagerEvent>> result = new HashSet<>();\n        try\n        {\n            Set<String> classNames = getClassNamesFromPackage(\"org.asteriskjava.manager.event\");\n            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n            for (String className : classNames)\n            {\n                try\n                {\n                    Class< ? > clazz = classLoader.loadClass(\"org.asteriskjava.manager.event.\" + className);\n                    if (!Modifier.isAbstract(clazz.getModifiers()) && ManagerEvent.class.isAssignableFrom(clazz))\n                    {\n                        result.add((Class< ? extends ManagerEvent>) clazz);\n                    }\n                }\n                catch (Throwable e)\n                {\n                    logger.error(e, e);\n                }\n            }\n            logger.error(\"Loaded \" + result.size());\n        }\n        catch (Exception e)\n        {\n            logger.error(e, e);\n        }\n        return result;\n    }\n    public static Set<String> getClassNamesFromPackage(String packageName) throws IOException, URISyntaxException\n    {\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        Enumeration<URL> packageURLs;\n        Set<String> names = new HashSet<String>();\n        packageName = packageName.replace(\".\", \"/\");\n        packageURLs = classLoader.getResources(packageName);\n        while (packageURLs.hasMoreElements())\n        {\n            URL packageURL = packageURLs.nextElement();\n            if (packageURL.getProtocol().equals(\"jar\"))\n            {\n                String jarFileName;\n                Enumeration<JarEntry> jarEntries;\n                String entryName;\n                jarFileName = URLDecoder.decode(packageURL.getFile(), \"UTF-8\");\n                jarFileName = jarFileName.substring(5, jarFileName.indexOf(\"!\"));\n                System.out.println(\">\" + jarFileName);\n                try (JarFile jf = new JarFile(jarFileName);)\n                {\n                    jarEntries = jf.entries();\n                    while (jarEntries.hasMoreElements())\n                    {\n                        entryName = jarEntries.nextElement().getName();\n                        if (entryName.startsWith(packageName) && entryName.endsWith(\".class\"))\n                        {\n                            entryName = entryName.substring(packageName.length() + 1, entryName.lastIndexOf('.'));\n                            names.add(entryName);\n                        }\n                    }\n                }\n            }\n            else\n            {\n                URI uri = new URI(packageURL.toString());\n                File folder = new File(uri.getPath());\n                File[] contenuti = folder.listFiles();\n                String entryName;\n                for (File actual : contenuti)\n                {\n                    entryName = actual.getName();\n                    entryName = entryName.substring(0, entryName.lastIndexOf('.'));\n                    names.add(entryName);\n                }\n            }\n        }\n        Iterator<String> itr = names.iterator();\n        while (itr.hasNext())\n        {\n            String name = itr.next();\n            if (name.equals(\"package\") || name.endsWith(\".\") || name.length() == 0)\n            {\n                itr.remove();\n            }\n        }\n        return names;\n    }\n",
            "src/main/java/org/asteriskjava/pbx/asterisk/wrap/events/DbGetResponseEvent.java": "    DbGetResponseEvent(final org.asteriskjava.manager.event.DbGetResponseEvent event)\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentEventFactory.java": "import org.asteriskjava.pbx.asterisk.wrap.events.AgentCalledEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.AgentConnectEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.BridgeEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ConfbridgeListCompleteEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ConfbridgeListEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ConnectEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.DialEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.DisconnectEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.DndStateEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ExtensionStatusEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.HangupEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.LinkEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.MasqueradeEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.MeetMeJoinEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.MeetMeLeaveEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.NewChannelEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.NewStateEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.OriginateResponseEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.ParkedCallEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.PeerEntryEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.PeerStatusEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.PeerlistCompleteEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.QueueCallerLeaveEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.RenameEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.StatusCompleteEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.StatusEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.UnlinkEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.UnparkedCallEvent;\nimport org.asteriskjava.pbx.asterisk.wrap.events.VarSetEvent;\n@SuppressWarnings(\"deprecation\")\n    static Hashtable<Class< ? extends org.asteriskjava.manager.event.ManagerEvent>, Class< ? extends ManagerEvent>> mapEvents = new Hashtable<>();\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.AgentCalledEvent.class, AgentCalledEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.AgentConnectEvent.class, AgentConnectEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.QueueCallerLeaveEvent.class,\n                QueueCallerLeaveEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.BridgeEvent.class, BridgeEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.ConnectEvent.class, ConnectEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.DialEvent.class, DialEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.DisconnectEvent.class, DisconnectEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.DndStateEvent.class, DndStateEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.ExtensionStatusEvent.class,\n                ExtensionStatusEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.HangupEvent.class, HangupEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.LinkEvent.class, LinkEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.MasqueradeEvent.class, MasqueradeEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.MeetMeJoinEvent.class, MeetMeJoinEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.MeetMeLeaveEvent.class, MeetMeLeaveEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.NewChannelEvent.class, NewChannelEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.NewStateEvent.class, NewStateEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.ParkedCallEvent.class, ParkedCallEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.PeerStatusEvent.class, PeerStatusEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.RenameEvent.class, RenameEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.ResponseEvent.class, ResponseEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.UnlinkEvent.class, UnlinkEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.UnparkedCallEvent.class, UnparkedCallEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.VarSetEvent.class, VarSetEvent.class);\n        CoherentEventFactory.mapResponses.put(org.asteriskjava.manager.event.OriginateResponseEvent.class,\n                OriginateResponseEvent.class);\n        CoherentEventFactory.mapResponses.put(org.asteriskjava.manager.event.PeerEntryEvent.class, PeerEntryEvent.class);\n        CoherentEventFactory.mapResponses.put(org.asteriskjava.manager.event.PeerlistCompleteEvent.class,\n                PeerlistCompleteEvent.class);\n        CoherentEventFactory.mapResponses.put(org.asteriskjava.manager.event.StatusCompleteEvent.class,\n                StatusCompleteEvent.class);\n        CoherentEventFactory.mapResponses.put(org.asteriskjava.manager.event.StatusEvent.class, StatusEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.ConfbridgeListEvent.class,\n                ConfbridgeListEvent.class);\n        CoherentEventFactory.mapEvents.put(org.asteriskjava.manager.event.ConfbridgeListCompleteEvent.class,\n                ConfbridgeListCompleteEvent.class);\n",
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": "    public static Map<String, Method> getGetters(final Class<?> clazz)\n    public static Map<String, Method> getSetters(Class<?> clazz)\n            Class<?> clazz = classLoader.loadClass(s);\n            Constructor<?> constructor = clazz.getConstructor();\n"
        },
        "deleted_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/manager/internal/AbstractBuilder.java": [
                82
            ],
            "src/main/java/org/asteriskjava/manager/internal/EventBuilderImpl.java": [
                19,
                20,
                23,
                24,
                25,
                26,
                29,
                32,
                38,
                39,
                63,
                75,
                76,
                77,
                78,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                107,
                108,
                110,
                111,
                112,
                113,
                114,
                116,
                117,
                119,
                120,
                121,
                122,
                123,
                124,
                126,
                127,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                148,
                149,
                150,
                151,
                152,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                174,
                175,
                177,
                178
            ],
            "src/main/java/org/asteriskjava/pbx/asterisk/wrap/events/DbGetResponseEvent.java": [
                11
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentEventFactory.java": [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                34,
                35,
                36,
                37,
                38,
                51,
                57,
                70,
                72,
                73,
                74,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                99,
                100,
                101,
                102,
                103,
                105,
                106,
                107,
                109,
                110,
                111,
                112
            ],
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": [
                50,
                96,
                219,
                220
            ]
        },
        "diff_code": "+                    logger.debug(\"Key: \" + entry2.getKey() + \" Value: \" + entry2.getValue());\n+    private final static Set<Class<ManagerEvent>> knownManagerEventClasses = ReflectionUtil\n+            .loadClasses(\"org.asteriskjava.manager.event\", ManagerEvent.class);\n+    public DbGetResponseEvent(final org.asteriskjava.manager.event.DbGetResponseEvent event)\n+    static Hashtable<Class<org.asteriskjava.manager.event.ManagerEvent>, Class<ManagerEvent>> mapEvents = new Hashtable<>();\n+        Set<Class<ManagerEvent>> knownClasses = ReflectionUtil.loadClasses(\"org.asteriskjava.pbx.asterisk.wrap.events\",\n+                ManagerEvent.class);\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        for (Class< ? > known : knownClasses)\n+        {\n+            Class< ? > clazz = null;\n+            try\n+            {\n+                clazz = classLoader.loadClass(\"org.asteriskjava.manager.event\" + \".\" + known.getSimpleName());\n+                if (!Modifier.isAbstract(clazz.getModifiers()))\n+                {\n+                    if (known.getConstructor(clazz) != null)\n+                    {\n+                        if (ResponseEvent.class.isAssignableFrom(known))\n+                        {\n+                            CoherentEventFactory.mapResponses.put(\n+                                    (Class<org.asteriskjava.manager.event.ResponseEvent>) clazz,\n+                                    (Class<ResponseEvent>) known);\n+                            logger.info(\"Response Event Added \" + clazz + \" --> \" + known);\n+                        }\n+                        else\n+                        {\n+                            CoherentEventFactory.mapEvents.put((Class<org.asteriskjava.manager.event.ManagerEvent>) clazz,\n+                                    (Class<ManagerEvent>) known);\n+                            logger.info(\"Manager Event Added \" + clazz + \" --> \" + known);\n+                        }\n+                    }\n+                    else\n+                    {\n+                        logger.warn(\"Skipping class \" + clazz + \" it doesn't have a public constructor with one arg of type \"\n+                                + known);\n+                    }\n+                }\n+                else\n+                {\n+                    logger.info(\"Skipping abstract class \" + clazz);\n+                }\n+            }\n+            catch (ClassNotFoundException e)\n+            {\n+                logger.error(e, e);\n+                throw new RuntimeException(e);\n+            }\n+            catch (NoSuchMethodException e)\n+            {\n+                logger.error(clazz.getCanonicalName() + \" doesn't have an appropriate event constructor\");\n+            }\n+            catch (SecurityException e)\n+            {\n+                logger.error(e, e);\n+            }\n+        }\n+    public static Map<String, Method> getGetters(final Class< ? > clazz)\n+    public static Map<String, Method> getSetters(Class< ? > clazz)\n+            Class< ? > clazz = classLoader.loadClass(s);\n+            Constructor< ? > constructor = clazz.getConstructor();\n+    private static final Log logger = LogFactory.getLog(ReflectionUtil.class);\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> Set<Class<T>> loadClasses(String packageName, Class<T> baseClassOrInterface)\n+    {\n+        Set<Class<T>> result = new HashSet<>();\n+        try\n+        {\n+            Set<String> classNames = getClassNamesFromPackage(packageName);\n+            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+            for (String className : classNames)\n+            {\n+                try\n+                {\n+                    Class< ? > clazz = classLoader.loadClass(packageName + \".\" + className);\n+                    if (!Modifier.isAbstract(clazz.getModifiers()) && baseClassOrInterface.isAssignableFrom(clazz))\n+                    {\n+                        result.add((Class<T>) clazz);\n+                    }\n+                }\n+                catch (Throwable e)\n+                {\n+                    logger.error(e, e);\n+                }\n+            }\n+            logger.info(\"Loaded \" + result.size());\n+        }\n+        catch (Exception e)\n+        {\n+            logger.error(e, e);\n+        }\n+        return result;\n+    }\n+    private static Set<String> getClassNamesFromPackage(String packageName) throws IOException, URISyntaxException\n+    {\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        Enumeration<URL> packageURLs;\n+        Set<String> names = new HashSet<String>();\n+        packageName = packageName.replace(\".\", \"/\");\n+        packageURLs = classLoader.getResources(packageName);\n+        while (packageURLs.hasMoreElements())\n+        {\n+            URL packageURL = packageURLs.nextElement();\n+            if (packageURL.getProtocol().equals(\"jar\"))\n+            {\n+                String jarFileName;\n+                Enumeration<JarEntry> jarEntries;\n+                String entryName;\n+                jarFileName = URLDecoder.decode(packageURL.getFile(), \"UTF-8\");\n+                jarFileName = jarFileName.substring(5, jarFileName.indexOf(\"!\"));\n+                logger.info(\">\" + jarFileName);\n+                try (JarFile jf = new JarFile(jarFileName);)\n+                {\n+                    jarEntries = jf.entries();\n+                    while (jarEntries.hasMoreElements())\n+                    {\n+                        entryName = jarEntries.nextElement().getName();\n+                        if (entryName.startsWith(packageName) && entryName.endsWith(\".class\"))\n+                        {\n+                            entryName = entryName.substring(packageName.length() + 1, entryName.lastIndexOf('.'));\n+                            names.add(entryName);\n+                        }\n+                    }\n+                }\n+            }\n+            else\n+            {\n+                URI uri = new URI(packageURL.toString());\n+                File folder = new File(uri.getPath());\n+                File[] contenuti = folder.listFiles();\n+                String entryName;\n+                for (File actual : contenuti)\n+                {\n+                    entryName = actual.getName();\n+                    entryName = entryName.substring(0, entryName.lastIndexOf('.'));\n+                    names.add(entryName);\n+                }\n+            }\n+        }\n+        Iterator<String> itr = names.iterator();\n+        while (itr.hasNext())\n+        {\n+            String name = itr.next();\n+            if (name.equals(\"package\") || name.endsWith(\".\") || name.length() == 0)\n+            {\n+                itr.remove();\n+            }\n+        }\n+        return names;\n+    }\n",
        "diff_line_number_list_per_file": {
            "src/main/java/org/asteriskjava/manager/internal/AbstractBuilder.java": [
                82
            ],
            "src/main/java/org/asteriskjava/manager/internal/EventBuilderImpl.java": [
                38,
                54,
                55
            ],
            "src/main/java/org/asteriskjava/pbx/asterisk/wrap/events/DbGetResponseEvent.java": [
                11
            ],
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentEventFactory.java": [
                5,
                7,
                17,
                25,
                31,
                40,
                41,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94
            ],
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": [
                19,
                20,
                24,
                25,
                26,
                27,
                28,
                29,
                31,
                32,
                35,
                36,
                37,
                65,
                112,
                238,
                239,
                266,
                276,
                277,
                278,
                279,
                281,
                282,
                283,
                284,
                285,
                286,
                287,
                288,
                289,
                290,
                291,
                292,
                293,
                294,
                295,
                296,
                297,
                298,
                300,
                301,
                302,
                303,
                304,
                305,
                306,
                308,
                309,
                320,
                321,
                322,
                323,
                324,
                326,
                327,
                329,
                330,
                331,
                332,
                333,
                334,
                336,
                337,
                340,
                341,
                342,
                343,
                344,
                345,
                346,
                347,
                348,
                349,
                350,
                351,
                352,
                353,
                354,
                355,
                358,
                359,
                360,
                361,
                362,
                365,
                366,
                367,
                368,
                369,
                370,
                371,
                372,
                373,
                374,
                377,
                378,
                379,
                380,
                381,
                382,
                383,
                384,
                385,
                387,
                388
            ]
        },
        "diff_per_file": {
            "src/main/java/org/asteriskjava/manager/internal/AbstractBuilder.java": "                    logger.debug(\"Key: \" + entry2.getKey() + \" Value: \" + entry2.getValue());\n",
            "src/main/java/org/asteriskjava/manager/internal/EventBuilderImpl.java": "import org.asteriskjava.util.ReflectionUtil;\n    private final static Set<Class<ManagerEvent>> knownManagerEventClasses = ReflectionUtil\n            .loadClasses(\"org.asteriskjava.manager.event\", ManagerEvent.class);\n",
            "src/main/java/org/asteriskjava/pbx/asterisk/wrap/events/DbGetResponseEvent.java": "    public DbGetResponseEvent(final org.asteriskjava.manager.event.DbGetResponseEvent event)\n",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentEventFactory.java": "import java.lang.reflect.Modifier;\nimport java.util.Set;\nimport org.asteriskjava.util.ReflectionUtil;\n@SuppressWarnings({\"unchecked\"})\n    static Hashtable<Class<org.asteriskjava.manager.event.ManagerEvent>, Class<ManagerEvent>> mapEvents = new Hashtable<>();\n        Set<Class<ManagerEvent>> knownClasses = ReflectionUtil.loadClasses(\"org.asteriskjava.pbx.asterisk.wrap.events\",\n                ManagerEvent.class);\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        for (Class< ? > known : knownClasses)\n        {\n            Class< ? > clazz = null;\n            try\n            {\n                clazz = classLoader.loadClass(\"org.asteriskjava.manager.event\" + \".\" + known.getSimpleName());\n                if (!Modifier.isAbstract(clazz.getModifiers()))\n                {\n                    if (known.getConstructor(clazz) != null)\n                    {\n                        if (ResponseEvent.class.isAssignableFrom(known))\n                        {\n                            CoherentEventFactory.mapResponses.put(\n                                    (Class<org.asteriskjava.manager.event.ResponseEvent>) clazz,\n                                    (Class<ResponseEvent>) known);\n                            logger.info(\"Response Event Added \" + clazz + \" --> \" + known);\n                        }\n                        else\n                        {\n                            CoherentEventFactory.mapEvents.put((Class<org.asteriskjava.manager.event.ManagerEvent>) clazz,\n                                    (Class<ManagerEvent>) known);\n                            logger.info(\"Manager Event Added \" + clazz + \" --> \" + known);\n                        }\n                    }\n                    else\n                    {\n                        logger.warn(\"Skipping class \" + clazz + \" it doesn't have a public constructor with one arg of type \"\n                                + known);\n                    }\n                }\n                else\n                {\n                    logger.info(\"Skipping abstract class \" + clazz);\n                }\n            }\n            catch (ClassNotFoundException e)\n            {\n                logger.error(e, e);\n                throw new RuntimeException(e);\n            }\n            catch (NoSuchMethodException e)\n            {\n                logger.error(clazz.getCanonicalName() + \" doesn't have an appropriate event constructor\");\n            }\n            catch (SecurityException e)\n            {\n                logger.error(e, e);\n            }\n        }\n",
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": "import java.io.File;\nimport java.io.IOException;\nimport java.lang.reflect.Modifier;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.net.URL;\nimport java.net.URLDecoder;\nimport java.util.Enumeration;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.Set;\nimport java.util.jar.JarEntry;\nimport java.util.jar.JarFile;\n    public static Map<String, Method> getGetters(final Class< ? > clazz)\n    public static Map<String, Method> getSetters(Class< ? > clazz)\n            Class< ? > clazz = classLoader.loadClass(s);\n            Constructor< ? > constructor = clazz.getConstructor();\n    private static final Log logger = LogFactory.getLog(ReflectionUtil.class);\n    @SuppressWarnings(\"unchecked\")\n    public static <T> Set<Class<T>> loadClasses(String packageName, Class<T> baseClassOrInterface)\n    {\n        Set<Class<T>> result = new HashSet<>();\n        try\n        {\n            Set<String> classNames = getClassNamesFromPackage(packageName);\n            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n            for (String className : classNames)\n            {\n                try\n                {\n                    Class< ? > clazz = classLoader.loadClass(packageName + \".\" + className);\n                    if (!Modifier.isAbstract(clazz.getModifiers()) && baseClassOrInterface.isAssignableFrom(clazz))\n                    {\n                        result.add((Class<T>) clazz);\n                    }\n                }\n                catch (Throwable e)\n                {\n                    logger.error(e, e);\n                }\n            }\n            logger.info(\"Loaded \" + result.size());\n        }\n        catch (Exception e)\n        {\n            logger.error(e, e);\n        }\n        return result;\n    }\n    private static Set<String> getClassNamesFromPackage(String packageName) throws IOException, URISyntaxException\n    {\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        Enumeration<URL> packageURLs;\n        Set<String> names = new HashSet<String>();\n        packageName = packageName.replace(\".\", \"/\");\n        packageURLs = classLoader.getResources(packageName);\n        while (packageURLs.hasMoreElements())\n        {\n            URL packageURL = packageURLs.nextElement();\n            if (packageURL.getProtocol().equals(\"jar\"))\n            {\n                String jarFileName;\n                Enumeration<JarEntry> jarEntries;\n                String entryName;\n                jarFileName = URLDecoder.decode(packageURL.getFile(), \"UTF-8\");\n                jarFileName = jarFileName.substring(5, jarFileName.indexOf(\"!\"));\n                logger.info(\">\" + jarFileName);\n                try (JarFile jf = new JarFile(jarFileName);)\n                {\n                    jarEntries = jf.entries();\n                    while (jarEntries.hasMoreElements())\n                    {\n                        entryName = jarEntries.nextElement().getName();\n                        if (entryName.startsWith(packageName) && entryName.endsWith(\".class\"))\n                        {\n                            entryName = entryName.substring(packageName.length() + 1, entryName.lastIndexOf('.'));\n                            names.add(entryName);\n                        }\n                    }\n                }\n            }\n            else\n            {\n                URI uri = new URI(packageURL.toString());\n                File folder = new File(uri.getPath());\n                File[] contenuti = folder.listFiles();\n                String entryName;\n                for (File actual : contenuti)\n                {\n                    entryName = actual.getName();\n                    entryName = entryName.substring(0, entryName.lastIndexOf('.'));\n                    names.add(entryName);\n                }\n            }\n        }\n        Iterator<String> itr = names.iterator();\n        while (itr.hasNext())\n        {\n            String name = itr.next();\n            if (name.equals(\"package\") || name.endsWith(\".\") || name.length() == 0)\n            {\n                itr.remove();\n            }\n        }\n        return names;\n    }\n"
        },
        "ekstazi_failed_test_list": [],
        "ekstazi_select_time": 0,
        "ekstazi_test_list": [],
        "ekstazi_total_time": 0,
        "failed_test_list": [],
        "passed_test_list": [
            "AbstractAgiCommandTest",
            "CallerIdTest",
            "ResponseBuilderImplTest",
            "AbstractManagerEventListenerTest",
            "AstUtilTest",
            "CompositeMappingStrategyTest",
            "NewStateEventTest",
            "CdrEventTest",
            "FastScannerDeterministicTest",
            "ChannelReloadEventTest",
            "ResourceBundleMappingStrategyTest",
            "GetDataCommandTest",
            "ScriptEngineMappingStrategyTest",
            "ActionBuilderImplTest",
            "EventBuilderImplTest",
            "AgiReaderImplTest",
            "AsyncAgiEventTest",
            "DefaultAgiServerTest",
            "QueueMemberStateTest",
            "AsteriskChannelImplTest",
            "T38FaxStatusEventTest",
            "BridgeEnterEventComparatorTest",
            "RateLimiterTest",
            "FastScannerRandomTest",
            "ClassNameMappingStrategyTest",
            "HangupCauseTest",
            "AgiReplyImplTest",
            "AsteriskQueueMemberImplTest",
            "ConfigFileParserTest",
            "SkypeChatMessageEventTest",
            "CoreStatusResponseTest",
            "AgiChannelImplTest",
            "AsteriskAgentImplTest",
            "DateUtilTest",
            "RtcpReceivedEventTest",
            "SkypeBuddyStatusEventTest",
            "AgiRequestImplTest",
            "FastScannerSpeedTest",
            "AsteriskVersionTest",
            "AgiWriterImplTest",
            "SipShowPeerResponseTest",
            "ExecCommandTest",
            "ManagerReaderImplTest",
            "ListenerManagerTest",
            "ManagerConnectionImplTest",
            "ManagerWriterImplTest"
        ],
        "prev_commit": "b7c35d5b",
        "queries": {
            "src/main/java/org/asteriskjava/manager/internal/AbstractBuilder.java": "\"s\" endsWith get \"clazz\" \"class\" else \"src\" equals equals \"source\" stripIllegalCharacters continue getKey getKey contains null null if if if if setterName setterName setterName setterName setterName setterName setterName setterName setter setter setter dataType Class value entrySet entry entry entry for getSetters setters setters setters ignoredAttributes ignoredAttributes ignoredAttributes attributes attributes String String String String String target target Object Object Object Object setAttributes void \"unchecked\" SuppressWarnings @ getClass getClass getLog logger final final protected protected AbstractBuilder class abstract ReflectionUtil ReflectionUtil ReflectionUtil LogFactory LogFactory Log Log AstUtil ManagerResponse response UserEvent event Set Set Entry Entry Map Map Map Map Map List LinkedHashMap util util util util util util util util util Method Method Method Constructor reflect reflect lang lang java java java java java java java import import import import import import import import import import import import import internal manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org package ",
            "src/main/java/org/asteriskjava/manager/internal/EventBuilderImpl.java": "equals \"PeerEntry\" isEmpty eventNames eventNames eventNames instanceof return \"No event type in properties\" error get get get get constructor eventClass null null null attributes attributes attributes attributes source buildEvent \"unchecked\" SuppressWarnings @ \")\" \"' (\" \"Registered event type '\" debug US put \" has no public default constructor\" PUBLIC \" has no usable constructor\" ex NoSuchMethodException catch Object Object Object getConstructor try \" is abstract\" ABSTRACT getModifiers getModifiers \" is not a ManagerEvent\" throw throw throw throw defaultConstructor defaultConstructor defaultConstructor \"userevent\" \"userevent\" startsWith isAssignableFrom isAssignableFrom length length endsWith if if if if if if if if ENGLISH toLowerCase toLowerCase '.' lastIndexOf substring substring getName eventType eventType eventType eventType eventType eventType eventType eventType eventType eventType eventType eventType eventType eventType className className className className IllegalArgumentException IllegalArgumentException IllegalArgumentException IllegalArgumentException IllegalArgumentException IllegalArgumentException throws throws clazz clazz clazz clazz clazz clazz clazz clazz clazz clazz clazz clazz clazz clazz public public public registerEventClass registerEventClass registerEventClass registerEventClass managerEventClass managerEventClass for void void void registerBuiltinEventClasses registerBuiltinEventClasses this \"org.asteriskjava.manager.event\" loadClasses knownManagerEventClasses knownManagerEventClasses getLog logger logger logger registeredEventClasses registeredEventClasses registeredEventClasses Class Class Class Class Class Class \"event\" \"event\" \"event\" \"event\" \"event\" \"event\" asList new new new new new new ignoredAttributes String String String String String String String final final final final final static static static private private private private private EventBuilder implements AbstractBuilder extends extends extends extends EventBuilderImpl EventBuilderImpl EventBuilderImpl class class class class class class ReflectionUtil ReflectionUtil LogFactory LogFactory Log Log UserEvent UserEvent ResponseEvent PeersEvent PeerEntryEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent ManagerEvent event event event event event event Set Set Set Entry Map Map Map Map Locale Locale Locale List List List List HashSet HashSet HashMap HashMap Arrays Arrays ArrayList util util util util util util util util util util util util Modifier Modifier Modifier Constructor Constructor Constructor reflect reflect lang lang java java java java java java java java java java java import import import import import import import import import import import import import import import import import import import internal manager manager manager manager manager manager asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/pbx/asterisk/wrap/events/DbGetResponseEvent.java": "return return return getVal getVal getKey getKey getFamily getFamily this this this this this this super event event event event event event manager val val val key key key family family family String String String String String String serialVersionUID long final final final final final static private private private private ManagerEvent extends DbGetResponseEvent DbGetResponseEvent DbGetResponseEvent class public public public public public events wrap asterisk pbx asteriskjava asteriskjava org org package ",
            "src/main/java/org/asteriskjava/pbx/internal/core/CoherentEventFactory.java": "getLog logger final static private CoherentEventFactory CoherentEventFactory class class public \"unchecked\" SuppressWarnings @ ReflectionUtil LogFactory LogFactory Log Log ManagerResponse ManagerError CommandResponse response response response ResponseEvent ManagerEvent events events ManagerAction actions wrap wrap wrap wrap wrap wrap asterisk asterisk asterisk asterisk asterisk asterisk Set Hashtable util util util util util Modifier InvocationTargetException Constructor reflect reflect reflect lang lang lang java java java java java import import import import import import import import import import import import import import core internal pbx pbx pbx pbx pbx pbx pbx asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava asteriskjava org org org org org org org org org org package ",
            "src/main/java/org/asteriskjava/util/ReflectionUtil.java": "private ReflectionUtil ReflectionUtil class public JarFile JarEntry jar jar Set Map Locale Iterator HashSet HashMap Enumeration URLDecoder URL URISyntaxException URI net net net net Modifier Method InvocationTargetException Constructor reflect reflect reflect reflect lang lang lang lang IOException File io io java java java java java java java java java java java java java java java java java java java import import import import import import import import import import import import import import import import import import import util util util util util util util util util util asteriskjava org package "
        },
        "starts_failed_test_list": [],
        "starts_select_time": 0,
        "starts_test_list": [],
        "starts_total_time": 0,
        "tests_cases_num": {
            "AbstractAgiCommandTest": 6,
            "AbstractManagerEventListenerTest": 2,
            "ActionBuilderImplTest": 16,
            "AgiChannelImplTest": 3,
            "AgiReaderImplTest": 5,
            "AgiReplyImplTest": 12,
            "AgiRequestImplTest": 24,
            "AgiWriterImplTest": 1,
            "AstUtilTest": 7,
            "AsteriskAgentImplTest": 1,
            "AsteriskChannelImplTest": 1,
            "AsteriskQueueMemberImplTest": 1,
            "AsteriskVersionTest": 4,
            "AsyncAgiEventTest": 2,
            "BridgeEnterEventComparatorTest": 17,
            "CallerIdTest": 7,
            "CdrEventTest": 3,
            "ChannelReloadEventTest": 3,
            "ClassNameMappingStrategyTest": 2,
            "CompositeMappingStrategyTest": 2,
            "ConfigFileParserTest": 4,
            "CoreStatusResponseTest": 2,
            "DateUtilTest": 2,
            "DefaultAgiServerTest": 4,
            "EventBuilderImplTest": 35,
            "ExecCommandTest": 5,
            "FastScannerDeterministicTest": 3,
            "FastScannerRandomTest": 2,
            "FastScannerSpeedTest": 3,
            "GetDataCommandTest": 4,
            "HangupCauseTest": 1,
            "ListenerManagerTest": 1,
            "ManagerConnectionImplTest": 22,
            "ManagerReaderImplTest": 9,
            "ManagerWriterImplTest": 2,
            "NewStateEventTest": 2,
            "QueueMemberStateTest": 2,
            "RateLimiterTest": 1,
            "ResourceBundleMappingStrategyTest": 3,
            "ResponseBuilderImplTest": 9,
            "RtcpReceivedEventTest": 5,
            "ScriptEngineMappingStrategyTest": 3,
            "SipShowPeerResponseTest": 4,
            "SkypeBuddyStatusEventTest": 2,
            "SkypeChatMessageEventTest": 1,
            "T38FaxStatusEventTest": 2
        }
    }
]